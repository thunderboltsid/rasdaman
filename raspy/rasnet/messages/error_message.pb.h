// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error_message.proto

#ifndef PROTOBUF_error_5fmessage_2eproto__INCLUDED
#define PROTOBUF_error_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

//#if GOOGLE_PROTOBUF_VERSION < 3000000
//#error This file was generated by a newer version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please update
//#error your headers.
//#endif
//#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
//#error This file was generated by an older version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please
//#error regenerate this file with a newer version of protoc.
//#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rasnet {
namespace service {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_error_5fmessage_2eproto();
void protobuf_AssignDesc_error_5fmessage_2eproto();
void protobuf_ShutdownFile_error_5fmessage_2eproto();

class ErrorMessage;

enum ErrorMessage_ErrorMessageType {
  ErrorMessage_ErrorMessageType_RERROR = 0,
  ErrorMessage_ErrorMessageType_STL = 1,
  ErrorMessage_ErrorMessageType_UNKNOWN = 2,
  ErrorMessage_ErrorMessageType_ErrorMessage_ErrorMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorMessage_ErrorMessageType_ErrorMessage_ErrorMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorMessage_ErrorMessageType_IsValid(int value);
const ErrorMessage_ErrorMessageType ErrorMessage_ErrorMessageType_ErrorMessageType_MIN = ErrorMessage_ErrorMessageType_RERROR;
const ErrorMessage_ErrorMessageType ErrorMessage_ErrorMessageType_ErrorMessageType_MAX = ErrorMessage_ErrorMessageType_UNKNOWN;
const int ErrorMessage_ErrorMessageType_ErrorMessageType_ARRAYSIZE = ErrorMessage_ErrorMessageType_ErrorMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorMessage_ErrorMessageType_descriptor();
inline const ::std::string& ErrorMessage_ErrorMessageType_Name(ErrorMessage_ErrorMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorMessage_ErrorMessageType_descriptor(), value);
}
inline bool ErrorMessage_ErrorMessageType_Parse(
    const ::std::string& name, ErrorMessage_ErrorMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorMessage_ErrorMessageType>(
    ErrorMessage_ErrorMessageType_descriptor(), name, value);
}
// ===================================================================

class ErrorMessage : public ::google::protobuf::Message {
 public:
  ErrorMessage();
  virtual ~ErrorMessage();

  ErrorMessage(const ErrorMessage& from);

  inline ErrorMessage& operator=(const ErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorMessage& default_instance();

  void Swap(ErrorMessage* other);

  // implements Message ----------------------------------------------

  inline ErrorMessage* New() const { return New(NULL); }

  ErrorMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorMessage& from);
  void MergeFrom(const ErrorMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ErrorMessage_ErrorMessageType ErrorMessageType;
  static const ErrorMessageType RERROR = ErrorMessage_ErrorMessageType_RERROR;
  static const ErrorMessageType STL = ErrorMessage_ErrorMessageType_STL;
  static const ErrorMessageType UNKNOWN = ErrorMessage_ErrorMessageType_UNKNOWN;
  static inline bool ErrorMessageType_IsValid(int value) {
    return ErrorMessage_ErrorMessageType_IsValid(value);
  }
  static const ErrorMessageType ErrorMessageType_MIN =
    ErrorMessage_ErrorMessageType_ErrorMessageType_MIN;
  static const ErrorMessageType ErrorMessageType_MAX =
    ErrorMessage_ErrorMessageType_ErrorMessageType_MAX;
  static const int ErrorMessageType_ARRAYSIZE =
    ErrorMessage_ErrorMessageType_ErrorMessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorMessageType_descriptor() {
    return ErrorMessage_ErrorMessageType_descriptor();
  }
  static inline const ::std::string& ErrorMessageType_Name(ErrorMessageType value) {
    return ErrorMessage_ErrorMessageType_Name(value);
  }
  static inline bool ErrorMessageType_Parse(const ::std::string& name,
      ErrorMessageType* value) {
    return ErrorMessage_ErrorMessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 error_no = 1;
  void clear_error_no();
  static const int kErrorNoFieldNumber = 1;
  ::google::protobuf::uint32 error_no() const;
  void set_error_no(::google::protobuf::uint32 value);

  // optional int32 kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::google::protobuf::int32 kind() const;
  void set_kind(::google::protobuf::int32 value);

  // optional string error_text = 3;
  void clear_error_text();
  static const int kErrorTextFieldNumber = 3;
  const ::std::string& error_text() const;
  void set_error_text(const ::std::string& value);
  void set_error_text(const char* value);
  void set_error_text(const char* value, size_t size);
  ::std::string* mutable_error_text();
  ::std::string* release_error_text();
  void set_allocated_error_text(::std::string* error_text);

  // optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::rasnet::service::ErrorMessage_ErrorMessageType type() const;
  void set_type(::rasnet::service::ErrorMessage_ErrorMessageType value);

  // @@protoc_insertion_point(class_scope:rasnet.service.ErrorMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 error_no_;
  ::google::protobuf::int32 kind_;
  ::google::protobuf::internal::ArenaStringPtr error_text_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_error_5fmessage_2eproto();
  friend void protobuf_AssignDesc_error_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_error_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static ErrorMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMessage

// optional uint32 error_no = 1;
inline void ErrorMessage::clear_error_no() {
  error_no_ = 0u;
}
inline ::google::protobuf::uint32 ErrorMessage::error_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.error_no)
  return error_no_;
}
inline void ErrorMessage::set_error_no(::google::protobuf::uint32 value) {
  
  error_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.error_no)
}

// optional int32 kind = 2;
inline void ErrorMessage::clear_kind() {
  kind_ = 0;
}
inline ::google::protobuf::int32 ErrorMessage::kind() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.kind)
  return kind_;
}
inline void ErrorMessage::set_kind(::google::protobuf::int32 value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.kind)
}

// optional string error_text = 3;
inline void ErrorMessage::clear_error_text() {
  error_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorMessage::error_text() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.error_text)
  return error_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorMessage::set_error_text(const ::std::string& value) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.error_text)
}
inline void ErrorMessage::set_error_text(const char* value) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ErrorMessage.error_text)
}
inline void ErrorMessage::set_error_text(const char* value, size_t size) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ErrorMessage.error_text)
}
inline ::std::string* ErrorMessage::mutable_error_text() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ErrorMessage.error_text)
  return error_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorMessage::release_error_text() {
  
  return error_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorMessage::set_allocated_error_text(::std::string* error_text) {
  if (error_text != NULL) {
    
  } else {
    
  }
  error_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_text);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ErrorMessage.error_text)
}

// optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
inline void ErrorMessage::clear_type() {
  type_ = 0;
}
inline ::rasnet::service::ErrorMessage_ErrorMessageType ErrorMessage::type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.type)
  return static_cast< ::rasnet::service::ErrorMessage_ErrorMessageType >(type_);
}
inline void ErrorMessage::set_type(::rasnet::service::ErrorMessage_ErrorMessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.type)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace rasnet

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rasnet::service::ErrorMessage_ErrorMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rasnet::service::ErrorMessage_ErrorMessageType>() {
  return ::rasnet::service::ErrorMessage_ErrorMessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_error_5fmessage_2eproto__INCLUDED
