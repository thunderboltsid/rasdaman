// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_rassrvr_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_rassrvr_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rasnet {
namespace service {

namespace {

const ::google::protobuf::Descriptor* OpenServerDatabaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenServerDatabaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenServerDatabaseRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenServerDatabaseRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* CloseServerDatabaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CloseServerDatabaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateDatabaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateDatabaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateDatabaseRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateDatabaseRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyDatabaseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyDatabaseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DestroyDatabaseRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DestroyDatabaseRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeginTransactionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeginTransactionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BeginTransactionRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BeginTransactionRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommitTransactionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommitTransactionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommitTransactionRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommitTransactionRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortTransactionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortTransactionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortTransactionRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortTransactionRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsTransactionOpenReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsTransactionOpenReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsTransactionOpenRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsTransactionOpenRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartInsertMDDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartInsertMDDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartInsertMDDRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartInsertMDDRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertTileReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertTileReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertTileRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertTileRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* EndInsertMDDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EndInsertMDDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EndInsertMDDRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EndInsertMDDRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartInsertTransMDDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartInsertTransMDDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartInsertTransMDDRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartInsertTransMDDRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertCollectionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertCollectionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertCollectionRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertCollectionRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCollectionByNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCollectionByNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCollectionByNameRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCollectionByNameRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCollectionByOidReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCollectionByOidReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCollectionByOidRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCollectionByOidRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCollectionByNameOrOidReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCollectionByNameOrOidReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCollectionByNameOrOidRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCollectionByNameOrOidRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCollOidsByNameOrOidReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCollOidsByNameOrOidReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCollOidsByNameOrOidRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCollOidsByNameOrOidRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveObjectFromCollectionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveObjectFromCollectionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveObjectFromCollectionRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveObjectFromCollectionRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextMDDReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextMDDReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextMDDRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextMDDRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextTileReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextTileReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextTileRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextTileRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* EndTransferReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EndTransferReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EndTransferRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EndTransferRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitUpdateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitUpdateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitUpdateRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitUpdateRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteQueryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteQueryRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteQueryRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteHttpQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteHttpQueryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteHttpQueryRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteHttpQueryRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextElementReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextElementReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNextElementRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNextElementRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteUpdateQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteUpdateQueryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteUpdateQueryRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteUpdateQueryRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteInsertQueryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteInsertQueryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecuteInsertQueryRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecuteInsertQueryRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewOidReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewOidReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewOidRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewOidRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetObjectTypeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetObjectTypeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetObjectTypeRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetObjectTypeRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTypeStructureReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTypeStructureReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetTypeStructureRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTypeStructureRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFormatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFormatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFormatRepl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFormatRepl_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeepAliveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeepAliveRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto() {
  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client_rassrvr_service.proto");
  GOOGLE_CHECK(file != NULL);
  OpenServerDatabaseReq_descriptor_ = file->message_type(0);
  static const int OpenServerDatabaseReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseReq, database_name_),
  };
  OpenServerDatabaseReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenServerDatabaseReq_descriptor_,
      OpenServerDatabaseReq::default_instance_,
      OpenServerDatabaseReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(OpenServerDatabaseReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseReq, _is_default_instance_));
  OpenServerDatabaseRepl_descriptor_ = file->message_type(1);
  static const int OpenServerDatabaseRepl_offsets_[1] = {
  };
  OpenServerDatabaseRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenServerDatabaseRepl_descriptor_,
      OpenServerDatabaseRepl::default_instance_,
      OpenServerDatabaseRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(OpenServerDatabaseRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenServerDatabaseRepl, _is_default_instance_));
  CloseServerDatabaseReq_descriptor_ = file->message_type(2);
  static const int CloseServerDatabaseReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseServerDatabaseReq, client_id_),
  };
  CloseServerDatabaseReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CloseServerDatabaseReq_descriptor_,
      CloseServerDatabaseReq::default_instance_,
      CloseServerDatabaseReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CloseServerDatabaseReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseServerDatabaseReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseServerDatabaseReq, _is_default_instance_));
  CreateDatabaseReq_descriptor_ = file->message_type(3);
  static const int CreateDatabaseReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseReq, database_name_),
  };
  CreateDatabaseReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateDatabaseReq_descriptor_,
      CreateDatabaseReq::default_instance_,
      CreateDatabaseReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateDatabaseReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseReq, _is_default_instance_));
  CreateDatabaseRepl_descriptor_ = file->message_type(4);
  static const int CreateDatabaseRepl_offsets_[1] = {
  };
  CreateDatabaseRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateDatabaseRepl_descriptor_,
      CreateDatabaseRepl::default_instance_,
      CreateDatabaseRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateDatabaseRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateDatabaseRepl, _is_default_instance_));
  DestroyDatabaseReq_descriptor_ = file->message_type(5);
  static const int DestroyDatabaseReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseReq, database_name_),
  };
  DestroyDatabaseReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyDatabaseReq_descriptor_,
      DestroyDatabaseReq::default_instance_,
      DestroyDatabaseReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DestroyDatabaseReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseReq, _is_default_instance_));
  DestroyDatabaseRepl_descriptor_ = file->message_type(6);
  static const int DestroyDatabaseRepl_offsets_[1] = {
  };
  DestroyDatabaseRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DestroyDatabaseRepl_descriptor_,
      DestroyDatabaseRepl::default_instance_,
      DestroyDatabaseRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(DestroyDatabaseRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyDatabaseRepl, _is_default_instance_));
  BeginTransactionReq_descriptor_ = file->message_type(7);
  static const int BeginTransactionReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionReq, rw_),
  };
  BeginTransactionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BeginTransactionReq_descriptor_,
      BeginTransactionReq::default_instance_,
      BeginTransactionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BeginTransactionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionReq, _is_default_instance_));
  BeginTransactionRepl_descriptor_ = file->message_type(8);
  static const int BeginTransactionRepl_offsets_[1] = {
  };
  BeginTransactionRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BeginTransactionRepl_descriptor_,
      BeginTransactionRepl::default_instance_,
      BeginTransactionRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(BeginTransactionRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginTransactionRepl, _is_default_instance_));
  CommitTransactionReq_descriptor_ = file->message_type(9);
  static const int CommitTransactionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitTransactionReq, client_id_),
  };
  CommitTransactionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommitTransactionReq_descriptor_,
      CommitTransactionReq::default_instance_,
      CommitTransactionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommitTransactionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitTransactionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitTransactionReq, _is_default_instance_));
  CommitTransactionRepl_descriptor_ = file->message_type(10);
  static const int CommitTransactionRepl_offsets_[1] = {
  };
  CommitTransactionRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommitTransactionRepl_descriptor_,
      CommitTransactionRepl::default_instance_,
      CommitTransactionRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommitTransactionRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitTransactionRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitTransactionRepl, _is_default_instance_));
  AbortTransactionReq_descriptor_ = file->message_type(11);
  static const int AbortTransactionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortTransactionReq, client_id_),
  };
  AbortTransactionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AbortTransactionReq_descriptor_,
      AbortTransactionReq::default_instance_,
      AbortTransactionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AbortTransactionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortTransactionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortTransactionReq, _is_default_instance_));
  AbortTransactionRepl_descriptor_ = file->message_type(12);
  static const int AbortTransactionRepl_offsets_[1] = {
  };
  AbortTransactionRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AbortTransactionRepl_descriptor_,
      AbortTransactionRepl::default_instance_,
      AbortTransactionRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(AbortTransactionRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortTransactionRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortTransactionRepl, _is_default_instance_));
  IsTransactionOpenReq_descriptor_ = file->message_type(13);
  static const int IsTransactionOpenReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenReq, client_id_),
  };
  IsTransactionOpenReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IsTransactionOpenReq_descriptor_,
      IsTransactionOpenReq::default_instance_,
      IsTransactionOpenReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(IsTransactionOpenReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenReq, _is_default_instance_));
  IsTransactionOpenRepl_descriptor_ = file->message_type(14);
  static const int IsTransactionOpenRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenRepl, isopen_),
  };
  IsTransactionOpenRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IsTransactionOpenRepl_descriptor_,
      IsTransactionOpenRepl::default_instance_,
      IsTransactionOpenRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(IsTransactionOpenRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsTransactionOpenRepl, _is_default_instance_));
  StartInsertMDDReq_descriptor_ = file->message_type(15);
  static const int StartInsertMDDReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, collname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, type_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, oid_),
  };
  StartInsertMDDReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartInsertMDDReq_descriptor_,
      StartInsertMDDReq::default_instance_,
      StartInsertMDDReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(StartInsertMDDReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDReq, _is_default_instance_));
  StartInsertMDDRepl_descriptor_ = file->message_type(16);
  static const int StartInsertMDDRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDRepl, status_),
  };
  StartInsertMDDRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartInsertMDDRepl_descriptor_,
      StartInsertMDDRepl::default_instance_,
      StartInsertMDDRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(StartInsertMDDRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertMDDRepl, _is_default_instance_));
  InsertTileReq_descriptor_ = file->message_type(17);
  static const int InsertTileReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, persistent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, type_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, current_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, storage_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, data_length_),
  };
  InsertTileReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertTileReq_descriptor_,
      InsertTileReq::default_instance_,
      InsertTileReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertTileReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileReq, _is_default_instance_));
  InsertTileRepl_descriptor_ = file->message_type(18);
  static const int InsertTileRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileRepl, status_),
  };
  InsertTileRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertTileRepl_descriptor_,
      InsertTileRepl::default_instance_,
      InsertTileRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertTileRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertTileRepl, _is_default_instance_));
  EndInsertMDDReq_descriptor_ = file->message_type(19);
  static const int EndInsertMDDReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDReq, persistent_),
  };
  EndInsertMDDReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EndInsertMDDReq_descriptor_,
      EndInsertMDDReq::default_instance_,
      EndInsertMDDReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EndInsertMDDReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDReq, _is_default_instance_));
  EndInsertMDDRepl_descriptor_ = file->message_type(20);
  static const int EndInsertMDDRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDRepl, status_),
  };
  EndInsertMDDRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EndInsertMDDRepl_descriptor_,
      EndInsertMDDRepl::default_instance_,
      EndInsertMDDRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(EndInsertMDDRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndInsertMDDRepl, _is_default_instance_));
  StartInsertTransMDDReq_descriptor_ = file->message_type(21);
  static const int StartInsertTransMDDReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, type_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, type_name_),
  };
  StartInsertTransMDDReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartInsertTransMDDReq_descriptor_,
      StartInsertTransMDDReq::default_instance_,
      StartInsertTransMDDReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(StartInsertTransMDDReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDReq, _is_default_instance_));
  StartInsertTransMDDRepl_descriptor_ = file->message_type(22);
  static const int StartInsertTransMDDRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDRepl, status_),
  };
  StartInsertTransMDDRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartInsertTransMDDRepl_descriptor_,
      StartInsertTransMDDRepl::default_instance_,
      StartInsertTransMDDRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(StartInsertTransMDDRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartInsertTransMDDRepl, _is_default_instance_));
  InsertCollectionReq_descriptor_ = file->message_type(23);
  static const int InsertCollectionReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, oid_),
  };
  InsertCollectionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertCollectionReq_descriptor_,
      InsertCollectionReq::default_instance_,
      InsertCollectionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertCollectionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionReq, _is_default_instance_));
  InsertCollectionRepl_descriptor_ = file->message_type(24);
  static const int InsertCollectionRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionRepl, status_),
  };
  InsertCollectionRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InsertCollectionRepl_descriptor_,
      InsertCollectionRepl::default_instance_,
      InsertCollectionRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(InsertCollectionRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertCollectionRepl, _is_default_instance_));
  DeleteCollectionByNameReq_descriptor_ = file->message_type(25);
  static const int DeleteCollectionByNameReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameReq, collection_name_),
  };
  DeleteCollectionByNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteCollectionByNameReq_descriptor_,
      DeleteCollectionByNameReq::default_instance_,
      DeleteCollectionByNameReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteCollectionByNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameReq, _is_default_instance_));
  DeleteCollectionByNameRepl_descriptor_ = file->message_type(26);
  static const int DeleteCollectionByNameRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameRepl, status_),
  };
  DeleteCollectionByNameRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteCollectionByNameRepl_descriptor_,
      DeleteCollectionByNameRepl::default_instance_,
      DeleteCollectionByNameRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteCollectionByNameRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByNameRepl, _is_default_instance_));
  DeleteCollectionByOidReq_descriptor_ = file->message_type(27);
  static const int DeleteCollectionByOidReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidReq, oid_),
  };
  DeleteCollectionByOidReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteCollectionByOidReq_descriptor_,
      DeleteCollectionByOidReq::default_instance_,
      DeleteCollectionByOidReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteCollectionByOidReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidReq, _is_default_instance_));
  DeleteCollectionByOidRepl_descriptor_ = file->message_type(28);
  static const int DeleteCollectionByOidRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidRepl, status_),
  };
  DeleteCollectionByOidRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteCollectionByOidRepl_descriptor_,
      DeleteCollectionByOidRepl::default_instance_,
      DeleteCollectionByOidRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteCollectionByOidRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCollectionByOidRepl, _is_default_instance_));
  GetCollectionByNameOrOidReq_descriptor_ = file->message_type(29);
  static const int GetCollectionByNameOrOidReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidReq, collection_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidReq, is_name_),
  };
  GetCollectionByNameOrOidReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCollectionByNameOrOidReq_descriptor_,
      GetCollectionByNameOrOidReq::default_instance_,
      GetCollectionByNameOrOidReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCollectionByNameOrOidReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidReq, _is_default_instance_));
  GetCollectionByNameOrOidRepl_descriptor_ = file->message_type(30);
  static const int GetCollectionByNameOrOidRepl_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, type_structure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, status_),
  };
  GetCollectionByNameOrOidRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCollectionByNameOrOidRepl_descriptor_,
      GetCollectionByNameOrOidRepl::default_instance_,
      GetCollectionByNameOrOidRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCollectionByNameOrOidRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollectionByNameOrOidRepl, _is_default_instance_));
  GetCollOidsByNameOrOidReq_descriptor_ = file->message_type(31);
  static const int GetCollOidsByNameOrOidReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidReq, collection_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidReq, is_name_),
  };
  GetCollOidsByNameOrOidReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCollOidsByNameOrOidReq_descriptor_,
      GetCollOidsByNameOrOidReq::default_instance_,
      GetCollOidsByNameOrOidReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCollOidsByNameOrOidReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidReq, _is_default_instance_));
  GetCollOidsByNameOrOidRepl_descriptor_ = file->message_type(32);
  static const int GetCollOidsByNameOrOidRepl_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, type_structure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, oids_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, oid_set_),
  };
  GetCollOidsByNameOrOidRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCollOidsByNameOrOidRepl_descriptor_,
      GetCollOidsByNameOrOidRepl::default_instance_,
      GetCollOidsByNameOrOidRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCollOidsByNameOrOidRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCollOidsByNameOrOidRepl, _is_default_instance_));
  RemoveObjectFromCollectionReq_descriptor_ = file->message_type(33);
  static const int RemoveObjectFromCollectionReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionReq, collection_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionReq, oid_),
  };
  RemoveObjectFromCollectionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveObjectFromCollectionReq_descriptor_,
      RemoveObjectFromCollectionReq::default_instance_,
      RemoveObjectFromCollectionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveObjectFromCollectionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionReq, _is_default_instance_));
  RemoveObjectFromCollectionRepl_descriptor_ = file->message_type(34);
  static const int RemoveObjectFromCollectionRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionRepl, status_),
  };
  RemoveObjectFromCollectionRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveObjectFromCollectionRepl_descriptor_,
      RemoveObjectFromCollectionRepl::default_instance_,
      RemoveObjectFromCollectionRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveObjectFromCollectionRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveObjectFromCollectionRepl, _is_default_instance_));
  GetNextMDDReq_descriptor_ = file->message_type(35);
  static const int GetNextMDDReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDReq, client_id_),
  };
  GetNextMDDReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextMDDReq_descriptor_,
      GetNextMDDReq::default_instance_,
      GetNextMDDReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextMDDReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDReq, _is_default_instance_));
  GetNextMDDRepl_descriptor_ = file->message_type(36);
  static const int GetNextMDDRepl_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, type_structure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, oid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, current_format_),
  };
  GetNextMDDRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextMDDRepl_descriptor_,
      GetNextMDDRepl::default_instance_,
      GetNextMDDRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextMDDRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextMDDRepl, _is_default_instance_));
  GetNextTileReq_descriptor_ = file->message_type(37);
  static const int GetNextTileReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileReq, client_id_),
  };
  GetNextTileReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextTileReq_descriptor_,
      GetNextTileReq::default_instance_,
      GetNextTileReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextTileReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileReq, _is_default_instance_));
  GetNextTileRepl_descriptor_ = file->message_type(38);
  static const int GetNextTileRepl_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, cell_type_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, current_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, storage_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, data_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, data_),
  };
  GetNextTileRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextTileRepl_descriptor_,
      GetNextTileRepl::default_instance_,
      GetNextTileRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextTileRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextTileRepl, _is_default_instance_));
  EndTransferReq_descriptor_ = file->message_type(39);
  static const int EndTransferReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferReq, client_id_),
  };
  EndTransferReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EndTransferReq_descriptor_,
      EndTransferReq::default_instance_,
      EndTransferReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EndTransferReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferReq, _is_default_instance_));
  EndTransferRepl_descriptor_ = file->message_type(40);
  static const int EndTransferRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferRepl, status_),
  };
  EndTransferRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EndTransferRepl_descriptor_,
      EndTransferRepl::default_instance_,
      EndTransferRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(EndTransferRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndTransferRepl, _is_default_instance_));
  InitUpdateReq_descriptor_ = file->message_type(41);
  static const int InitUpdateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateReq, client_id_),
  };
  InitUpdateReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InitUpdateReq_descriptor_,
      InitUpdateReq::default_instance_,
      InitUpdateReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(InitUpdateReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateReq, _is_default_instance_));
  InitUpdateRepl_descriptor_ = file->message_type(42);
  static const int InitUpdateRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateRepl, status_),
  };
  InitUpdateRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InitUpdateRepl_descriptor_,
      InitUpdateRepl::default_instance_,
      InitUpdateRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(InitUpdateRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitUpdateRepl, _is_default_instance_));
  ExecuteQueryReq_descriptor_ = file->message_type(43);
  static const int ExecuteQueryReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryReq, query_),
  };
  ExecuteQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteQueryReq_descriptor_,
      ExecuteQueryReq::default_instance_,
      ExecuteQueryReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryReq, _is_default_instance_));
  ExecuteQueryRepl_descriptor_ = file->message_type(44);
  static const int ExecuteQueryRepl_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, err_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, line_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, col_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, type_structure_),
  };
  ExecuteQueryRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteQueryRepl_descriptor_,
      ExecuteQueryRepl::default_instance_,
      ExecuteQueryRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteQueryRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteQueryRepl, _is_default_instance_));
  ExecuteHttpQueryReq_descriptor_ = file->message_type(45);
  static const int ExecuteHttpQueryReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryReq, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryReq, data_length_),
  };
  ExecuteHttpQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteHttpQueryReq_descriptor_,
      ExecuteHttpQueryReq::default_instance_,
      ExecuteHttpQueryReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteHttpQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryReq, _is_default_instance_));
  ExecuteHttpQueryRepl_descriptor_ = file->message_type(46);
  static const int ExecuteHttpQueryRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryRepl, data_),
  };
  ExecuteHttpQueryRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteHttpQueryRepl_descriptor_,
      ExecuteHttpQueryRepl::default_instance_,
      ExecuteHttpQueryRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteHttpQueryRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteHttpQueryRepl, _is_default_instance_));
  GetNextElementReq_descriptor_ = file->message_type(47);
  static const int GetNextElementReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementReq, client_id_),
  };
  GetNextElementReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextElementReq_descriptor_,
      GetNextElementReq::default_instance_,
      GetNextElementReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextElementReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementReq, _is_default_instance_));
  GetNextElementRepl_descriptor_ = file->message_type(48);
  static const int GetNextElementRepl_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementRepl, data_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementRepl, data_),
  };
  GetNextElementRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNextElementRepl_descriptor_,
      GetNextElementRepl::default_instance_,
      GetNextElementRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNextElementRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNextElementRepl, _is_default_instance_));
  ExecuteUpdateQueryReq_descriptor_ = file->message_type(49);
  static const int ExecuteUpdateQueryReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryReq, query_),
  };
  ExecuteUpdateQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteUpdateQueryReq_descriptor_,
      ExecuteUpdateQueryReq::default_instance_,
      ExecuteUpdateQueryReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteUpdateQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryReq, _is_default_instance_));
  ExecuteUpdateQueryRepl_descriptor_ = file->message_type(50);
  static const int ExecuteUpdateQueryRepl_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, errono_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, lineno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, colno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, token_),
  };
  ExecuteUpdateQueryRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteUpdateQueryRepl_descriptor_,
      ExecuteUpdateQueryRepl::default_instance_,
      ExecuteUpdateQueryRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteUpdateQueryRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteUpdateQueryRepl, _is_default_instance_));
  ExecuteInsertQueryReq_descriptor_ = file->message_type(51);
  static const int ExecuteInsertQueryReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryReq, query_),
  };
  ExecuteInsertQueryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteInsertQueryReq_descriptor_,
      ExecuteInsertQueryReq::default_instance_,
      ExecuteInsertQueryReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteInsertQueryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryReq, _is_default_instance_));
  ExecuteInsertQueryRepl_descriptor_ = file->message_type(52);
  static const int ExecuteInsertQueryRepl_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, errono_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, lineno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, colno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, type_structure_),
  };
  ExecuteInsertQueryRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecuteInsertQueryRepl_descriptor_,
      ExecuteInsertQueryRepl::default_instance_,
      ExecuteInsertQueryRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecuteInsertQueryRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteInsertQueryRepl, _is_default_instance_));
  GetNewOidReq_descriptor_ = file->message_type(53);
  static const int GetNewOidReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidReq, object_type_),
  };
  GetNewOidReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNewOidReq_descriptor_,
      GetNewOidReq::default_instance_,
      GetNewOidReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNewOidReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidReq, _is_default_instance_));
  GetNewOidRepl_descriptor_ = file->message_type(54);
  static const int GetNewOidRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidRepl, oid_),
  };
  GetNewOidRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNewOidRepl_descriptor_,
      GetNewOidRepl::default_instance_,
      GetNewOidRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNewOidRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewOidRepl, _is_default_instance_));
  GetObjectTypeReq_descriptor_ = file->message_type(55);
  static const int GetObjectTypeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeReq, oid_),
  };
  GetObjectTypeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetObjectTypeReq_descriptor_,
      GetObjectTypeReq::default_instance_,
      GetObjectTypeReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetObjectTypeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeReq, _is_default_instance_));
  GetObjectTypeRepl_descriptor_ = file->message_type(56);
  static const int GetObjectTypeRepl_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeRepl, object_type_),
  };
  GetObjectTypeRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetObjectTypeRepl_descriptor_,
      GetObjectTypeRepl::default_instance_,
      GetObjectTypeRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetObjectTypeRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetObjectTypeRepl, _is_default_instance_));
  GetTypeStructureReq_descriptor_ = file->message_type(57);
  static const int GetTypeStructureReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureReq, type_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureReq, type_type_),
  };
  GetTypeStructureReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTypeStructureReq_descriptor_,
      GetTypeStructureReq::default_instance_,
      GetTypeStructureReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTypeStructureReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureReq, _is_default_instance_));
  GetTypeStructureRepl_descriptor_ = file->message_type(58);
  static const int GetTypeStructureRepl_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureRepl, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureRepl, type_structure_),
  };
  GetTypeStructureRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTypeStructureRepl_descriptor_,
      GetTypeStructureRepl::default_instance_,
      GetTypeStructureRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTypeStructureRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTypeStructureRepl, _is_default_instance_));
  SetFormatReq_descriptor_ = file->message_type(59);
  static const int SetFormatReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, transfer_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, format_params_),
  };
  SetFormatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetFormatReq_descriptor_,
      SetFormatReq::default_instance_,
      SetFormatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetFormatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatReq, _is_default_instance_));
  SetFormatRepl_descriptor_ = file->message_type(60);
  static const int SetFormatRepl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatRepl, status_),
  };
  SetFormatRepl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetFormatRepl_descriptor_,
      SetFormatRepl::default_instance_,
      SetFormatRepl_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetFormatRepl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatRepl, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormatRepl, _is_default_instance_));
  KeepAliveRequest_descriptor_ = file->message_type(61);
  static const int KeepAliveRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, client_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, session_id_),
  };
  KeepAliveRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeepAliveRequest_descriptor_,
      KeepAliveRequest::default_instance_,
      KeepAliveRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(KeepAliveRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveRequest, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenServerDatabaseReq_descriptor_, &OpenServerDatabaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenServerDatabaseRepl_descriptor_, &OpenServerDatabaseRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CloseServerDatabaseReq_descriptor_, &CloseServerDatabaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateDatabaseReq_descriptor_, &CreateDatabaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateDatabaseRepl_descriptor_, &CreateDatabaseRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyDatabaseReq_descriptor_, &DestroyDatabaseReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DestroyDatabaseRepl_descriptor_, &DestroyDatabaseRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BeginTransactionReq_descriptor_, &BeginTransactionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BeginTransactionRepl_descriptor_, &BeginTransactionRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommitTransactionReq_descriptor_, &CommitTransactionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommitTransactionRepl_descriptor_, &CommitTransactionRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AbortTransactionReq_descriptor_, &AbortTransactionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AbortTransactionRepl_descriptor_, &AbortTransactionRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IsTransactionOpenReq_descriptor_, &IsTransactionOpenReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IsTransactionOpenRepl_descriptor_, &IsTransactionOpenRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartInsertMDDReq_descriptor_, &StartInsertMDDReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartInsertMDDRepl_descriptor_, &StartInsertMDDRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertTileReq_descriptor_, &InsertTileReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertTileRepl_descriptor_, &InsertTileRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EndInsertMDDReq_descriptor_, &EndInsertMDDReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EndInsertMDDRepl_descriptor_, &EndInsertMDDRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartInsertTransMDDReq_descriptor_, &StartInsertTransMDDReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartInsertTransMDDRepl_descriptor_, &StartInsertTransMDDRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertCollectionReq_descriptor_, &InsertCollectionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InsertCollectionRepl_descriptor_, &InsertCollectionRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteCollectionByNameReq_descriptor_, &DeleteCollectionByNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteCollectionByNameRepl_descriptor_, &DeleteCollectionByNameRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteCollectionByOidReq_descriptor_, &DeleteCollectionByOidReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteCollectionByOidRepl_descriptor_, &DeleteCollectionByOidRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCollectionByNameOrOidReq_descriptor_, &GetCollectionByNameOrOidReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCollectionByNameOrOidRepl_descriptor_, &GetCollectionByNameOrOidRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCollOidsByNameOrOidReq_descriptor_, &GetCollOidsByNameOrOidReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCollOidsByNameOrOidRepl_descriptor_, &GetCollOidsByNameOrOidRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveObjectFromCollectionReq_descriptor_, &RemoveObjectFromCollectionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveObjectFromCollectionRepl_descriptor_, &RemoveObjectFromCollectionRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextMDDReq_descriptor_, &GetNextMDDReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextMDDRepl_descriptor_, &GetNextMDDRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextTileReq_descriptor_, &GetNextTileReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextTileRepl_descriptor_, &GetNextTileRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EndTransferReq_descriptor_, &EndTransferReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EndTransferRepl_descriptor_, &EndTransferRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InitUpdateReq_descriptor_, &InitUpdateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InitUpdateRepl_descriptor_, &InitUpdateRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteQueryReq_descriptor_, &ExecuteQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteQueryRepl_descriptor_, &ExecuteQueryRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteHttpQueryReq_descriptor_, &ExecuteHttpQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteHttpQueryRepl_descriptor_, &ExecuteHttpQueryRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextElementReq_descriptor_, &GetNextElementReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNextElementRepl_descriptor_, &GetNextElementRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteUpdateQueryReq_descriptor_, &ExecuteUpdateQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteUpdateQueryRepl_descriptor_, &ExecuteUpdateQueryRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteInsertQueryReq_descriptor_, &ExecuteInsertQueryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecuteInsertQueryRepl_descriptor_, &ExecuteInsertQueryRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNewOidReq_descriptor_, &GetNewOidReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNewOidRepl_descriptor_, &GetNewOidRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetObjectTypeReq_descriptor_, &GetObjectTypeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetObjectTypeRepl_descriptor_, &GetObjectTypeRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTypeStructureReq_descriptor_, &GetTypeStructureReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTypeStructureRepl_descriptor_, &GetTypeStructureRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetFormatReq_descriptor_, &SetFormatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetFormatRepl_descriptor_, &SetFormatRepl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeepAliveRequest_descriptor_, &KeepAliveRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto() {
  delete OpenServerDatabaseReq::default_instance_;
  delete OpenServerDatabaseReq_reflection_;
  delete OpenServerDatabaseRepl::default_instance_;
  delete OpenServerDatabaseRepl_reflection_;
  delete CloseServerDatabaseReq::default_instance_;
  delete CloseServerDatabaseReq_reflection_;
  delete CreateDatabaseReq::default_instance_;
  delete CreateDatabaseReq_reflection_;
  delete CreateDatabaseRepl::default_instance_;
  delete CreateDatabaseRepl_reflection_;
  delete DestroyDatabaseReq::default_instance_;
  delete DestroyDatabaseReq_reflection_;
  delete DestroyDatabaseRepl::default_instance_;
  delete DestroyDatabaseRepl_reflection_;
  delete BeginTransactionReq::default_instance_;
  delete BeginTransactionReq_reflection_;
  delete BeginTransactionRepl::default_instance_;
  delete BeginTransactionRepl_reflection_;
  delete CommitTransactionReq::default_instance_;
  delete CommitTransactionReq_reflection_;
  delete CommitTransactionRepl::default_instance_;
  delete CommitTransactionRepl_reflection_;
  delete AbortTransactionReq::default_instance_;
  delete AbortTransactionReq_reflection_;
  delete AbortTransactionRepl::default_instance_;
  delete AbortTransactionRepl_reflection_;
  delete IsTransactionOpenReq::default_instance_;
  delete IsTransactionOpenReq_reflection_;
  delete IsTransactionOpenRepl::default_instance_;
  delete IsTransactionOpenRepl_reflection_;
  delete StartInsertMDDReq::default_instance_;
  delete StartInsertMDDReq_reflection_;
  delete StartInsertMDDRepl::default_instance_;
  delete StartInsertMDDRepl_reflection_;
  delete InsertTileReq::default_instance_;
  delete InsertTileReq_reflection_;
  delete InsertTileRepl::default_instance_;
  delete InsertTileRepl_reflection_;
  delete EndInsertMDDReq::default_instance_;
  delete EndInsertMDDReq_reflection_;
  delete EndInsertMDDRepl::default_instance_;
  delete EndInsertMDDRepl_reflection_;
  delete StartInsertTransMDDReq::default_instance_;
  delete StartInsertTransMDDReq_reflection_;
  delete StartInsertTransMDDRepl::default_instance_;
  delete StartInsertTransMDDRepl_reflection_;
  delete InsertCollectionReq::default_instance_;
  delete InsertCollectionReq_reflection_;
  delete InsertCollectionRepl::default_instance_;
  delete InsertCollectionRepl_reflection_;
  delete DeleteCollectionByNameReq::default_instance_;
  delete DeleteCollectionByNameReq_reflection_;
  delete DeleteCollectionByNameRepl::default_instance_;
  delete DeleteCollectionByNameRepl_reflection_;
  delete DeleteCollectionByOidReq::default_instance_;
  delete DeleteCollectionByOidReq_reflection_;
  delete DeleteCollectionByOidRepl::default_instance_;
  delete DeleteCollectionByOidRepl_reflection_;
  delete GetCollectionByNameOrOidReq::default_instance_;
  delete GetCollectionByNameOrOidReq_reflection_;
  delete GetCollectionByNameOrOidRepl::default_instance_;
  delete GetCollectionByNameOrOidRepl_reflection_;
  delete GetCollOidsByNameOrOidReq::default_instance_;
  delete GetCollOidsByNameOrOidReq_reflection_;
  delete GetCollOidsByNameOrOidRepl::default_instance_;
  delete GetCollOidsByNameOrOidRepl_reflection_;
  delete RemoveObjectFromCollectionReq::default_instance_;
  delete RemoveObjectFromCollectionReq_reflection_;
  delete RemoveObjectFromCollectionRepl::default_instance_;
  delete RemoveObjectFromCollectionRepl_reflection_;
  delete GetNextMDDReq::default_instance_;
  delete GetNextMDDReq_reflection_;
  delete GetNextMDDRepl::default_instance_;
  delete GetNextMDDRepl_reflection_;
  delete GetNextTileReq::default_instance_;
  delete GetNextTileReq_reflection_;
  delete GetNextTileRepl::default_instance_;
  delete GetNextTileRepl_reflection_;
  delete EndTransferReq::default_instance_;
  delete EndTransferReq_reflection_;
  delete EndTransferRepl::default_instance_;
  delete EndTransferRepl_reflection_;
  delete InitUpdateReq::default_instance_;
  delete InitUpdateReq_reflection_;
  delete InitUpdateRepl::default_instance_;
  delete InitUpdateRepl_reflection_;
  delete ExecuteQueryReq::default_instance_;
  delete ExecuteQueryReq_reflection_;
  delete ExecuteQueryRepl::default_instance_;
  delete ExecuteQueryRepl_reflection_;
  delete ExecuteHttpQueryReq::default_instance_;
  delete ExecuteHttpQueryReq_reflection_;
  delete ExecuteHttpQueryRepl::default_instance_;
  delete ExecuteHttpQueryRepl_reflection_;
  delete GetNextElementReq::default_instance_;
  delete GetNextElementReq_reflection_;
  delete GetNextElementRepl::default_instance_;
  delete GetNextElementRepl_reflection_;
  delete ExecuteUpdateQueryReq::default_instance_;
  delete ExecuteUpdateQueryReq_reflection_;
  delete ExecuteUpdateQueryRepl::default_instance_;
  delete ExecuteUpdateQueryRepl_reflection_;
  delete ExecuteInsertQueryReq::default_instance_;
  delete ExecuteInsertQueryReq_reflection_;
  delete ExecuteInsertQueryRepl::default_instance_;
  delete ExecuteInsertQueryRepl_reflection_;
  delete GetNewOidReq::default_instance_;
  delete GetNewOidReq_reflection_;
  delete GetNewOidRepl::default_instance_;
  delete GetNewOidRepl_reflection_;
  delete GetObjectTypeReq::default_instance_;
  delete GetObjectTypeReq_reflection_;
  delete GetObjectTypeRepl::default_instance_;
  delete GetObjectTypeRepl_reflection_;
  delete GetTypeStructureReq::default_instance_;
  delete GetTypeStructureReq_reflection_;
  delete GetTypeStructureRepl::default_instance_;
  delete GetTypeStructureRepl_reflection_;
  delete SetFormatReq::default_instance_;
  delete SetFormatReq_reflection_;
  delete SetFormatRepl::default_instance_;
  delete SetFormatRepl_reflection_;
  delete KeepAliveRequest::default_instance_;
  delete KeepAliveRequest_reflection_;
}

void protobuf_AddDesc_client_5frassrvr_5fservice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::rasnet::service::protobuf_AddDesc_common_5fservice_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034client_rassrvr_service.proto\022\016rasnet.s"
    "ervice\032\024common_service.proto\"A\n\025OpenServ"
    "erDatabaseReq\022\021\n\tclient_id\030\001 \001(\005\022\025\n\rdata"
    "base_name\030\002 \001(\t\"\030\n\026OpenServerDatabaseRep"
    "l\"+\n\026CloseServerDatabaseReq\022\021\n\tclient_id"
    "\030\001 \001(\005\"=\n\021CreateDatabaseReq\022\021\n\tclient_id"
    "\030\001 \001(\005\022\025\n\rdatabase_name\030\002 \001(\t\"\024\n\022CreateD"
    "atabaseRepl\">\n\022DestroyDatabaseReq\022\021\n\tcli"
    "ent_id\030\001 \001(\005\022\025\n\rdatabase_name\030\002 \001(\t\"\025\n\023D"
    "estroyDatabaseRepl\"4\n\023BeginTransactionRe"
    "q\022\021\n\tclient_id\030\001 \001(\005\022\n\n\002rw\030\002 \001(\010\"\026\n\024Begi"
    "nTransactionRepl\")\n\024CommitTransactionReq"
    "\022\021\n\tclient_id\030\001 \001(\005\"\027\n\025CommitTransaction"
    "Repl\"(\n\023AbortTransactionReq\022\021\n\tclient_id"
    "\030\001 \001(\005\"\026\n\024AbortTransactionRepl\")\n\024IsTran"
    "sactionOpenReq\022\021\n\tclient_id\030\001 \001(\005\"\'\n\025IsT"
    "ransactionOpenRepl\022\016\n\006isOpen\030\001 \001(\010\"}\n\021St"
    "artInsertMDDReq\022\021\n\tclient_id\030\001 \001(\005\022\020\n\010co"
    "llName\030\002 \001(\t\022\016\n\006domain\030\003 \001(\014\022\023\n\013type_len"
    "gth\030\004 \001(\005\022\021\n\ttype_name\030\005 \001(\t\022\013\n\003oid\030\006 \001("
    "\t\"$\n\022StartInsertMDDRepl\022\016\n\006status\030\001 \001(\005\""
    "\256\001\n\rInsertTileReq\022\021\n\tclient_id\030\001 \001(\005\022\022\n\n"
    "persistent\030\002 \001(\010\022\016\n\006domain\030\003 \001(\t\022\023\n\013type"
    "_length\030\004 \001(\005\022\026\n\016current_format\030\005 \001(\005\022\026\n"
    "\016storage_format\030\006 \001(\005\022\014\n\004data\030\007 \001(\014\022\023\n\013d"
    "ata_length\030\010 \001(\005\" \n\016InsertTileRepl\022\016\n\006st"
    "atus\030\001 \001(\005\"8\n\017EndInsertMDDReq\022\021\n\tclient_"
    "id\030\001 \001(\005\022\022\n\npersistent\030\002 \001(\010\"\"\n\020EndInser"
    "tMDDRepl\022\016\n\006status\030\001 \001(\005\"c\n\026StartInsertT"
    "ransMDDReq\022\021\n\tclient_id\030\001 \001(\005\022\016\n\006domain\030"
    "\002 \001(\t\022\023\n\013type_length\030\003 \001(\005\022\021\n\ttype_name\030"
    "\004 \001(\t\")\n\027StartInsertTransMDDRepl\022\016\n\006stat"
    "us\030\001 \001(\005\"a\n\023InsertCollectionReq\022\021\n\tclien"
    "t_id\030\001 \001(\005\022\027\n\017collection_name\030\002 \001(\t\022\021\n\tt"
    "ype_name\030\003 \001(\t\022\013\n\003oid\030\004 \001(\t\"&\n\024InsertCol"
    "lectionRepl\022\016\n\006status\030\001 \001(\005\"G\n\031DeleteCol"
    "lectionByNameReq\022\021\n\tclient_id\030\001 \001(\005\022\027\n\017c"
    "ollection_name\030\002 \001(\t\",\n\032DeleteCollection"
    "ByNameRepl\022\016\n\006status\030\001 \001(\005\":\n\030DeleteColl"
    "ectionByOidReq\022\021\n\tclient_id\030\001 \001(\005\022\013\n\003oid"
    "\030\002 \001(\t\"+\n\031DeleteCollectionByOidRepl\022\016\n\006s"
    "tatus\030\001 \001(\005\"`\n\033GetCollectionByNameOrOidR"
    "eq\022\021\n\tclient_id\030\001 \001(\005\022\035\n\025collection_iden"
    "tifier\030\002 \001(\t\022\017\n\007is_name\030\003 \001(\010\"\177\n\034GetColl"
    "ectionByNameOrOidRepl\022\021\n\ttype_name\030\001 \001(\t"
    "\022\026\n\016type_structure\030\002 \001(\t\022\013\n\003oid\030\003 \001(\t\022\027\n"
    "\017collection_name\030\004 \001(\t\022\016\n\006status\030\005 \001(\005\"^"
    "\n\031GetCollOidsByNameOrOidReq\022\021\n\tclient_id"
    "\030\001 \001(\005\022\035\n\025collection_identifier\030\002 \001(\t\022\017\n"
    "\007is_name\030\003 \001(\010\"\226\001\n\032GetCollOidsByNameOrOi"
    "dRepl\022\016\n\006status\030\001 \001(\005\022\021\n\ttype_name\030\002 \001(\t"
    "\022\026\n\016type_structure\030\003 \001(\t\022\023\n\013oids_string\030"
    "\004 \001(\t\022\027\n\017collection_name\030\005 \001(\t\022\017\n\007oid_se"
    "t\030\006 \003(\t\"X\n\035RemoveObjectFromCollectionReq"
    "\022\021\n\tclient_id\030\001 \001(\005\022\027\n\017collection_name\030\002"
    " \001(\t\022\013\n\003oid\030\003 \001(\t\"0\n\036RemoveObjectFromCol"
    "lectionRepl\022\016\n\006status\030\001 \001(\005\"\"\n\rGetNextMD"
    "DReq\022\021\n\tclient_id\030\001 \001(\005\"\200\001\n\016GetNextMDDRe"
    "pl\022\016\n\006status\030\001 \001(\005\022\016\n\006domain\030\002 \001(\t\022\021\n\tty"
    "pe_name\030\003 \001(\t\022\026\n\016type_structure\030\004 \001(\t\022\013\n"
    "\003oid\030\005 \001(\t\022\026\n\016current_format\030\006 \001(\005\"#\n\016Ge"
    "tNextTileReq\022\021\n\tclient_id\030\001 \001(\005\"\236\001\n\017GetN"
    "extTileRepl\022\016\n\006status\030\001 \001(\005\022\016\n\006domain\030\002 "
    "\001(\t\022\030\n\020cell_type_length\030\003 \001(\005\022\026\n\016current"
    "_format\030\004 \001(\005\022\026\n\016storage_format\030\005 \001(\005\022\023\n"
    "\013data_length\030\006 \001(\005\022\014\n\004data\030\007 \001(\014\"#\n\016EndT"
    "ransferReq\022\021\n\tclient_id\030\001 \001(\005\"!\n\017EndTran"
    "sferRepl\022\016\n\006status\030\001 \001(\005\"\"\n\rInitUpdateRe"
    "q\022\021\n\tclient_id\030\001 \001(\005\" \n\016InitUpdateRepl\022\016"
    "\n\006status\030\001 \001(\005\"3\n\017ExecuteQueryReq\022\021\n\tcli"
    "ent_id\030\001 \001(\005\022\r\n\005query\030\002 \001(\t\"\215\001\n\020ExecuteQ"
    "ueryRepl\022\016\n\006status\030\001 \001(\005\022\016\n\006err_no\030\002 \001(\005"
    "\022\017\n\007line_no\030\003 \001(\005\022\016\n\006col_no\030\004 \001(\005\022\r\n\005tok"
    "en\030\005 \001(\t\022\021\n\ttype_name\030\006 \001(\t\022\026\n\016type_stru"
    "cture\030\007 \001(\t\"K\n\023ExecuteHttpQueryReq\022\021\n\tcl"
    "ient_id\030\001 \001(\005\022\014\n\004data\030\002 \001(\014\022\023\n\013data_leng"
    "th\030\003 \001(\005\"$\n\024ExecuteHttpQueryRepl\022\014\n\004data"
    "\030\001 \001(\014\"&\n\021GetNextElementReq\022\021\n\tclient_id"
    "\030\001 \001(\005\"G\n\022GetNextElementRepl\022\016\n\006status\030\002"
    " \001(\005\022\023\n\013data_length\030\003 \001(\005\022\014\n\004data\030\004 \001(\014\""
    "9\n\025ExecuteUpdateQueryReq\022\021\n\tclient_id\030\001 "
    "\001(\005\022\r\n\005query\030\002 \001(\t\"f\n\026ExecuteUpdateQuery"
    "Repl\022\016\n\006status\030\001 \001(\005\022\016\n\006erroNo\030\002 \001(\005\022\016\n\006"
    "lineNo\030\003 \001(\005\022\r\n\005colNo\030\004 \001(\005\022\r\n\005token\030\005 \001"
    "(\t\"9\n\025ExecuteInsertQueryReq\022\021\n\tclient_id"
    "\030\001 \001(\005\022\r\n\005query\030\002 \001(\t\"\221\001\n\026ExecuteInsertQ"
    "ueryRepl\022\016\n\006status\030\001 \001(\005\022\016\n\006erroNo\030\002 \001(\005"
    "\022\016\n\006lineNo\030\003 \001(\005\022\r\n\005colNo\030\004 \001(\005\022\r\n\005token"
    "\030\005 \001(\t\022\021\n\ttype_name\030\006 \001(\t\022\026\n\016type_struct"
    "ure\030\007 \001(\t\"6\n\014GetNewOidReq\022\021\n\tclient_id\030\001"
    " \001(\005\022\023\n\013object_type\030\002 \001(\005\"\034\n\rGetNewOidRe"
    "pl\022\013\n\003oid\030\001 \001(\t\"2\n\020GetObjectTypeReq\022\021\n\tc"
    "lient_id\030\001 \001(\005\022\013\n\003oid\030\002 \001(\t\"8\n\021GetObject"
    "TypeRepl\022\016\n\006status\030\001 \001(\005\022\023\n\013object_type\030"
    "\002 \001(\005\"N\n\023GetTypeStructureReq\022\021\n\tclient_i"
    "d\030\001 \001(\005\022\021\n\ttype_name\030\002 \001(\t\022\021\n\ttype_type\030"
    "\003 \001(\005\">\n\024GetTypeStructureRepl\022\016\n\006status\030"
    "\001 \001(\005\022\026\n\016type_structure\030\002 \001(\t\"a\n\014SetForm"
    "atReq\022\021\n\tclient_id\030\001 \001(\005\022\027\n\017transfer_for"
    "mat\030\002 \001(\005\022\016\n\006format\030\003 \001(\005\022\025\n\rformat_para"
    "ms\030\004 \001(\t\"\037\n\rSetFormatRepl\022\016\n\006status\030\002 \001("
    "\005\";\n\020KeepAliveRequest\022\023\n\013client_uuid\030\001 \001"
    "(\t\022\022\n\nsession_id\030\002 \001(\t2\250\027\n\024ClientRassrvr"
    "Service\022c\n\022OpenServerDatabase\022%.rasnet.s"
    "ervice.OpenServerDatabaseReq\032&.rasnet.se"
    "rvice.OpenServerDatabaseRepl\022S\n\023CloseSer"
    "verDatabase\022&.rasnet.service.CloseServer"
    "DatabaseReq\032\024.rasnet.service.Void\022W\n\016Cre"
    "ateDatabase\022!.rasnet.service.CreateDatab"
    "aseReq\032\".rasnet.service.CreateDatabaseRe"
    "pl\022Z\n\017DestroyDatabase\022\".rasnet.service.D"
    "estroyDatabaseReq\032#.rasnet.service.Destr"
    "oyDatabaseRepl\022]\n\020BeginTransaction\022#.ras"
    "net.service.BeginTransactionReq\032$.rasnet"
    ".service.BeginTransactionRepl\022`\n\021CommitT"
    "ransaction\022$.rasnet.service.CommitTransa"
    "ctionReq\032%.rasnet.service.CommitTransact"
    "ionRepl\022]\n\020AbortTransaction\022#.rasnet.ser"
    "vice.AbortTransactionReq\032$.rasnet.servic"
    "e.AbortTransactionRepl\022`\n\021IsTransactionO"
    "pen\022$.rasnet.service.IsTransactionOpenRe"
    "q\032%.rasnet.service.IsTransactionOpenRepl"
    "\022W\n\016StartInsertMDD\022!.rasnet.service.Star"
    "tInsertMDDReq\032\".rasnet.service.StartInse"
    "rtMDDRepl\022f\n\023StartInsertTransMDD\022&.rasne"
    "t.service.StartInsertTransMDDReq\032\'.rasne"
    "t.service.StartInsertTransMDDRepl\022K\n\nIns"
    "ertTile\022\035.rasnet.service.InsertTileReq\032\036"
    ".rasnet.service.InsertTileRepl\022Q\n\014EndIns"
    "ertMDD\022\037.rasnet.service.EndInsertMDDReq\032"
    " .rasnet.service.EndInsertMDDRepl\022]\n\020Ins"
    "ertCollection\022#.rasnet.service.InsertCol"
    "lectionReq\032$.rasnet.service.InsertCollec"
    "tionRepl\022o\n\026DeleteCollectionByName\022).ras"
    "net.service.DeleteCollectionByNameReq\032*."
    "rasnet.service.DeleteCollectionByNameRep"
    "l\022l\n\025DeleteCollectionByOid\022(.rasnet.serv"
    "ice.DeleteCollectionByOidReq\032).rasnet.se"
    "rvice.DeleteCollectionByOidRepl\022{\n\032Remov"
    "eObjectFromCollection\022-.rasnet.service.R"
    "emoveObjectFromCollectionReq\032..rasnet.se"
    "rvice.RemoveObjectFromCollectionRepl\022u\n\030"
    "GetCollectionByNameOrOid\022+.rasnet.servic"
    "e.GetCollectionByNameOrOidReq\032,.rasnet.s"
    "ervice.GetCollectionByNameOrOidRepl\022o\n\026G"
    "etCollOidsByNameOrOid\022).rasnet.service.G"
    "etCollOidsByNameOrOidReq\032*.rasnet.servic"
    "e.GetCollOidsByNameOrOidRepl\022K\n\nGetNextM"
    "DD\022\035.rasnet.service.GetNextMDDReq\032\036.rasn"
    "et.service.GetNextMDDRepl\022N\n\013GetNextTile"
    "\022\036.rasnet.service.GetNextTileReq\032\037.rasne"
    "t.service.GetNextTileRepl\022N\n\013EndTransfer"
    "\022\036.rasnet.service.EndTransferReq\032\037.rasne"
    "t.service.EndTransferRepl\022K\n\nInitUpdate\022"
    "\035.rasnet.service.InitUpdateReq\032\036.rasnet."
    "service.InitUpdateRepl\022Q\n\014ExecuteQuery\022\037"
    ".rasnet.service.ExecuteQueryReq\032 .rasnet"
    ".service.ExecuteQueryRepl\022]\n\020ExecuteHttp"
    "Query\022#.rasnet.service.ExecuteHttpQueryR"
    "eq\032$.rasnet.service.ExecuteHttpQueryRepl"
    "\022W\n\016GetNextElement\022!.rasnet.service.GetN"
    "extElementReq\032\".rasnet.service.GetNextEl"
    "ementRepl\022c\n\022ExecuteUpdateQuery\022%.rasnet"
    ".service.ExecuteUpdateQueryReq\032&.rasnet."
    "service.ExecuteUpdateQueryRepl\022c\n\022Execut"
    "eInsertQuery\022%.rasnet.service.ExecuteIns"
    "ertQueryReq\032&.rasnet.service.ExecuteInse"
    "rtQueryRepl\022H\n\tGetNewOid\022\034.rasnet.servic"
    "e.GetNewOidReq\032\035.rasnet.service.GetNewOi"
    "dRepl\022T\n\rGetObjectType\022 .rasnet.service."
    "GetObjectTypeReq\032!.rasnet.service.GetObj"
    "ectTypeRepl\022]\n\020GetTypeStructure\022#.rasnet"
    ".service.GetTypeStructureReq\032$.rasnet.se"
    "rvice.GetTypeStructureRepl\022H\n\tSetFormat\022"
    "\034.rasnet.service.SetFormatReq\032\035.rasnet.s"
    "ervice.SetFormatRepl\022C\n\tKeepAlive\022 .rasn"
    "et.service.KeepAliveRequest\032\024.rasnet.ser"
    "vice.VoidB;\n\033org.rasdaman.rasnet.service"
    "B\026ClientRasServerService\200\001\000\210\001\000b\006proto3", 7158);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_rassrvr_service.proto", &protobuf_RegisterTypes);
  OpenServerDatabaseReq::default_instance_ = new OpenServerDatabaseReq();
  OpenServerDatabaseRepl::default_instance_ = new OpenServerDatabaseRepl();
  CloseServerDatabaseReq::default_instance_ = new CloseServerDatabaseReq();
  CreateDatabaseReq::default_instance_ = new CreateDatabaseReq();
  CreateDatabaseRepl::default_instance_ = new CreateDatabaseRepl();
  DestroyDatabaseReq::default_instance_ = new DestroyDatabaseReq();
  DestroyDatabaseRepl::default_instance_ = new DestroyDatabaseRepl();
  BeginTransactionReq::default_instance_ = new BeginTransactionReq();
  BeginTransactionRepl::default_instance_ = new BeginTransactionRepl();
  CommitTransactionReq::default_instance_ = new CommitTransactionReq();
  CommitTransactionRepl::default_instance_ = new CommitTransactionRepl();
  AbortTransactionReq::default_instance_ = new AbortTransactionReq();
  AbortTransactionRepl::default_instance_ = new AbortTransactionRepl();
  IsTransactionOpenReq::default_instance_ = new IsTransactionOpenReq();
  IsTransactionOpenRepl::default_instance_ = new IsTransactionOpenRepl();
  StartInsertMDDReq::default_instance_ = new StartInsertMDDReq();
  StartInsertMDDRepl::default_instance_ = new StartInsertMDDRepl();
  InsertTileReq::default_instance_ = new InsertTileReq();
  InsertTileRepl::default_instance_ = new InsertTileRepl();
  EndInsertMDDReq::default_instance_ = new EndInsertMDDReq();
  EndInsertMDDRepl::default_instance_ = new EndInsertMDDRepl();
  StartInsertTransMDDReq::default_instance_ = new StartInsertTransMDDReq();
  StartInsertTransMDDRepl::default_instance_ = new StartInsertTransMDDRepl();
  InsertCollectionReq::default_instance_ = new InsertCollectionReq();
  InsertCollectionRepl::default_instance_ = new InsertCollectionRepl();
  DeleteCollectionByNameReq::default_instance_ = new DeleteCollectionByNameReq();
  DeleteCollectionByNameRepl::default_instance_ = new DeleteCollectionByNameRepl();
  DeleteCollectionByOidReq::default_instance_ = new DeleteCollectionByOidReq();
  DeleteCollectionByOidRepl::default_instance_ = new DeleteCollectionByOidRepl();
  GetCollectionByNameOrOidReq::default_instance_ = new GetCollectionByNameOrOidReq();
  GetCollectionByNameOrOidRepl::default_instance_ = new GetCollectionByNameOrOidRepl();
  GetCollOidsByNameOrOidReq::default_instance_ = new GetCollOidsByNameOrOidReq();
  GetCollOidsByNameOrOidRepl::default_instance_ = new GetCollOidsByNameOrOidRepl();
  RemoveObjectFromCollectionReq::default_instance_ = new RemoveObjectFromCollectionReq();
  RemoveObjectFromCollectionRepl::default_instance_ = new RemoveObjectFromCollectionRepl();
  GetNextMDDReq::default_instance_ = new GetNextMDDReq();
  GetNextMDDRepl::default_instance_ = new GetNextMDDRepl();
  GetNextTileReq::default_instance_ = new GetNextTileReq();
  GetNextTileRepl::default_instance_ = new GetNextTileRepl();
  EndTransferReq::default_instance_ = new EndTransferReq();
  EndTransferRepl::default_instance_ = new EndTransferRepl();
  InitUpdateReq::default_instance_ = new InitUpdateReq();
  InitUpdateRepl::default_instance_ = new InitUpdateRepl();
  ExecuteQueryReq::default_instance_ = new ExecuteQueryReq();
  ExecuteQueryRepl::default_instance_ = new ExecuteQueryRepl();
  ExecuteHttpQueryReq::default_instance_ = new ExecuteHttpQueryReq();
  ExecuteHttpQueryRepl::default_instance_ = new ExecuteHttpQueryRepl();
  GetNextElementReq::default_instance_ = new GetNextElementReq();
  GetNextElementRepl::default_instance_ = new GetNextElementRepl();
  ExecuteUpdateQueryReq::default_instance_ = new ExecuteUpdateQueryReq();
  ExecuteUpdateQueryRepl::default_instance_ = new ExecuteUpdateQueryRepl();
  ExecuteInsertQueryReq::default_instance_ = new ExecuteInsertQueryReq();
  ExecuteInsertQueryRepl::default_instance_ = new ExecuteInsertQueryRepl();
  GetNewOidReq::default_instance_ = new GetNewOidReq();
  GetNewOidRepl::default_instance_ = new GetNewOidRepl();
  GetObjectTypeReq::default_instance_ = new GetObjectTypeReq();
  GetObjectTypeRepl::default_instance_ = new GetObjectTypeRepl();
  GetTypeStructureReq::default_instance_ = new GetTypeStructureReq();
  GetTypeStructureRepl::default_instance_ = new GetTypeStructureRepl();
  SetFormatReq::default_instance_ = new SetFormatReq();
  SetFormatRepl::default_instance_ = new SetFormatRepl();
  KeepAliveRequest::default_instance_ = new KeepAliveRequest();
  OpenServerDatabaseReq::default_instance_->InitAsDefaultInstance();
  OpenServerDatabaseRepl::default_instance_->InitAsDefaultInstance();
  CloseServerDatabaseReq::default_instance_->InitAsDefaultInstance();
  CreateDatabaseReq::default_instance_->InitAsDefaultInstance();
  CreateDatabaseRepl::default_instance_->InitAsDefaultInstance();
  DestroyDatabaseReq::default_instance_->InitAsDefaultInstance();
  DestroyDatabaseRepl::default_instance_->InitAsDefaultInstance();
  BeginTransactionReq::default_instance_->InitAsDefaultInstance();
  BeginTransactionRepl::default_instance_->InitAsDefaultInstance();
  CommitTransactionReq::default_instance_->InitAsDefaultInstance();
  CommitTransactionRepl::default_instance_->InitAsDefaultInstance();
  AbortTransactionReq::default_instance_->InitAsDefaultInstance();
  AbortTransactionRepl::default_instance_->InitAsDefaultInstance();
  IsTransactionOpenReq::default_instance_->InitAsDefaultInstance();
  IsTransactionOpenRepl::default_instance_->InitAsDefaultInstance();
  StartInsertMDDReq::default_instance_->InitAsDefaultInstance();
  StartInsertMDDRepl::default_instance_->InitAsDefaultInstance();
  InsertTileReq::default_instance_->InitAsDefaultInstance();
  InsertTileRepl::default_instance_->InitAsDefaultInstance();
  EndInsertMDDReq::default_instance_->InitAsDefaultInstance();
  EndInsertMDDRepl::default_instance_->InitAsDefaultInstance();
  StartInsertTransMDDReq::default_instance_->InitAsDefaultInstance();
  StartInsertTransMDDRepl::default_instance_->InitAsDefaultInstance();
  InsertCollectionReq::default_instance_->InitAsDefaultInstance();
  InsertCollectionRepl::default_instance_->InitAsDefaultInstance();
  DeleteCollectionByNameReq::default_instance_->InitAsDefaultInstance();
  DeleteCollectionByNameRepl::default_instance_->InitAsDefaultInstance();
  DeleteCollectionByOidReq::default_instance_->InitAsDefaultInstance();
  DeleteCollectionByOidRepl::default_instance_->InitAsDefaultInstance();
  GetCollectionByNameOrOidReq::default_instance_->InitAsDefaultInstance();
  GetCollectionByNameOrOidRepl::default_instance_->InitAsDefaultInstance();
  GetCollOidsByNameOrOidReq::default_instance_->InitAsDefaultInstance();
  GetCollOidsByNameOrOidRepl::default_instance_->InitAsDefaultInstance();
  RemoveObjectFromCollectionReq::default_instance_->InitAsDefaultInstance();
  RemoveObjectFromCollectionRepl::default_instance_->InitAsDefaultInstance();
  GetNextMDDReq::default_instance_->InitAsDefaultInstance();
  GetNextMDDRepl::default_instance_->InitAsDefaultInstance();
  GetNextTileReq::default_instance_->InitAsDefaultInstance();
  GetNextTileRepl::default_instance_->InitAsDefaultInstance();
  EndTransferReq::default_instance_->InitAsDefaultInstance();
  EndTransferRepl::default_instance_->InitAsDefaultInstance();
  InitUpdateReq::default_instance_->InitAsDefaultInstance();
  InitUpdateRepl::default_instance_->InitAsDefaultInstance();
  ExecuteQueryReq::default_instance_->InitAsDefaultInstance();
  ExecuteQueryRepl::default_instance_->InitAsDefaultInstance();
  ExecuteHttpQueryReq::default_instance_->InitAsDefaultInstance();
  ExecuteHttpQueryRepl::default_instance_->InitAsDefaultInstance();
  GetNextElementReq::default_instance_->InitAsDefaultInstance();
  GetNextElementRepl::default_instance_->InitAsDefaultInstance();
  ExecuteUpdateQueryReq::default_instance_->InitAsDefaultInstance();
  ExecuteUpdateQueryRepl::default_instance_->InitAsDefaultInstance();
  ExecuteInsertQueryReq::default_instance_->InitAsDefaultInstance();
  ExecuteInsertQueryRepl::default_instance_->InitAsDefaultInstance();
  GetNewOidReq::default_instance_->InitAsDefaultInstance();
  GetNewOidRepl::default_instance_->InitAsDefaultInstance();
  GetObjectTypeReq::default_instance_->InitAsDefaultInstance();
  GetObjectTypeRepl::default_instance_->InitAsDefaultInstance();
  GetTypeStructureReq::default_instance_->InitAsDefaultInstance();
  GetTypeStructureRepl::default_instance_->InitAsDefaultInstance();
  SetFormatReq::default_instance_->InitAsDefaultInstance();
  SetFormatRepl::default_instance_->InitAsDefaultInstance();
  KeepAliveRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_5frassrvr_5fservice_2eproto {
  StaticDescriptorInitializer_client_5frassrvr_5fservice_2eproto() {
    protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  }
} static_descriptor_initializer_client_5frassrvr_5fservice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenServerDatabaseReq::kClientIdFieldNumber;
const int OpenServerDatabaseReq::kDatabaseNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenServerDatabaseReq::OpenServerDatabaseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.OpenServerDatabaseReq)
}

void OpenServerDatabaseReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OpenServerDatabaseReq::OpenServerDatabaseReq(const OpenServerDatabaseReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.OpenServerDatabaseReq)
}

void OpenServerDatabaseReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  database_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpenServerDatabaseReq::~OpenServerDatabaseReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.OpenServerDatabaseReq)
  SharedDtor();
}

void OpenServerDatabaseReq::SharedDtor() {
  database_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OpenServerDatabaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenServerDatabaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenServerDatabaseReq_descriptor_;
}

const OpenServerDatabaseReq& OpenServerDatabaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

OpenServerDatabaseReq* OpenServerDatabaseReq::default_instance_ = NULL;

OpenServerDatabaseReq* OpenServerDatabaseReq::New(::google::protobuf::Arena* arena) const {
  OpenServerDatabaseReq* n = new OpenServerDatabaseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenServerDatabaseReq::Clear() {
  client_id_ = 0;
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OpenServerDatabaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.OpenServerDatabaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_database_name;
        break;
      }

      // optional string database_name = 2;
      case 2: {
        if (tag == 18) {
         parse_database_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database_name().data(), this->database_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.OpenServerDatabaseReq.database_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.OpenServerDatabaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.OpenServerDatabaseReq)
  return false;
#undef DO_
}

void OpenServerDatabaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.OpenServerDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.OpenServerDatabaseReq.database_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->database_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.OpenServerDatabaseReq)
}

::google::protobuf::uint8* OpenServerDatabaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.OpenServerDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.OpenServerDatabaseReq.database_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->database_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.OpenServerDatabaseReq)
  return target;
}

int OpenServerDatabaseReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenServerDatabaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpenServerDatabaseReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenServerDatabaseReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenServerDatabaseReq::MergeFrom(const OpenServerDatabaseReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.database_name().size() > 0) {

    database_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_name_);
  }
}

void OpenServerDatabaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenServerDatabaseReq::CopyFrom(const OpenServerDatabaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenServerDatabaseReq::IsInitialized() const {

  return true;
}

void OpenServerDatabaseReq::Swap(OpenServerDatabaseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenServerDatabaseReq::InternalSwap(OpenServerDatabaseReq* other) {
  std::swap(client_id_, other->client_id_);
  database_name_.Swap(&other->database_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenServerDatabaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenServerDatabaseReq_descriptor_;
  metadata.reflection = OpenServerDatabaseReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenServerDatabaseReq

// optional int32 client_id = 1;
void OpenServerDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 OpenServerDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.OpenServerDatabaseReq.client_id)
  return client_id_;
}
 void OpenServerDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.OpenServerDatabaseReq.client_id)
}

// optional string database_name = 2;
void OpenServerDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OpenServerDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.OpenServerDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OpenServerDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.OpenServerDatabaseReq.database_name)
}
 void OpenServerDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.OpenServerDatabaseReq.database_name)
}
 void OpenServerDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.OpenServerDatabaseReq.database_name)
}
 ::std::string* OpenServerDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.OpenServerDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OpenServerDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OpenServerDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.OpenServerDatabaseReq.database_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenServerDatabaseRepl::OpenServerDatabaseRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.OpenServerDatabaseRepl)
}

void OpenServerDatabaseRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OpenServerDatabaseRepl::OpenServerDatabaseRepl(const OpenServerDatabaseRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.OpenServerDatabaseRepl)
}

void OpenServerDatabaseRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

OpenServerDatabaseRepl::~OpenServerDatabaseRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.OpenServerDatabaseRepl)
  SharedDtor();
}

void OpenServerDatabaseRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenServerDatabaseRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenServerDatabaseRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenServerDatabaseRepl_descriptor_;
}

const OpenServerDatabaseRepl& OpenServerDatabaseRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

OpenServerDatabaseRepl* OpenServerDatabaseRepl::default_instance_ = NULL;

OpenServerDatabaseRepl* OpenServerDatabaseRepl::New(::google::protobuf::Arena* arena) const {
  OpenServerDatabaseRepl* n = new OpenServerDatabaseRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenServerDatabaseRepl::Clear() {
}

bool OpenServerDatabaseRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.OpenServerDatabaseRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.OpenServerDatabaseRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.OpenServerDatabaseRepl)
  return false;
#undef DO_
}

void OpenServerDatabaseRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.OpenServerDatabaseRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.OpenServerDatabaseRepl)
}

::google::protobuf::uint8* OpenServerDatabaseRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.OpenServerDatabaseRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.OpenServerDatabaseRepl)
  return target;
}

int OpenServerDatabaseRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenServerDatabaseRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpenServerDatabaseRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenServerDatabaseRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OpenServerDatabaseRepl::MergeFrom(const OpenServerDatabaseRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void OpenServerDatabaseRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenServerDatabaseRepl::CopyFrom(const OpenServerDatabaseRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenServerDatabaseRepl::IsInitialized() const {

  return true;
}

void OpenServerDatabaseRepl::Swap(OpenServerDatabaseRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenServerDatabaseRepl::InternalSwap(OpenServerDatabaseRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenServerDatabaseRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenServerDatabaseRepl_descriptor_;
  metadata.reflection = OpenServerDatabaseRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenServerDatabaseRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseServerDatabaseReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseServerDatabaseReq::CloseServerDatabaseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.CloseServerDatabaseReq)
}

void CloseServerDatabaseReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CloseServerDatabaseReq::CloseServerDatabaseReq(const CloseServerDatabaseReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.CloseServerDatabaseReq)
}

void CloseServerDatabaseReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

CloseServerDatabaseReq::~CloseServerDatabaseReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.CloseServerDatabaseReq)
  SharedDtor();
}

void CloseServerDatabaseReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CloseServerDatabaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseServerDatabaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloseServerDatabaseReq_descriptor_;
}

const CloseServerDatabaseReq& CloseServerDatabaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

CloseServerDatabaseReq* CloseServerDatabaseReq::default_instance_ = NULL;

CloseServerDatabaseReq* CloseServerDatabaseReq::New(::google::protobuf::Arena* arena) const {
  CloseServerDatabaseReq* n = new CloseServerDatabaseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseServerDatabaseReq::Clear() {
  client_id_ = 0;
}

bool CloseServerDatabaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.CloseServerDatabaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.CloseServerDatabaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.CloseServerDatabaseReq)
  return false;
#undef DO_
}

void CloseServerDatabaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.CloseServerDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.CloseServerDatabaseReq)
}

::google::protobuf::uint8* CloseServerDatabaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.CloseServerDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.CloseServerDatabaseReq)
  return target;
}

int CloseServerDatabaseReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseServerDatabaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CloseServerDatabaseReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseServerDatabaseReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CloseServerDatabaseReq::MergeFrom(const CloseServerDatabaseReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void CloseServerDatabaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseServerDatabaseReq::CopyFrom(const CloseServerDatabaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseServerDatabaseReq::IsInitialized() const {

  return true;
}

void CloseServerDatabaseReq::Swap(CloseServerDatabaseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseServerDatabaseReq::InternalSwap(CloseServerDatabaseReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseServerDatabaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CloseServerDatabaseReq_descriptor_;
  metadata.reflection = CloseServerDatabaseReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseServerDatabaseReq

// optional int32 client_id = 1;
void CloseServerDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 CloseServerDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CloseServerDatabaseReq.client_id)
  return client_id_;
}
 void CloseServerDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CloseServerDatabaseReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDatabaseReq::kClientIdFieldNumber;
const int CreateDatabaseReq::kDatabaseNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDatabaseReq::CreateDatabaseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.CreateDatabaseReq)
}

void CreateDatabaseReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateDatabaseReq::CreateDatabaseReq(const CreateDatabaseReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.CreateDatabaseReq)
}

void CreateDatabaseReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  database_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateDatabaseReq::~CreateDatabaseReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.CreateDatabaseReq)
  SharedDtor();
}

void CreateDatabaseReq::SharedDtor() {
  database_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateDatabaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateDatabaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateDatabaseReq_descriptor_;
}

const CreateDatabaseReq& CreateDatabaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

CreateDatabaseReq* CreateDatabaseReq::default_instance_ = NULL;

CreateDatabaseReq* CreateDatabaseReq::New(::google::protobuf::Arena* arena) const {
  CreateDatabaseReq* n = new CreateDatabaseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateDatabaseReq::Clear() {
  client_id_ = 0;
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CreateDatabaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.CreateDatabaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_database_name;
        break;
      }

      // optional string database_name = 2;
      case 2: {
        if (tag == 18) {
         parse_database_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database_name().data(), this->database_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.CreateDatabaseReq.database_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.CreateDatabaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.CreateDatabaseReq)
  return false;
#undef DO_
}

void CreateDatabaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.CreateDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.CreateDatabaseReq.database_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->database_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.CreateDatabaseReq)
}

::google::protobuf::uint8* CreateDatabaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.CreateDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.CreateDatabaseReq.database_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->database_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.CreateDatabaseReq)
  return target;
}

int CreateDatabaseReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateDatabaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateDatabaseReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDatabaseReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateDatabaseReq::MergeFrom(const CreateDatabaseReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.database_name().size() > 0) {

    database_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_name_);
  }
}

void CreateDatabaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDatabaseReq::CopyFrom(const CreateDatabaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDatabaseReq::IsInitialized() const {

  return true;
}

void CreateDatabaseReq::Swap(CreateDatabaseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDatabaseReq::InternalSwap(CreateDatabaseReq* other) {
  std::swap(client_id_, other->client_id_);
  database_name_.Swap(&other->database_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateDatabaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateDatabaseReq_descriptor_;
  metadata.reflection = CreateDatabaseReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateDatabaseReq

// optional int32 client_id = 1;
void CreateDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 CreateDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CreateDatabaseReq.client_id)
  return client_id_;
}
 void CreateDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CreateDatabaseReq.client_id)
}

// optional string database_name = 2;
void CreateDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CreateDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.CreateDatabaseReq.database_name)
}
 void CreateDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.CreateDatabaseReq.database_name)
}
 void CreateDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.CreateDatabaseReq.database_name)
}
 ::std::string* CreateDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.CreateDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.CreateDatabaseReq.database_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDatabaseRepl::CreateDatabaseRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.CreateDatabaseRepl)
}

void CreateDatabaseRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateDatabaseRepl::CreateDatabaseRepl(const CreateDatabaseRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.CreateDatabaseRepl)
}

void CreateDatabaseRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CreateDatabaseRepl::~CreateDatabaseRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.CreateDatabaseRepl)
  SharedDtor();
}

void CreateDatabaseRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateDatabaseRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateDatabaseRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateDatabaseRepl_descriptor_;
}

const CreateDatabaseRepl& CreateDatabaseRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

CreateDatabaseRepl* CreateDatabaseRepl::default_instance_ = NULL;

CreateDatabaseRepl* CreateDatabaseRepl::New(::google::protobuf::Arena* arena) const {
  CreateDatabaseRepl* n = new CreateDatabaseRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateDatabaseRepl::Clear() {
}

bool CreateDatabaseRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.CreateDatabaseRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.CreateDatabaseRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.CreateDatabaseRepl)
  return false;
#undef DO_
}

void CreateDatabaseRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.CreateDatabaseRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.CreateDatabaseRepl)
}

::google::protobuf::uint8* CreateDatabaseRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.CreateDatabaseRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.CreateDatabaseRepl)
  return target;
}

int CreateDatabaseRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateDatabaseRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateDatabaseRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDatabaseRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateDatabaseRepl::MergeFrom(const CreateDatabaseRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void CreateDatabaseRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDatabaseRepl::CopyFrom(const CreateDatabaseRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDatabaseRepl::IsInitialized() const {

  return true;
}

void CreateDatabaseRepl::Swap(CreateDatabaseRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDatabaseRepl::InternalSwap(CreateDatabaseRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateDatabaseRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateDatabaseRepl_descriptor_;
  metadata.reflection = CreateDatabaseRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateDatabaseRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyDatabaseReq::kClientIdFieldNumber;
const int DestroyDatabaseReq::kDatabaseNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyDatabaseReq::DestroyDatabaseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DestroyDatabaseReq)
}

void DestroyDatabaseReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DestroyDatabaseReq::DestroyDatabaseReq(const DestroyDatabaseReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DestroyDatabaseReq)
}

void DestroyDatabaseReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  database_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DestroyDatabaseReq::~DestroyDatabaseReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.DestroyDatabaseReq)
  SharedDtor();
}

void DestroyDatabaseReq::SharedDtor() {
  database_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DestroyDatabaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyDatabaseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyDatabaseReq_descriptor_;
}

const DestroyDatabaseReq& DestroyDatabaseReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DestroyDatabaseReq* DestroyDatabaseReq::default_instance_ = NULL;

DestroyDatabaseReq* DestroyDatabaseReq::New(::google::protobuf::Arena* arena) const {
  DestroyDatabaseReq* n = new DestroyDatabaseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyDatabaseReq::Clear() {
  client_id_ = 0;
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DestroyDatabaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DestroyDatabaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_database_name;
        break;
      }

      // optional string database_name = 2;
      case 2: {
        if (tag == 18) {
         parse_database_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_database_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->database_name().data(), this->database_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.DestroyDatabaseReq.database_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DestroyDatabaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DestroyDatabaseReq)
  return false;
#undef DO_
}

void DestroyDatabaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DestroyDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DestroyDatabaseReq.database_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->database_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.DestroyDatabaseReq)
}

::google::protobuf::uint8* DestroyDatabaseReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DestroyDatabaseReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->database_name().data(), this->database_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DestroyDatabaseReq.database_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->database_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DestroyDatabaseReq)
  return target;
}

int DestroyDatabaseReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string database_name = 2;
  if (this->database_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->database_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyDatabaseReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DestroyDatabaseReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyDatabaseReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DestroyDatabaseReq::MergeFrom(const DestroyDatabaseReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.database_name().size() > 0) {

    database_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.database_name_);
  }
}

void DestroyDatabaseReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyDatabaseReq::CopyFrom(const DestroyDatabaseReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyDatabaseReq::IsInitialized() const {

  return true;
}

void DestroyDatabaseReq::Swap(DestroyDatabaseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyDatabaseReq::InternalSwap(DestroyDatabaseReq* other) {
  std::swap(client_id_, other->client_id_);
  database_name_.Swap(&other->database_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyDatabaseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyDatabaseReq_descriptor_;
  metadata.reflection = DestroyDatabaseReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyDatabaseReq

// optional int32 client_id = 1;
void DestroyDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 DestroyDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DestroyDatabaseReq.client_id)
  return client_id_;
}
 void DestroyDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DestroyDatabaseReq.client_id)
}

// optional string database_name = 2;
void DestroyDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DestroyDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DestroyDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DestroyDatabaseReq.database_name)
}
 void DestroyDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DestroyDatabaseReq.database_name)
}
 void DestroyDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DestroyDatabaseReq.database_name)
}
 ::std::string* DestroyDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DestroyDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DestroyDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DestroyDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DestroyDatabaseReq.database_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyDatabaseRepl::DestroyDatabaseRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DestroyDatabaseRepl)
}

void DestroyDatabaseRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DestroyDatabaseRepl::DestroyDatabaseRepl(const DestroyDatabaseRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DestroyDatabaseRepl)
}

void DestroyDatabaseRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DestroyDatabaseRepl::~DestroyDatabaseRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.DestroyDatabaseRepl)
  SharedDtor();
}

void DestroyDatabaseRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DestroyDatabaseRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyDatabaseRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DestroyDatabaseRepl_descriptor_;
}

const DestroyDatabaseRepl& DestroyDatabaseRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DestroyDatabaseRepl* DestroyDatabaseRepl::default_instance_ = NULL;

DestroyDatabaseRepl* DestroyDatabaseRepl::New(::google::protobuf::Arena* arena) const {
  DestroyDatabaseRepl* n = new DestroyDatabaseRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyDatabaseRepl::Clear() {
}

bool DestroyDatabaseRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DestroyDatabaseRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DestroyDatabaseRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DestroyDatabaseRepl)
  return false;
#undef DO_
}

void DestroyDatabaseRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DestroyDatabaseRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.DestroyDatabaseRepl)
}

::google::protobuf::uint8* DestroyDatabaseRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DestroyDatabaseRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DestroyDatabaseRepl)
  return target;
}

int DestroyDatabaseRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyDatabaseRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DestroyDatabaseRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyDatabaseRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DestroyDatabaseRepl::MergeFrom(const DestroyDatabaseRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void DestroyDatabaseRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyDatabaseRepl::CopyFrom(const DestroyDatabaseRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyDatabaseRepl::IsInitialized() const {

  return true;
}

void DestroyDatabaseRepl::Swap(DestroyDatabaseRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyDatabaseRepl::InternalSwap(DestroyDatabaseRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyDatabaseRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DestroyDatabaseRepl_descriptor_;
  metadata.reflection = DestroyDatabaseRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyDatabaseRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginTransactionReq::kClientIdFieldNumber;
const int BeginTransactionReq::kRwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionReq::BeginTransactionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.BeginTransactionReq)
}

void BeginTransactionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BeginTransactionReq::BeginTransactionReq(const BeginTransactionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.BeginTransactionReq)
}

void BeginTransactionReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
  rw_ = false;
}

BeginTransactionReq::~BeginTransactionReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.BeginTransactionReq)
  SharedDtor();
}

void BeginTransactionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeginTransactionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginTransactionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeginTransactionReq_descriptor_;
}

const BeginTransactionReq& BeginTransactionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

BeginTransactionReq* BeginTransactionReq::default_instance_ = NULL;

BeginTransactionReq* BeginTransactionReq::New(::google::protobuf::Arena* arena) const {
  BeginTransactionReq* n = new BeginTransactionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginTransactionReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BeginTransactionReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, rw_);

#undef ZR_HELPER_
#undef ZR_

}

bool BeginTransactionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.BeginTransactionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rw;
        break;
      }

      // optional bool rw = 2;
      case 2: {
        if (tag == 16) {
         parse_rw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rw_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.BeginTransactionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.BeginTransactionReq)
  return false;
#undef DO_
}

void BeginTransactionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.BeginTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional bool rw = 2;
  if (this->rw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->rw(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.BeginTransactionReq)
}

::google::protobuf::uint8* BeginTransactionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.BeginTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional bool rw = 2;
  if (this->rw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->rw(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.BeginTransactionReq)
  return target;
}

int BeginTransactionReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional bool rw = 2;
  if (this->rw() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginTransactionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BeginTransactionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginTransactionReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeginTransactionReq::MergeFrom(const BeginTransactionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.rw() != 0) {
    set_rw(from.rw());
  }
}

void BeginTransactionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionReq::CopyFrom(const BeginTransactionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionReq::IsInitialized() const {

  return true;
}

void BeginTransactionReq::Swap(BeginTransactionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionReq::InternalSwap(BeginTransactionReq* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(rw_, other->rw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginTransactionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeginTransactionReq_descriptor_;
  metadata.reflection = BeginTransactionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BeginTransactionReq

// optional int32 client_id = 1;
void BeginTransactionReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 BeginTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.BeginTransactionReq.client_id)
  return client_id_;
}
 void BeginTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.BeginTransactionReq.client_id)
}

// optional bool rw = 2;
void BeginTransactionReq::clear_rw() {
  rw_ = false;
}
 bool BeginTransactionReq::rw() const {
  // @@protoc_insertion_point(field_get:rasnet.service.BeginTransactionReq.rw)
  return rw_;
}
 void BeginTransactionReq::set_rw(bool value) {
  
  rw_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.BeginTransactionReq.rw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginTransactionRepl::BeginTransactionRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.BeginTransactionRepl)
}

void BeginTransactionRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BeginTransactionRepl::BeginTransactionRepl(const BeginTransactionRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.BeginTransactionRepl)
}

void BeginTransactionRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

BeginTransactionRepl::~BeginTransactionRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.BeginTransactionRepl)
  SharedDtor();
}

void BeginTransactionRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BeginTransactionRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginTransactionRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BeginTransactionRepl_descriptor_;
}

const BeginTransactionRepl& BeginTransactionRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

BeginTransactionRepl* BeginTransactionRepl::default_instance_ = NULL;

BeginTransactionRepl* BeginTransactionRepl::New(::google::protobuf::Arena* arena) const {
  BeginTransactionRepl* n = new BeginTransactionRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginTransactionRepl::Clear() {
}

bool BeginTransactionRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.BeginTransactionRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.BeginTransactionRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.BeginTransactionRepl)
  return false;
#undef DO_
}

void BeginTransactionRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.BeginTransactionRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.BeginTransactionRepl)
}

::google::protobuf::uint8* BeginTransactionRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.BeginTransactionRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.BeginTransactionRepl)
  return target;
}

int BeginTransactionRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginTransactionRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BeginTransactionRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginTransactionRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BeginTransactionRepl::MergeFrom(const BeginTransactionRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void BeginTransactionRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginTransactionRepl::CopyFrom(const BeginTransactionRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginTransactionRepl::IsInitialized() const {

  return true;
}

void BeginTransactionRepl::Swap(BeginTransactionRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginTransactionRepl::InternalSwap(BeginTransactionRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginTransactionRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BeginTransactionRepl_descriptor_;
  metadata.reflection = BeginTransactionRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BeginTransactionRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitTransactionReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitTransactionReq::CommitTransactionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.CommitTransactionReq)
}

void CommitTransactionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommitTransactionReq::CommitTransactionReq(const CommitTransactionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.CommitTransactionReq)
}

void CommitTransactionReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

CommitTransactionReq::~CommitTransactionReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.CommitTransactionReq)
  SharedDtor();
}

void CommitTransactionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommitTransactionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitTransactionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommitTransactionReq_descriptor_;
}

const CommitTransactionReq& CommitTransactionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

CommitTransactionReq* CommitTransactionReq::default_instance_ = NULL;

CommitTransactionReq* CommitTransactionReq::New(::google::protobuf::Arena* arena) const {
  CommitTransactionReq* n = new CommitTransactionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommitTransactionReq::Clear() {
  client_id_ = 0;
}

bool CommitTransactionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.CommitTransactionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.CommitTransactionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.CommitTransactionReq)
  return false;
#undef DO_
}

void CommitTransactionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.CommitTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.CommitTransactionReq)
}

::google::protobuf::uint8* CommitTransactionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.CommitTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.CommitTransactionReq)
  return target;
}

int CommitTransactionReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitTransactionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommitTransactionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitTransactionReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommitTransactionReq::MergeFrom(const CommitTransactionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void CommitTransactionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitTransactionReq::CopyFrom(const CommitTransactionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitTransactionReq::IsInitialized() const {

  return true;
}

void CommitTransactionReq::Swap(CommitTransactionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitTransactionReq::InternalSwap(CommitTransactionReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommitTransactionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommitTransactionReq_descriptor_;
  metadata.reflection = CommitTransactionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommitTransactionReq

// optional int32 client_id = 1;
void CommitTransactionReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 CommitTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CommitTransactionReq.client_id)
  return client_id_;
}
 void CommitTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CommitTransactionReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitTransactionRepl::CommitTransactionRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.CommitTransactionRepl)
}

void CommitTransactionRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommitTransactionRepl::CommitTransactionRepl(const CommitTransactionRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.CommitTransactionRepl)
}

void CommitTransactionRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CommitTransactionRepl::~CommitTransactionRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.CommitTransactionRepl)
  SharedDtor();
}

void CommitTransactionRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommitTransactionRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitTransactionRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommitTransactionRepl_descriptor_;
}

const CommitTransactionRepl& CommitTransactionRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

CommitTransactionRepl* CommitTransactionRepl::default_instance_ = NULL;

CommitTransactionRepl* CommitTransactionRepl::New(::google::protobuf::Arena* arena) const {
  CommitTransactionRepl* n = new CommitTransactionRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommitTransactionRepl::Clear() {
}

bool CommitTransactionRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.CommitTransactionRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.CommitTransactionRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.CommitTransactionRepl)
  return false;
#undef DO_
}

void CommitTransactionRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.CommitTransactionRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.CommitTransactionRepl)
}

::google::protobuf::uint8* CommitTransactionRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.CommitTransactionRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.CommitTransactionRepl)
  return target;
}

int CommitTransactionRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitTransactionRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommitTransactionRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitTransactionRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommitTransactionRepl::MergeFrom(const CommitTransactionRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void CommitTransactionRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitTransactionRepl::CopyFrom(const CommitTransactionRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitTransactionRepl::IsInitialized() const {

  return true;
}

void CommitTransactionRepl::Swap(CommitTransactionRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitTransactionRepl::InternalSwap(CommitTransactionRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommitTransactionRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommitTransactionRepl_descriptor_;
  metadata.reflection = CommitTransactionRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommitTransactionRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortTransactionReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortTransactionReq::AbortTransactionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.AbortTransactionReq)
}

void AbortTransactionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AbortTransactionReq::AbortTransactionReq(const AbortTransactionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.AbortTransactionReq)
}

void AbortTransactionReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

AbortTransactionReq::~AbortTransactionReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.AbortTransactionReq)
  SharedDtor();
}

void AbortTransactionReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortTransactionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortTransactionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortTransactionReq_descriptor_;
}

const AbortTransactionReq& AbortTransactionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

AbortTransactionReq* AbortTransactionReq::default_instance_ = NULL;

AbortTransactionReq* AbortTransactionReq::New(::google::protobuf::Arena* arena) const {
  AbortTransactionReq* n = new AbortTransactionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortTransactionReq::Clear() {
  client_id_ = 0;
}

bool AbortTransactionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.AbortTransactionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.AbortTransactionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.AbortTransactionReq)
  return false;
#undef DO_
}

void AbortTransactionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.AbortTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.AbortTransactionReq)
}

::google::protobuf::uint8* AbortTransactionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.AbortTransactionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.AbortTransactionReq)
  return target;
}

int AbortTransactionReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortTransactionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AbortTransactionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortTransactionReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AbortTransactionReq::MergeFrom(const AbortTransactionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void AbortTransactionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortTransactionReq::CopyFrom(const AbortTransactionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortTransactionReq::IsInitialized() const {

  return true;
}

void AbortTransactionReq::Swap(AbortTransactionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortTransactionReq::InternalSwap(AbortTransactionReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortTransactionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortTransactionReq_descriptor_;
  metadata.reflection = AbortTransactionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbortTransactionReq

// optional int32 client_id = 1;
void AbortTransactionReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 AbortTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.AbortTransactionReq.client_id)
  return client_id_;
}
 void AbortTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.AbortTransactionReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortTransactionRepl::AbortTransactionRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.AbortTransactionRepl)
}

void AbortTransactionRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AbortTransactionRepl::AbortTransactionRepl(const AbortTransactionRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.AbortTransactionRepl)
}

void AbortTransactionRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

AbortTransactionRepl::~AbortTransactionRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.AbortTransactionRepl)
  SharedDtor();
}

void AbortTransactionRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortTransactionRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortTransactionRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortTransactionRepl_descriptor_;
}

const AbortTransactionRepl& AbortTransactionRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

AbortTransactionRepl* AbortTransactionRepl::default_instance_ = NULL;

AbortTransactionRepl* AbortTransactionRepl::New(::google::protobuf::Arena* arena) const {
  AbortTransactionRepl* n = new AbortTransactionRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortTransactionRepl::Clear() {
}

bool AbortTransactionRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.AbortTransactionRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.AbortTransactionRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.AbortTransactionRepl)
  return false;
#undef DO_
}

void AbortTransactionRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.AbortTransactionRepl)
  // @@protoc_insertion_point(serialize_end:rasnet.service.AbortTransactionRepl)
}

::google::protobuf::uint8* AbortTransactionRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.AbortTransactionRepl)
  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.AbortTransactionRepl)
  return target;
}

int AbortTransactionRepl::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortTransactionRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AbortTransactionRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortTransactionRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AbortTransactionRepl::MergeFrom(const AbortTransactionRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void AbortTransactionRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortTransactionRepl::CopyFrom(const AbortTransactionRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortTransactionRepl::IsInitialized() const {

  return true;
}

void AbortTransactionRepl::Swap(AbortTransactionRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortTransactionRepl::InternalSwap(AbortTransactionRepl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortTransactionRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortTransactionRepl_descriptor_;
  metadata.reflection = AbortTransactionRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbortTransactionRepl

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsTransactionOpenReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsTransactionOpenReq::IsTransactionOpenReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.IsTransactionOpenReq)
}

void IsTransactionOpenReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IsTransactionOpenReq::IsTransactionOpenReq(const IsTransactionOpenReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.IsTransactionOpenReq)
}

void IsTransactionOpenReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

IsTransactionOpenReq::~IsTransactionOpenReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.IsTransactionOpenReq)
  SharedDtor();
}

void IsTransactionOpenReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsTransactionOpenReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsTransactionOpenReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsTransactionOpenReq_descriptor_;
}

const IsTransactionOpenReq& IsTransactionOpenReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

IsTransactionOpenReq* IsTransactionOpenReq::default_instance_ = NULL;

IsTransactionOpenReq* IsTransactionOpenReq::New(::google::protobuf::Arena* arena) const {
  IsTransactionOpenReq* n = new IsTransactionOpenReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsTransactionOpenReq::Clear() {
  client_id_ = 0;
}

bool IsTransactionOpenReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.IsTransactionOpenReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.IsTransactionOpenReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.IsTransactionOpenReq)
  return false;
#undef DO_
}

void IsTransactionOpenReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.IsTransactionOpenReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.IsTransactionOpenReq)
}

::google::protobuf::uint8* IsTransactionOpenReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.IsTransactionOpenReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.IsTransactionOpenReq)
  return target;
}

int IsTransactionOpenReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsTransactionOpenReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IsTransactionOpenReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IsTransactionOpenReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsTransactionOpenReq::MergeFrom(const IsTransactionOpenReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void IsTransactionOpenReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsTransactionOpenReq::CopyFrom(const IsTransactionOpenReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsTransactionOpenReq::IsInitialized() const {

  return true;
}

void IsTransactionOpenReq::Swap(IsTransactionOpenReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsTransactionOpenReq::InternalSwap(IsTransactionOpenReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IsTransactionOpenReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsTransactionOpenReq_descriptor_;
  metadata.reflection = IsTransactionOpenReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsTransactionOpenReq

// optional int32 client_id = 1;
void IsTransactionOpenReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 IsTransactionOpenReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.IsTransactionOpenReq.client_id)
  return client_id_;
}
 void IsTransactionOpenReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.IsTransactionOpenReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsTransactionOpenRepl::kIsOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsTransactionOpenRepl::IsTransactionOpenRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.IsTransactionOpenRepl)
}

void IsTransactionOpenRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IsTransactionOpenRepl::IsTransactionOpenRepl(const IsTransactionOpenRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.IsTransactionOpenRepl)
}

void IsTransactionOpenRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isopen_ = false;
}

IsTransactionOpenRepl::~IsTransactionOpenRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.IsTransactionOpenRepl)
  SharedDtor();
}

void IsTransactionOpenRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsTransactionOpenRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsTransactionOpenRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsTransactionOpenRepl_descriptor_;
}

const IsTransactionOpenRepl& IsTransactionOpenRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

IsTransactionOpenRepl* IsTransactionOpenRepl::default_instance_ = NULL;

IsTransactionOpenRepl* IsTransactionOpenRepl::New(::google::protobuf::Arena* arena) const {
  IsTransactionOpenRepl* n = new IsTransactionOpenRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsTransactionOpenRepl::Clear() {
  isopen_ = false;
}

bool IsTransactionOpenRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.IsTransactionOpenRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isOpen = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isopen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.IsTransactionOpenRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.IsTransactionOpenRepl)
  return false;
#undef DO_
}

void IsTransactionOpenRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.IsTransactionOpenRepl)
  // optional bool isOpen = 1;
  if (this->isopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isopen(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.IsTransactionOpenRepl)
}

::google::protobuf::uint8* IsTransactionOpenRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.IsTransactionOpenRepl)
  // optional bool isOpen = 1;
  if (this->isopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isopen(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.IsTransactionOpenRepl)
  return target;
}

int IsTransactionOpenRepl::ByteSize() const {
  int total_size = 0;

  // optional bool isOpen = 1;
  if (this->isopen() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsTransactionOpenRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IsTransactionOpenRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IsTransactionOpenRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsTransactionOpenRepl::MergeFrom(const IsTransactionOpenRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.isopen() != 0) {
    set_isopen(from.isopen());
  }
}

void IsTransactionOpenRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsTransactionOpenRepl::CopyFrom(const IsTransactionOpenRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsTransactionOpenRepl::IsInitialized() const {

  return true;
}

void IsTransactionOpenRepl::Swap(IsTransactionOpenRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsTransactionOpenRepl::InternalSwap(IsTransactionOpenRepl* other) {
  std::swap(isopen_, other->isopen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IsTransactionOpenRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsTransactionOpenRepl_descriptor_;
  metadata.reflection = IsTransactionOpenRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsTransactionOpenRepl

// optional bool isOpen = 1;
void IsTransactionOpenRepl::clear_isopen() {
  isopen_ = false;
}
 bool IsTransactionOpenRepl::isopen() const {
  // @@protoc_insertion_point(field_get:rasnet.service.IsTransactionOpenRepl.isOpen)
  return isopen_;
}
 void IsTransactionOpenRepl::set_isopen(bool value) {
  
  isopen_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.IsTransactionOpenRepl.isOpen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartInsertMDDReq::kClientIdFieldNumber;
const int StartInsertMDDReq::kCollNameFieldNumber;
const int StartInsertMDDReq::kDomainFieldNumber;
const int StartInsertMDDReq::kTypeLengthFieldNumber;
const int StartInsertMDDReq::kTypeNameFieldNumber;
const int StartInsertMDDReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartInsertMDDReq::StartInsertMDDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.StartInsertMDDReq)
}

void StartInsertMDDReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StartInsertMDDReq::StartInsertMDDReq(const StartInsertMDDReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.StartInsertMDDReq)
}

void StartInsertMDDReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_length_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartInsertMDDReq::~StartInsertMDDReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.StartInsertMDDReq)
  SharedDtor();
}

void StartInsertMDDReq::SharedDtor() {
  collname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StartInsertMDDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartInsertMDDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartInsertMDDReq_descriptor_;
}

const StartInsertMDDReq& StartInsertMDDReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

StartInsertMDDReq* StartInsertMDDReq::default_instance_ = NULL;

StartInsertMDDReq* StartInsertMDDReq::New(::google::protobuf::Arena* arena) const {
  StartInsertMDDReq* n = new StartInsertMDDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartInsertMDDReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StartInsertMDDReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, type_length_);
  collname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool StartInsertMDDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.StartInsertMDDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collName;
        break;
      }

      // optional string collName = 2;
      case 2: {
        if (tag == 18) {
         parse_collName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collname().data(), this->collname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.StartInsertMDDReq.collName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_domain;
        break;
      }

      // optional bytes domain = 3;
      case 3: {
        if (tag == 26) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_domain()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type_length;
        break;
      }

      // optional int32 type_length = 4;
      case 4: {
        if (tag == 32) {
         parse_type_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_type_name;
        break;
      }

      // optional string type_name = 5;
      case 5: {
        if (tag == 42) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.StartInsertMDDReq.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oid;
        break;
      }

      // optional string oid = 6;
      case 6: {
        if (tag == 50) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.StartInsertMDDReq.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.StartInsertMDDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.StartInsertMDDReq)
  return false;
#undef DO_
}

void StartInsertMDDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.StartInsertMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collName = 2;
  if (this->collname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collname().data(), this->collname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.collName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collname(), output);
  }

  // optional bytes domain = 3;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->domain(), output);
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type_length(), output);
  }

  // optional string type_name = 5;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->type_name(), output);
  }

  // optional string oid = 6;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.StartInsertMDDReq)
}

::google::protobuf::uint8* StartInsertMDDReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.StartInsertMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collName = 2;
  if (this->collname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collname().data(), this->collname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.collName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collname(), target);
  }

  // optional bytes domain = 3;
  if (this->domain().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->domain(), target);
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type_length(), target);
  }

  // optional string type_name = 5;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->type_name(), target);
  }

  // optional string oid = 6;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertMDDReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.StartInsertMDDReq)
  return target;
}

int StartInsertMDDReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collName = 2;
  if (this->collname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collname());
  }

  // optional bytes domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->domain());
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_length());
  }

  // optional string type_name = 5;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string oid = 6;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartInsertMDDReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StartInsertMDDReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartInsertMDDReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartInsertMDDReq::MergeFrom(const StartInsertMDDReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collname().size() > 0) {

    collname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collname_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.type_length() != 0) {
    set_type_length(from.type_length());
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void StartInsertMDDReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartInsertMDDReq::CopyFrom(const StartInsertMDDReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartInsertMDDReq::IsInitialized() const {

  return true;
}

void StartInsertMDDReq::Swap(StartInsertMDDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartInsertMDDReq::InternalSwap(StartInsertMDDReq* other) {
  std::swap(client_id_, other->client_id_);
  collname_.Swap(&other->collname_);
  domain_.Swap(&other->domain_);
  std::swap(type_length_, other->type_length_);
  type_name_.Swap(&other->type_name_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartInsertMDDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartInsertMDDReq_descriptor_;
  metadata.reflection = StartInsertMDDReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartInsertMDDReq

// optional int32 client_id = 1;
void StartInsertMDDReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 StartInsertMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.client_id)
  return client_id_;
}
 void StartInsertMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.client_id)
}

// optional string collName = 2;
void StartInsertMDDReq::clear_collname() {
  collname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertMDDReq::collname() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.collName)
  return collname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_collname(const ::std::string& value) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.collName)
}
 void StartInsertMDDReq::set_collname(const char* value) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.collName)
}
 void StartInsertMDDReq::set_collname(const char* value, size_t size) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.collName)
}
 ::std::string* StartInsertMDDReq::mutable_collname() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.collName)
  return collname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertMDDReq::release_collname() {
  
  return collname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_allocated_collname(::std::string* collname) {
  if (collname != NULL) {
    
  } else {
    
  }
  collname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collname);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.collName)
}

// optional bytes domain = 3;
void StartInsertMDDReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertMDDReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.domain)
}
 void StartInsertMDDReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.domain)
}
 void StartInsertMDDReq::set_domain(const void* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.domain)
}
 ::std::string* StartInsertMDDReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertMDDReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.domain)
}

// optional int32 type_length = 4;
void StartInsertMDDReq::clear_type_length() {
  type_length_ = 0;
}
 ::google::protobuf::int32 StartInsertMDDReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.type_length)
  return type_length_;
}
 void StartInsertMDDReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.type_length)
}

// optional string type_name = 5;
void StartInsertMDDReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertMDDReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.type_name)
}
 void StartInsertMDDReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.type_name)
}
 void StartInsertMDDReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.type_name)
}
 ::std::string* StartInsertMDDReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertMDDReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.type_name)
}

// optional string oid = 6;
void StartInsertMDDReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertMDDReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.oid)
}
 void StartInsertMDDReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.oid)
}
 void StartInsertMDDReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.oid)
}
 ::std::string* StartInsertMDDReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertMDDReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertMDDReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartInsertMDDRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartInsertMDDRepl::StartInsertMDDRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.StartInsertMDDRepl)
}

void StartInsertMDDRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StartInsertMDDRepl::StartInsertMDDRepl(const StartInsertMDDRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.StartInsertMDDRepl)
}

void StartInsertMDDRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

StartInsertMDDRepl::~StartInsertMDDRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.StartInsertMDDRepl)
  SharedDtor();
}

void StartInsertMDDRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartInsertMDDRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartInsertMDDRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartInsertMDDRepl_descriptor_;
}

const StartInsertMDDRepl& StartInsertMDDRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

StartInsertMDDRepl* StartInsertMDDRepl::default_instance_ = NULL;

StartInsertMDDRepl* StartInsertMDDRepl::New(::google::protobuf::Arena* arena) const {
  StartInsertMDDRepl* n = new StartInsertMDDRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartInsertMDDRepl::Clear() {
  status_ = 0;
}

bool StartInsertMDDRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.StartInsertMDDRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.StartInsertMDDRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.StartInsertMDDRepl)
  return false;
#undef DO_
}

void StartInsertMDDRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.StartInsertMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.StartInsertMDDRepl)
}

::google::protobuf::uint8* StartInsertMDDRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.StartInsertMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.StartInsertMDDRepl)
  return target;
}

int StartInsertMDDRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartInsertMDDRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StartInsertMDDRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartInsertMDDRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartInsertMDDRepl::MergeFrom(const StartInsertMDDRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void StartInsertMDDRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartInsertMDDRepl::CopyFrom(const StartInsertMDDRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartInsertMDDRepl::IsInitialized() const {

  return true;
}

void StartInsertMDDRepl::Swap(StartInsertMDDRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartInsertMDDRepl::InternalSwap(StartInsertMDDRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartInsertMDDRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartInsertMDDRepl_descriptor_;
  metadata.reflection = StartInsertMDDRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartInsertMDDRepl

// optional int32 status = 1;
void StartInsertMDDRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 StartInsertMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDRepl.status)
  return status_;
}
 void StartInsertMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertTileReq::kClientIdFieldNumber;
const int InsertTileReq::kPersistentFieldNumber;
const int InsertTileReq::kDomainFieldNumber;
const int InsertTileReq::kTypeLengthFieldNumber;
const int InsertTileReq::kCurrentFormatFieldNumber;
const int InsertTileReq::kStorageFormatFieldNumber;
const int InsertTileReq::kDataFieldNumber;
const int InsertTileReq::kDataLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertTileReq::InsertTileReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InsertTileReq)
}

void InsertTileReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InsertTileReq::InsertTileReq(const InsertTileReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InsertTileReq)
}

void InsertTileReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  persistent_ = false;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_length_ = 0;
  current_format_ = 0;
  storage_format_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_length_ = 0;
}

InsertTileReq::~InsertTileReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.InsertTileReq)
  SharedDtor();
}

void InsertTileReq::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InsertTileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertTileReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertTileReq_descriptor_;
}

const InsertTileReq& InsertTileReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InsertTileReq* InsertTileReq::default_instance_ = NULL;

InsertTileReq* InsertTileReq::New(::google::protobuf::Arena* arena) const {
  InsertTileReq* n = new InsertTileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertTileReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InsertTileReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, persistent_);
  ZR_(type_length_, current_format_);
  ZR_(storage_format_, data_length_);
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool InsertTileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InsertTileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_persistent;
        break;
      }

      // optional bool persistent = 2;
      case 2: {
        if (tag == 16) {
         parse_persistent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_domain;
        break;
      }

      // optional string domain = 3;
      case 3: {
        if (tag == 26) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.InsertTileReq.domain"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type_length;
        break;
      }

      // optional int32 type_length = 4;
      case 4: {
        if (tag == 32) {
         parse_type_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_current_format;
        break;
      }

      // optional int32 current_format = 5;
      case 5: {
        if (tag == 40) {
         parse_current_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_storage_format;
        break;
      }

      // optional int32 storage_format = 6;
      case 6: {
        if (tag == 48) {
         parse_storage_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_data;
        break;
      }

      // optional bytes data = 7;
      case 7: {
        if (tag == 58) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_data_length;
        break;
      }

      // optional int32 data_length = 8;
      case 8: {
        if (tag == 64) {
         parse_data_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InsertTileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InsertTileReq)
  return false;
#undef DO_
}

void InsertTileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InsertTileReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->persistent(), output);
  }

  // optional string domain = 3;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertTileReq.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->domain(), output);
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type_length(), output);
  }

  // optional int32 current_format = 5;
  if (this->current_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->current_format(), output);
  }

  // optional int32 storage_format = 6;
  if (this->storage_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->storage_format(), output);
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->data(), output);
  }

  // optional int32 data_length = 8;
  if (this->data_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->data_length(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InsertTileReq)
}

::google::protobuf::uint8* InsertTileReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InsertTileReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->persistent(), target);
  }

  // optional string domain = 3;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertTileReq.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->domain(), target);
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type_length(), target);
  }

  // optional int32 current_format = 5;
  if (this->current_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->current_format(), target);
  }

  // optional int32 storage_format = 6;
  if (this->storage_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->storage_format(), target);
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->data(), target);
  }

  // optional int32 data_length = 8;
  if (this->data_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->data_length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InsertTileReq)
  return target;
}

int InsertTileReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    total_size += 1 + 1;
  }

  // optional string domain = 3;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // optional int32 type_length = 4;
  if (this->type_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_length());
  }

  // optional int32 current_format = 5;
  if (this->current_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_format());
  }

  // optional int32 storage_format = 6;
  if (this->storage_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_format());
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // optional int32 data_length = 8;
  if (this->data_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_length());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertTileReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InsertTileReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertTileReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertTileReq::MergeFrom(const InsertTileReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.persistent() != 0) {
    set_persistent(from.persistent());
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.type_length() != 0) {
    set_type_length(from.type_length());
  }
  if (from.current_format() != 0) {
    set_current_format(from.current_format());
  }
  if (from.storage_format() != 0) {
    set_storage_format(from.storage_format());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.data_length() != 0) {
    set_data_length(from.data_length());
  }
}

void InsertTileReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertTileReq::CopyFrom(const InsertTileReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertTileReq::IsInitialized() const {

  return true;
}

void InsertTileReq::Swap(InsertTileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertTileReq::InternalSwap(InsertTileReq* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(persistent_, other->persistent_);
  domain_.Swap(&other->domain_);
  std::swap(type_length_, other->type_length_);
  std::swap(current_format_, other->current_format_);
  std::swap(storage_format_, other->storage_format_);
  data_.Swap(&other->data_);
  std::swap(data_length_, other->data_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertTileReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertTileReq_descriptor_;
  metadata.reflection = InsertTileReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertTileReq

// optional int32 client_id = 1;
void InsertTileReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 InsertTileReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.client_id)
  return client_id_;
}
 void InsertTileReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.client_id)
}

// optional bool persistent = 2;
void InsertTileReq::clear_persistent() {
  persistent_ = false;
}
 bool InsertTileReq::persistent() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.persistent)
  return persistent_;
}
 void InsertTileReq::set_persistent(bool value) {
  
  persistent_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.persistent)
}

// optional string domain = 3;
void InsertTileReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertTileReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertTileReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.domain)
}
 void InsertTileReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertTileReq.domain)
}
 void InsertTileReq::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertTileReq.domain)
}
 ::std::string* InsertTileReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertTileReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertTileReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertTileReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertTileReq.domain)
}

// optional int32 type_length = 4;
void InsertTileReq::clear_type_length() {
  type_length_ = 0;
}
 ::google::protobuf::int32 InsertTileReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.type_length)
  return type_length_;
}
 void InsertTileReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.type_length)
}

// optional int32 current_format = 5;
void InsertTileReq::clear_current_format() {
  current_format_ = 0;
}
 ::google::protobuf::int32 InsertTileReq::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.current_format)
  return current_format_;
}
 void InsertTileReq::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.current_format)
}

// optional int32 storage_format = 6;
void InsertTileReq::clear_storage_format() {
  storage_format_ = 0;
}
 ::google::protobuf::int32 InsertTileReq::storage_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.storage_format)
  return storage_format_;
}
 void InsertTileReq::set_storage_format(::google::protobuf::int32 value) {
  
  storage_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.storage_format)
}

// optional bytes data = 7;
void InsertTileReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertTileReq::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertTileReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.data)
}
 void InsertTileReq::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertTileReq.data)
}
 void InsertTileReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertTileReq.data)
}
 ::std::string* InsertTileReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertTileReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertTileReq::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertTileReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertTileReq.data)
}

// optional int32 data_length = 8;
void InsertTileReq::clear_data_length() {
  data_length_ = 0;
}
 ::google::protobuf::int32 InsertTileReq::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.data_length)
  return data_length_;
}
 void InsertTileReq::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.data_length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertTileRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertTileRepl::InsertTileRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InsertTileRepl)
}

void InsertTileRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InsertTileRepl::InsertTileRepl(const InsertTileRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InsertTileRepl)
}

void InsertTileRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

InsertTileRepl::~InsertTileRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.InsertTileRepl)
  SharedDtor();
}

void InsertTileRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InsertTileRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertTileRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertTileRepl_descriptor_;
}

const InsertTileRepl& InsertTileRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InsertTileRepl* InsertTileRepl::default_instance_ = NULL;

InsertTileRepl* InsertTileRepl::New(::google::protobuf::Arena* arena) const {
  InsertTileRepl* n = new InsertTileRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertTileRepl::Clear() {
  status_ = 0;
}

bool InsertTileRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InsertTileRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InsertTileRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InsertTileRepl)
  return false;
#undef DO_
}

void InsertTileRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InsertTileRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InsertTileRepl)
}

::google::protobuf::uint8* InsertTileRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InsertTileRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InsertTileRepl)
  return target;
}

int InsertTileRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertTileRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InsertTileRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertTileRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertTileRepl::MergeFrom(const InsertTileRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void InsertTileRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertTileRepl::CopyFrom(const InsertTileRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertTileRepl::IsInitialized() const {

  return true;
}

void InsertTileRepl::Swap(InsertTileRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertTileRepl::InternalSwap(InsertTileRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertTileRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertTileRepl_descriptor_;
  metadata.reflection = InsertTileRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertTileRepl

// optional int32 status = 1;
void InsertTileRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 InsertTileRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileRepl.status)
  return status_;
}
 void InsertTileRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndInsertMDDReq::kClientIdFieldNumber;
const int EndInsertMDDReq::kPersistentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndInsertMDDReq::EndInsertMDDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.EndInsertMDDReq)
}

void EndInsertMDDReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EndInsertMDDReq::EndInsertMDDReq(const EndInsertMDDReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.EndInsertMDDReq)
}

void EndInsertMDDReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
  persistent_ = false;
}

EndInsertMDDReq::~EndInsertMDDReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.EndInsertMDDReq)
  SharedDtor();
}

void EndInsertMDDReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EndInsertMDDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndInsertMDDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EndInsertMDDReq_descriptor_;
}

const EndInsertMDDReq& EndInsertMDDReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

EndInsertMDDReq* EndInsertMDDReq::default_instance_ = NULL;

EndInsertMDDReq* EndInsertMDDReq::New(::google::protobuf::Arena* arena) const {
  EndInsertMDDReq* n = new EndInsertMDDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndInsertMDDReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EndInsertMDDReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, persistent_);

#undef ZR_HELPER_
#undef ZR_

}

bool EndInsertMDDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.EndInsertMDDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_persistent;
        break;
      }

      // optional bool persistent = 2;
      case 2: {
        if (tag == 16) {
         parse_persistent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.EndInsertMDDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.EndInsertMDDReq)
  return false;
#undef DO_
}

void EndInsertMDDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.EndInsertMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->persistent(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.EndInsertMDDReq)
}

::google::protobuf::uint8* EndInsertMDDReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.EndInsertMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->persistent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.EndInsertMDDReq)
  return target;
}

int EndInsertMDDReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional bool persistent = 2;
  if (this->persistent() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndInsertMDDReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EndInsertMDDReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EndInsertMDDReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EndInsertMDDReq::MergeFrom(const EndInsertMDDReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.persistent() != 0) {
    set_persistent(from.persistent());
  }
}

void EndInsertMDDReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndInsertMDDReq::CopyFrom(const EndInsertMDDReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndInsertMDDReq::IsInitialized() const {

  return true;
}

void EndInsertMDDReq::Swap(EndInsertMDDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndInsertMDDReq::InternalSwap(EndInsertMDDReq* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(persistent_, other->persistent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndInsertMDDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EndInsertMDDReq_descriptor_;
  metadata.reflection = EndInsertMDDReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndInsertMDDReq

// optional int32 client_id = 1;
void EndInsertMDDReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 EndInsertMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDReq.client_id)
  return client_id_;
}
 void EndInsertMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDReq.client_id)
}

// optional bool persistent = 2;
void EndInsertMDDReq::clear_persistent() {
  persistent_ = false;
}
 bool EndInsertMDDReq::persistent() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDReq.persistent)
  return persistent_;
}
 void EndInsertMDDReq::set_persistent(bool value) {
  
  persistent_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDReq.persistent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndInsertMDDRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndInsertMDDRepl::EndInsertMDDRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.EndInsertMDDRepl)
}

void EndInsertMDDRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EndInsertMDDRepl::EndInsertMDDRepl(const EndInsertMDDRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.EndInsertMDDRepl)
}

void EndInsertMDDRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

EndInsertMDDRepl::~EndInsertMDDRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.EndInsertMDDRepl)
  SharedDtor();
}

void EndInsertMDDRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EndInsertMDDRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndInsertMDDRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EndInsertMDDRepl_descriptor_;
}

const EndInsertMDDRepl& EndInsertMDDRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

EndInsertMDDRepl* EndInsertMDDRepl::default_instance_ = NULL;

EndInsertMDDRepl* EndInsertMDDRepl::New(::google::protobuf::Arena* arena) const {
  EndInsertMDDRepl* n = new EndInsertMDDRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndInsertMDDRepl::Clear() {
  status_ = 0;
}

bool EndInsertMDDRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.EndInsertMDDRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.EndInsertMDDRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.EndInsertMDDRepl)
  return false;
#undef DO_
}

void EndInsertMDDRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.EndInsertMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.EndInsertMDDRepl)
}

::google::protobuf::uint8* EndInsertMDDRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.EndInsertMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.EndInsertMDDRepl)
  return target;
}

int EndInsertMDDRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndInsertMDDRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EndInsertMDDRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EndInsertMDDRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EndInsertMDDRepl::MergeFrom(const EndInsertMDDRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void EndInsertMDDRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndInsertMDDRepl::CopyFrom(const EndInsertMDDRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndInsertMDDRepl::IsInitialized() const {

  return true;
}

void EndInsertMDDRepl::Swap(EndInsertMDDRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndInsertMDDRepl::InternalSwap(EndInsertMDDRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndInsertMDDRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EndInsertMDDRepl_descriptor_;
  metadata.reflection = EndInsertMDDRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndInsertMDDRepl

// optional int32 status = 1;
void EndInsertMDDRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 EndInsertMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDRepl.status)
  return status_;
}
 void EndInsertMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartInsertTransMDDReq::kClientIdFieldNumber;
const int StartInsertTransMDDReq::kDomainFieldNumber;
const int StartInsertTransMDDReq::kTypeLengthFieldNumber;
const int StartInsertTransMDDReq::kTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartInsertTransMDDReq::StartInsertTransMDDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.StartInsertTransMDDReq)
}

void StartInsertTransMDDReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StartInsertTransMDDReq::StartInsertTransMDDReq(const StartInsertTransMDDReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.StartInsertTransMDDReq)
}

void StartInsertTransMDDReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_length_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StartInsertTransMDDReq::~StartInsertTransMDDReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.StartInsertTransMDDReq)
  SharedDtor();
}

void StartInsertTransMDDReq::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void StartInsertTransMDDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartInsertTransMDDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartInsertTransMDDReq_descriptor_;
}

const StartInsertTransMDDReq& StartInsertTransMDDReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

StartInsertTransMDDReq* StartInsertTransMDDReq::default_instance_ = NULL;

StartInsertTransMDDReq* StartInsertTransMDDReq::New(::google::protobuf::Arena* arena) const {
  StartInsertTransMDDReq* n = new StartInsertTransMDDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartInsertTransMDDReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StartInsertTransMDDReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, type_length_);
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool StartInsertTransMDDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.StartInsertTransMDDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_domain;
        break;
      }

      // optional string domain = 2;
      case 2: {
        if (tag == 18) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.StartInsertTransMDDReq.domain"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type_length;
        break;
      }

      // optional int32 type_length = 3;
      case 3: {
        if (tag == 24) {
         parse_type_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type_name;
        break;
      }

      // optional string type_name = 4;
      case 4: {
        if (tag == 34) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.StartInsertTransMDDReq.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.StartInsertTransMDDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.StartInsertTransMDDReq)
  return false;
#undef DO_
}

void StartInsertTransMDDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.StartInsertTransMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertTransMDDReq.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // optional int32 type_length = 3;
  if (this->type_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type_length(), output);
  }

  // optional string type_name = 4;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertTransMDDReq.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.StartInsertTransMDDReq)
}

::google::protobuf::uint8* StartInsertTransMDDReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.StartInsertTransMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertTransMDDReq.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // optional int32 type_length = 3;
  if (this->type_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type_length(), target);
  }

  // optional string type_name = 4;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.StartInsertTransMDDReq.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.StartInsertTransMDDReq)
  return target;
}

int StartInsertTransMDDReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // optional int32 type_length = 3;
  if (this->type_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_length());
  }

  // optional string type_name = 4;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartInsertTransMDDReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StartInsertTransMDDReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartInsertTransMDDReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartInsertTransMDDReq::MergeFrom(const StartInsertTransMDDReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.type_length() != 0) {
    set_type_length(from.type_length());
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
}

void StartInsertTransMDDReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartInsertTransMDDReq::CopyFrom(const StartInsertTransMDDReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartInsertTransMDDReq::IsInitialized() const {

  return true;
}

void StartInsertTransMDDReq::Swap(StartInsertTransMDDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartInsertTransMDDReq::InternalSwap(StartInsertTransMDDReq* other) {
  std::swap(client_id_, other->client_id_);
  domain_.Swap(&other->domain_);
  std::swap(type_length_, other->type_length_);
  type_name_.Swap(&other->type_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartInsertTransMDDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartInsertTransMDDReq_descriptor_;
  metadata.reflection = StartInsertTransMDDReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartInsertTransMDDReq

// optional int32 client_id = 1;
void StartInsertTransMDDReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 StartInsertTransMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.client_id)
  return client_id_;
}
 void StartInsertTransMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.client_id)
}

// optional string domain = 2;
void StartInsertTransMDDReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertTransMDDReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertTransMDDReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.domain)
}
 void StartInsertTransMDDReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertTransMDDReq.domain)
}
 void StartInsertTransMDDReq::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertTransMDDReq.domain)
}
 ::std::string* StartInsertTransMDDReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertTransMDDReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertTransMDDReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertTransMDDReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertTransMDDReq.domain)
}

// optional int32 type_length = 3;
void StartInsertTransMDDReq::clear_type_length() {
  type_length_ = 0;
}
 ::google::protobuf::int32 StartInsertTransMDDReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.type_length)
  return type_length_;
}
 void StartInsertTransMDDReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.type_length)
}

// optional string type_name = 4;
void StartInsertTransMDDReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartInsertTransMDDReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertTransMDDReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.type_name)
}
 void StartInsertTransMDDReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertTransMDDReq.type_name)
}
 void StartInsertTransMDDReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertTransMDDReq.type_name)
}
 ::std::string* StartInsertTransMDDReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertTransMDDReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartInsertTransMDDReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartInsertTransMDDReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertTransMDDReq.type_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartInsertTransMDDRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartInsertTransMDDRepl::StartInsertTransMDDRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.StartInsertTransMDDRepl)
}

void StartInsertTransMDDRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StartInsertTransMDDRepl::StartInsertTransMDDRepl(const StartInsertTransMDDRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.StartInsertTransMDDRepl)
}

void StartInsertTransMDDRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

StartInsertTransMDDRepl::~StartInsertTransMDDRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.StartInsertTransMDDRepl)
  SharedDtor();
}

void StartInsertTransMDDRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartInsertTransMDDRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartInsertTransMDDRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartInsertTransMDDRepl_descriptor_;
}

const StartInsertTransMDDRepl& StartInsertTransMDDRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

StartInsertTransMDDRepl* StartInsertTransMDDRepl::default_instance_ = NULL;

StartInsertTransMDDRepl* StartInsertTransMDDRepl::New(::google::protobuf::Arena* arena) const {
  StartInsertTransMDDRepl* n = new StartInsertTransMDDRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartInsertTransMDDRepl::Clear() {
  status_ = 0;
}

bool StartInsertTransMDDRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.StartInsertTransMDDRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.StartInsertTransMDDRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.StartInsertTransMDDRepl)
  return false;
#undef DO_
}

void StartInsertTransMDDRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.StartInsertTransMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.StartInsertTransMDDRepl)
}

::google::protobuf::uint8* StartInsertTransMDDRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.StartInsertTransMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.StartInsertTransMDDRepl)
  return target;
}

int StartInsertTransMDDRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartInsertTransMDDRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StartInsertTransMDDRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartInsertTransMDDRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartInsertTransMDDRepl::MergeFrom(const StartInsertTransMDDRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void StartInsertTransMDDRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartInsertTransMDDRepl::CopyFrom(const StartInsertTransMDDRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartInsertTransMDDRepl::IsInitialized() const {

  return true;
}

void StartInsertTransMDDRepl::Swap(StartInsertTransMDDRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartInsertTransMDDRepl::InternalSwap(StartInsertTransMDDRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartInsertTransMDDRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartInsertTransMDDRepl_descriptor_;
  metadata.reflection = StartInsertTransMDDRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartInsertTransMDDRepl

// optional int32 status = 1;
void StartInsertTransMDDRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 StartInsertTransMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDRepl.status)
  return status_;
}
 void StartInsertTransMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertCollectionReq::kClientIdFieldNumber;
const int InsertCollectionReq::kCollectionNameFieldNumber;
const int InsertCollectionReq::kTypeNameFieldNumber;
const int InsertCollectionReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertCollectionReq::InsertCollectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InsertCollectionReq)
}

void InsertCollectionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InsertCollectionReq::InsertCollectionReq(const InsertCollectionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InsertCollectionReq)
}

void InsertCollectionReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InsertCollectionReq::~InsertCollectionReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.InsertCollectionReq)
  SharedDtor();
}

void InsertCollectionReq::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InsertCollectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertCollectionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertCollectionReq_descriptor_;
}

const InsertCollectionReq& InsertCollectionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InsertCollectionReq* InsertCollectionReq::default_instance_ = NULL;

InsertCollectionReq* InsertCollectionReq::New(::google::protobuf::Arena* arena) const {
  InsertCollectionReq* n = new InsertCollectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertCollectionReq::Clear() {
  client_id_ = 0;
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InsertCollectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InsertCollectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.InsertCollectionReq.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type_name;
        break;
      }

      // optional string type_name = 3;
      case 3: {
        if (tag == 26) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.InsertCollectionReq.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_oid;
        break;
      }

      // optional string oid = 4;
      case 4: {
        if (tag == 34) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.InsertCollectionReq.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InsertCollectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InsertCollectionReq)
  return false;
#undef DO_
}

void InsertCollectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InsertCollectionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_name(), output);
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type_name(), output);
  }

  // optional string oid = 4;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InsertCollectionReq)
}

::google::protobuf::uint8* InsertCollectionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InsertCollectionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_name(), target);
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type_name(), target);
  }

  // optional string oid = 4;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.InsertCollectionReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InsertCollectionReq)
  return target;
}

int InsertCollectionReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string oid = 4;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertCollectionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InsertCollectionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertCollectionReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertCollectionReq::MergeFrom(const InsertCollectionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void InsertCollectionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertCollectionReq::CopyFrom(const InsertCollectionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertCollectionReq::IsInitialized() const {

  return true;
}

void InsertCollectionReq::Swap(InsertCollectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertCollectionReq::InternalSwap(InsertCollectionReq* other) {
  std::swap(client_id_, other->client_id_);
  collection_name_.Swap(&other->collection_name_);
  type_name_.Swap(&other->type_name_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertCollectionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertCollectionReq_descriptor_;
  metadata.reflection = InsertCollectionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertCollectionReq

// optional int32 client_id = 1;
void InsertCollectionReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 InsertCollectionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.client_id)
  return client_id_;
}
 void InsertCollectionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.client_id)
}

// optional string collection_name = 2;
void InsertCollectionReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertCollectionReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.collection_name)
}
 void InsertCollectionReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.collection_name)
}
 void InsertCollectionReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.collection_name)
}
 ::std::string* InsertCollectionReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertCollectionReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.collection_name)
}

// optional string type_name = 3;
void InsertCollectionReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertCollectionReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.type_name)
}
 void InsertCollectionReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.type_name)
}
 void InsertCollectionReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.type_name)
}
 ::std::string* InsertCollectionReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertCollectionReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.type_name)
}

// optional string oid = 4;
void InsertCollectionReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InsertCollectionReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.oid)
}
 void InsertCollectionReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.oid)
}
 void InsertCollectionReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.oid)
}
 ::std::string* InsertCollectionReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InsertCollectionReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InsertCollectionReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertCollectionRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertCollectionRepl::InsertCollectionRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InsertCollectionRepl)
}

void InsertCollectionRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InsertCollectionRepl::InsertCollectionRepl(const InsertCollectionRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InsertCollectionRepl)
}

void InsertCollectionRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

InsertCollectionRepl::~InsertCollectionRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.InsertCollectionRepl)
  SharedDtor();
}

void InsertCollectionRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InsertCollectionRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertCollectionRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertCollectionRepl_descriptor_;
}

const InsertCollectionRepl& InsertCollectionRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InsertCollectionRepl* InsertCollectionRepl::default_instance_ = NULL;

InsertCollectionRepl* InsertCollectionRepl::New(::google::protobuf::Arena* arena) const {
  InsertCollectionRepl* n = new InsertCollectionRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertCollectionRepl::Clear() {
  status_ = 0;
}

bool InsertCollectionRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InsertCollectionRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InsertCollectionRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InsertCollectionRepl)
  return false;
#undef DO_
}

void InsertCollectionRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InsertCollectionRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InsertCollectionRepl)
}

::google::protobuf::uint8* InsertCollectionRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InsertCollectionRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InsertCollectionRepl)
  return target;
}

int InsertCollectionRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertCollectionRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InsertCollectionRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertCollectionRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertCollectionRepl::MergeFrom(const InsertCollectionRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void InsertCollectionRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertCollectionRepl::CopyFrom(const InsertCollectionRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertCollectionRepl::IsInitialized() const {

  return true;
}

void InsertCollectionRepl::Swap(InsertCollectionRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertCollectionRepl::InternalSwap(InsertCollectionRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertCollectionRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertCollectionRepl_descriptor_;
  metadata.reflection = InsertCollectionRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertCollectionRepl

// optional int32 status = 1;
void InsertCollectionRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 InsertCollectionRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionRepl.status)
  return status_;
}
 void InsertCollectionRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteCollectionByNameReq::kClientIdFieldNumber;
const int DeleteCollectionByNameReq::kCollectionNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteCollectionByNameReq::DeleteCollectionByNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DeleteCollectionByNameReq)
}

void DeleteCollectionByNameReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteCollectionByNameReq::DeleteCollectionByNameReq(const DeleteCollectionByNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DeleteCollectionByNameReq)
}

void DeleteCollectionByNameReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteCollectionByNameReq::~DeleteCollectionByNameReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.DeleteCollectionByNameReq)
  SharedDtor();
}

void DeleteCollectionByNameReq::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteCollectionByNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCollectionByNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCollectionByNameReq_descriptor_;
}

const DeleteCollectionByNameReq& DeleteCollectionByNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DeleteCollectionByNameReq* DeleteCollectionByNameReq::default_instance_ = NULL;

DeleteCollectionByNameReq* DeleteCollectionByNameReq::New(::google::protobuf::Arena* arena) const {
  DeleteCollectionByNameReq* n = new DeleteCollectionByNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteCollectionByNameReq::Clear() {
  client_id_ = 0;
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteCollectionByNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DeleteCollectionByNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.DeleteCollectionByNameReq.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DeleteCollectionByNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DeleteCollectionByNameReq)
  return false;
#undef DO_
}

void DeleteCollectionByNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DeleteCollectionByNameReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DeleteCollectionByNameReq.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.DeleteCollectionByNameReq)
}

::google::protobuf::uint8* DeleteCollectionByNameReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DeleteCollectionByNameReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DeleteCollectionByNameReq.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DeleteCollectionByNameReq)
  return target;
}

int DeleteCollectionByNameReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCollectionByNameReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteCollectionByNameReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteCollectionByNameReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCollectionByNameReq::MergeFrom(const DeleteCollectionByNameReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void DeleteCollectionByNameReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCollectionByNameReq::CopyFrom(const DeleteCollectionByNameReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCollectionByNameReq::IsInitialized() const {

  return true;
}

void DeleteCollectionByNameReq::Swap(DeleteCollectionByNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteCollectionByNameReq::InternalSwap(DeleteCollectionByNameReq* other) {
  std::swap(client_id_, other->client_id_);
  collection_name_.Swap(&other->collection_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteCollectionByNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCollectionByNameReq_descriptor_;
  metadata.reflection = DeleteCollectionByNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteCollectionByNameReq

// optional int32 client_id = 1;
void DeleteCollectionByNameReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 DeleteCollectionByNameReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameReq.client_id)
  return client_id_;
}
 void DeleteCollectionByNameReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameReq.client_id)
}

// optional string collection_name = 2;
void DeleteCollectionByNameReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteCollectionByNameReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteCollectionByNameReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
 void DeleteCollectionByNameReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
 void DeleteCollectionByNameReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
 ::std::string* DeleteCollectionByNameReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DeleteCollectionByNameReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteCollectionByNameReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteCollectionByNameReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DeleteCollectionByNameReq.collection_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteCollectionByNameRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteCollectionByNameRepl::DeleteCollectionByNameRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DeleteCollectionByNameRepl)
}

void DeleteCollectionByNameRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteCollectionByNameRepl::DeleteCollectionByNameRepl(const DeleteCollectionByNameRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DeleteCollectionByNameRepl)
}

void DeleteCollectionByNameRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

DeleteCollectionByNameRepl::~DeleteCollectionByNameRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.DeleteCollectionByNameRepl)
  SharedDtor();
}

void DeleteCollectionByNameRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteCollectionByNameRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCollectionByNameRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCollectionByNameRepl_descriptor_;
}

const DeleteCollectionByNameRepl& DeleteCollectionByNameRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DeleteCollectionByNameRepl* DeleteCollectionByNameRepl::default_instance_ = NULL;

DeleteCollectionByNameRepl* DeleteCollectionByNameRepl::New(::google::protobuf::Arena* arena) const {
  DeleteCollectionByNameRepl* n = new DeleteCollectionByNameRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteCollectionByNameRepl::Clear() {
  status_ = 0;
}

bool DeleteCollectionByNameRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DeleteCollectionByNameRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DeleteCollectionByNameRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DeleteCollectionByNameRepl)
  return false;
#undef DO_
}

void DeleteCollectionByNameRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DeleteCollectionByNameRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.DeleteCollectionByNameRepl)
}

::google::protobuf::uint8* DeleteCollectionByNameRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DeleteCollectionByNameRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DeleteCollectionByNameRepl)
  return target;
}

int DeleteCollectionByNameRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCollectionByNameRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteCollectionByNameRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteCollectionByNameRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCollectionByNameRepl::MergeFrom(const DeleteCollectionByNameRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void DeleteCollectionByNameRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCollectionByNameRepl::CopyFrom(const DeleteCollectionByNameRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCollectionByNameRepl::IsInitialized() const {

  return true;
}

void DeleteCollectionByNameRepl::Swap(DeleteCollectionByNameRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteCollectionByNameRepl::InternalSwap(DeleteCollectionByNameRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteCollectionByNameRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCollectionByNameRepl_descriptor_;
  metadata.reflection = DeleteCollectionByNameRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteCollectionByNameRepl

// optional int32 status = 1;
void DeleteCollectionByNameRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 DeleteCollectionByNameRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameRepl.status)
  return status_;
}
 void DeleteCollectionByNameRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteCollectionByOidReq::kClientIdFieldNumber;
const int DeleteCollectionByOidReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteCollectionByOidReq::DeleteCollectionByOidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DeleteCollectionByOidReq)
}

void DeleteCollectionByOidReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteCollectionByOidReq::DeleteCollectionByOidReq(const DeleteCollectionByOidReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DeleteCollectionByOidReq)
}

void DeleteCollectionByOidReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteCollectionByOidReq::~DeleteCollectionByOidReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.DeleteCollectionByOidReq)
  SharedDtor();
}

void DeleteCollectionByOidReq::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteCollectionByOidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCollectionByOidReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCollectionByOidReq_descriptor_;
}

const DeleteCollectionByOidReq& DeleteCollectionByOidReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DeleteCollectionByOidReq* DeleteCollectionByOidReq::default_instance_ = NULL;

DeleteCollectionByOidReq* DeleteCollectionByOidReq::New(::google::protobuf::Arena* arena) const {
  DeleteCollectionByOidReq* n = new DeleteCollectionByOidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteCollectionByOidReq::Clear() {
  client_id_ = 0;
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteCollectionByOidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DeleteCollectionByOidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_oid;
        break;
      }

      // optional string oid = 2;
      case 2: {
        if (tag == 18) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.DeleteCollectionByOidReq.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DeleteCollectionByOidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DeleteCollectionByOidReq)
  return false;
#undef DO_
}

void DeleteCollectionByOidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DeleteCollectionByOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DeleteCollectionByOidReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.DeleteCollectionByOidReq)
}

::google::protobuf::uint8* DeleteCollectionByOidReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DeleteCollectionByOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.DeleteCollectionByOidReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DeleteCollectionByOidReq)
  return target;
}

int DeleteCollectionByOidReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCollectionByOidReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteCollectionByOidReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteCollectionByOidReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCollectionByOidReq::MergeFrom(const DeleteCollectionByOidReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void DeleteCollectionByOidReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCollectionByOidReq::CopyFrom(const DeleteCollectionByOidReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCollectionByOidReq::IsInitialized() const {

  return true;
}

void DeleteCollectionByOidReq::Swap(DeleteCollectionByOidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteCollectionByOidReq::InternalSwap(DeleteCollectionByOidReq* other) {
  std::swap(client_id_, other->client_id_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteCollectionByOidReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCollectionByOidReq_descriptor_;
  metadata.reflection = DeleteCollectionByOidReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteCollectionByOidReq

// optional int32 client_id = 1;
void DeleteCollectionByOidReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 DeleteCollectionByOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidReq.client_id)
  return client_id_;
}
 void DeleteCollectionByOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidReq.client_id)
}

// optional string oid = 2;
void DeleteCollectionByOidReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteCollectionByOidReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteCollectionByOidReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidReq.oid)
}
 void DeleteCollectionByOidReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DeleteCollectionByOidReq.oid)
}
 void DeleteCollectionByOidReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DeleteCollectionByOidReq.oid)
}
 ::std::string* DeleteCollectionByOidReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DeleteCollectionByOidReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteCollectionByOidReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteCollectionByOidReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DeleteCollectionByOidReq.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteCollectionByOidRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteCollectionByOidRepl::DeleteCollectionByOidRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.DeleteCollectionByOidRepl)
}

void DeleteCollectionByOidRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteCollectionByOidRepl::DeleteCollectionByOidRepl(const DeleteCollectionByOidRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.DeleteCollectionByOidRepl)
}

void DeleteCollectionByOidRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

DeleteCollectionByOidRepl::~DeleteCollectionByOidRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.DeleteCollectionByOidRepl)
  SharedDtor();
}

void DeleteCollectionByOidRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteCollectionByOidRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCollectionByOidRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCollectionByOidRepl_descriptor_;
}

const DeleteCollectionByOidRepl& DeleteCollectionByOidRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

DeleteCollectionByOidRepl* DeleteCollectionByOidRepl::default_instance_ = NULL;

DeleteCollectionByOidRepl* DeleteCollectionByOidRepl::New(::google::protobuf::Arena* arena) const {
  DeleteCollectionByOidRepl* n = new DeleteCollectionByOidRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteCollectionByOidRepl::Clear() {
  status_ = 0;
}

bool DeleteCollectionByOidRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.DeleteCollectionByOidRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.DeleteCollectionByOidRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.DeleteCollectionByOidRepl)
  return false;
#undef DO_
}

void DeleteCollectionByOidRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.DeleteCollectionByOidRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.DeleteCollectionByOidRepl)
}

::google::protobuf::uint8* DeleteCollectionByOidRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.DeleteCollectionByOidRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.DeleteCollectionByOidRepl)
  return target;
}

int DeleteCollectionByOidRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCollectionByOidRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteCollectionByOidRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteCollectionByOidRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCollectionByOidRepl::MergeFrom(const DeleteCollectionByOidRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void DeleteCollectionByOidRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCollectionByOidRepl::CopyFrom(const DeleteCollectionByOidRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCollectionByOidRepl::IsInitialized() const {

  return true;
}

void DeleteCollectionByOidRepl::Swap(DeleteCollectionByOidRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteCollectionByOidRepl::InternalSwap(DeleteCollectionByOidRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteCollectionByOidRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCollectionByOidRepl_descriptor_;
  metadata.reflection = DeleteCollectionByOidRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteCollectionByOidRepl

// optional int32 status = 1;
void DeleteCollectionByOidRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 DeleteCollectionByOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidRepl.status)
  return status_;
}
 void DeleteCollectionByOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCollectionByNameOrOidReq::kClientIdFieldNumber;
const int GetCollectionByNameOrOidReq::kCollectionIdentifierFieldNumber;
const int GetCollectionByNameOrOidReq::kIsNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCollectionByNameOrOidReq::GetCollectionByNameOrOidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetCollectionByNameOrOidReq)
}

void GetCollectionByNameOrOidReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetCollectionByNameOrOidReq::GetCollectionByNameOrOidReq(const GetCollectionByNameOrOidReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetCollectionByNameOrOidReq)
}

void GetCollectionByNameOrOidReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collection_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_name_ = false;
}

GetCollectionByNameOrOidReq::~GetCollectionByNameOrOidReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetCollectionByNameOrOidReq)
  SharedDtor();
}

void GetCollectionByNameOrOidReq::SharedDtor() {
  collection_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetCollectionByNameOrOidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCollectionByNameOrOidReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCollectionByNameOrOidReq_descriptor_;
}

const GetCollectionByNameOrOidReq& GetCollectionByNameOrOidReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetCollectionByNameOrOidReq* GetCollectionByNameOrOidReq::default_instance_ = NULL;

GetCollectionByNameOrOidReq* GetCollectionByNameOrOidReq::New(::google::protobuf::Arena* arena) const {
  GetCollectionByNameOrOidReq* n = new GetCollectionByNameOrOidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCollectionByNameOrOidReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetCollectionByNameOrOidReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, is_name_);
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetCollectionByNameOrOidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetCollectionByNameOrOidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_identifier;
        break;
      }

      // optional string collection_identifier = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_identifier().data(), this->collection_identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollectionByNameOrOidReq.collection_identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_name;
        break;
      }

      // optional bool is_name = 3;
      case 3: {
        if (tag == 24) {
         parse_is_name:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_name_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetCollectionByNameOrOidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetCollectionByNameOrOidReq)
  return false;
#undef DO_
}

void GetCollectionByNameOrOidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetCollectionByNameOrOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_identifier().data(), this->collection_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidReq.collection_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_identifier(), output);
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetCollectionByNameOrOidReq)
}

::google::protobuf::uint8* GetCollectionByNameOrOidReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetCollectionByNameOrOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_identifier().data(), this->collection_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidReq.collection_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_identifier(), target);
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetCollectionByNameOrOidReq)
  return target;
}

int GetCollectionByNameOrOidReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_identifier());
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCollectionByNameOrOidReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCollectionByNameOrOidReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCollectionByNameOrOidReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCollectionByNameOrOidReq::MergeFrom(const GetCollectionByNameOrOidReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collection_identifier().size() > 0) {

    collection_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_identifier_);
  }
  if (from.is_name() != 0) {
    set_is_name(from.is_name());
  }
}

void GetCollectionByNameOrOidReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCollectionByNameOrOidReq::CopyFrom(const GetCollectionByNameOrOidReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCollectionByNameOrOidReq::IsInitialized() const {

  return true;
}

void GetCollectionByNameOrOidReq::Swap(GetCollectionByNameOrOidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCollectionByNameOrOidReq::InternalSwap(GetCollectionByNameOrOidReq* other) {
  std::swap(client_id_, other->client_id_);
  collection_identifier_.Swap(&other->collection_identifier_);
  std::swap(is_name_, other->is_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCollectionByNameOrOidReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCollectionByNameOrOidReq_descriptor_;
  metadata.reflection = GetCollectionByNameOrOidReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCollectionByNameOrOidReq

// optional int32 client_id = 1;
void GetCollectionByNameOrOidReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetCollectionByNameOrOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.client_id)
  return client_id_;
}
 void GetCollectionByNameOrOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.client_id)
}

// optional string collection_identifier = 2;
void GetCollectionByNameOrOidReq::clear_collection_identifier() {
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollectionByNameOrOidReq::collection_identifier() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
  return collection_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidReq::set_collection_identifier(const ::std::string& value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
 void GetCollectionByNameOrOidReq::set_collection_identifier(const char* value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
 void GetCollectionByNameOrOidReq::set_collection_identifier(const char* value, size_t size) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
 ::std::string* GetCollectionByNameOrOidReq::mutable_collection_identifier() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
  return collection_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollectionByNameOrOidReq::release_collection_identifier() {
  
  return collection_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidReq::set_allocated_collection_identifier(::std::string* collection_identifier) {
  if (collection_identifier != NULL) {
    
  } else {
    
  }
  collection_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_identifier);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}

// optional bool is_name = 3;
void GetCollectionByNameOrOidReq::clear_is_name() {
  is_name_ = false;
}
 bool GetCollectionByNameOrOidReq::is_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.is_name)
  return is_name_;
}
 void GetCollectionByNameOrOidReq::set_is_name(bool value) {
  
  is_name_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.is_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCollectionByNameOrOidRepl::kTypeNameFieldNumber;
const int GetCollectionByNameOrOidRepl::kTypeStructureFieldNumber;
const int GetCollectionByNameOrOidRepl::kOidFieldNumber;
const int GetCollectionByNameOrOidRepl::kCollectionNameFieldNumber;
const int GetCollectionByNameOrOidRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCollectionByNameOrOidRepl::GetCollectionByNameOrOidRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetCollectionByNameOrOidRepl)
}

void GetCollectionByNameOrOidRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetCollectionByNameOrOidRepl::GetCollectionByNameOrOidRepl(const GetCollectionByNameOrOidRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetCollectionByNameOrOidRepl)
}

void GetCollectionByNameOrOidRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

GetCollectionByNameOrOidRepl::~GetCollectionByNameOrOidRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetCollectionByNameOrOidRepl)
  SharedDtor();
}

void GetCollectionByNameOrOidRepl::SharedDtor() {
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetCollectionByNameOrOidRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCollectionByNameOrOidRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCollectionByNameOrOidRepl_descriptor_;
}

const GetCollectionByNameOrOidRepl& GetCollectionByNameOrOidRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetCollectionByNameOrOidRepl* GetCollectionByNameOrOidRepl::default_instance_ = NULL;

GetCollectionByNameOrOidRepl* GetCollectionByNameOrOidRepl::New(::google::protobuf::Arena* arena) const {
  GetCollectionByNameOrOidRepl* n = new GetCollectionByNameOrOidRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCollectionByNameOrOidRepl::Clear() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

bool GetCollectionByNameOrOidRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetCollectionByNameOrOidRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollectionByNameOrOidRepl.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 2;
      case 2: {
        if (tag == 18) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollectionByNameOrOidRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_oid;
        break;
      }

      // optional string oid = 3;
      case 3: {
        if (tag == 26) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollectionByNameOrOidRepl.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 4;
      case 4: {
        if (tag == 34) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollectionByNameOrOidRepl.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // optional int32 status = 5;
      case 5: {
        if (tag == 40) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetCollectionByNameOrOidRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetCollectionByNameOrOidRepl)
  return false;
#undef DO_
}

void GetCollectionByNameOrOidRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetCollectionByNameOrOidRepl)
  // optional string type_name = 1;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_name(), output);
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_structure(), output);
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  // optional string collection_name = 4;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->collection_name(), output);
  }

  // optional int32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetCollectionByNameOrOidRepl)
}

::google::protobuf::uint8* GetCollectionByNameOrOidRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetCollectionByNameOrOidRepl)
  // optional string type_name = 1;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type_name(), target);
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_structure(), target);
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  // optional string collection_name = 4;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollectionByNameOrOidRepl.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->collection_name(), target);
  }

  // optional int32 status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetCollectionByNameOrOidRepl)
  return target;
}

int GetCollectionByNameOrOidRepl::ByteSize() const {
  int total_size = 0;

  // optional string type_name = 1;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // optional string collection_name = 4;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional int32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCollectionByNameOrOidRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCollectionByNameOrOidRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCollectionByNameOrOidRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCollectionByNameOrOidRepl::MergeFrom(const GetCollectionByNameOrOidRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void GetCollectionByNameOrOidRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCollectionByNameOrOidRepl::CopyFrom(const GetCollectionByNameOrOidRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCollectionByNameOrOidRepl::IsInitialized() const {

  return true;
}

void GetCollectionByNameOrOidRepl::Swap(GetCollectionByNameOrOidRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCollectionByNameOrOidRepl::InternalSwap(GetCollectionByNameOrOidRepl* other) {
  type_name_.Swap(&other->type_name_);
  type_structure_.Swap(&other->type_structure_);
  oid_.Swap(&other->oid_);
  collection_name_.Swap(&other->collection_name_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCollectionByNameOrOidRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCollectionByNameOrOidRepl_descriptor_;
  metadata.reflection = GetCollectionByNameOrOidRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCollectionByNameOrOidRepl

// optional string type_name = 1;
void GetCollectionByNameOrOidRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollectionByNameOrOidRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
 void GetCollectionByNameOrOidRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
 void GetCollectionByNameOrOidRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
 ::std::string* GetCollectionByNameOrOidRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollectionByNameOrOidRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}

// optional string type_structure = 2;
void GetCollectionByNameOrOidRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollectionByNameOrOidRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
 void GetCollectionByNameOrOidRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
 void GetCollectionByNameOrOidRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
 ::std::string* GetCollectionByNameOrOidRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollectionByNameOrOidRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}

// optional string oid = 3;
void GetCollectionByNameOrOidRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollectionByNameOrOidRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
 void GetCollectionByNameOrOidRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
 void GetCollectionByNameOrOidRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
 ::std::string* GetCollectionByNameOrOidRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollectionByNameOrOidRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}

// optional string collection_name = 4;
void GetCollectionByNameOrOidRepl::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollectionByNameOrOidRepl::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
 void GetCollectionByNameOrOidRepl::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
 void GetCollectionByNameOrOidRepl::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
 ::std::string* GetCollectionByNameOrOidRepl::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollectionByNameOrOidRepl::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollectionByNameOrOidRepl::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}

// optional int32 status = 5;
void GetCollectionByNameOrOidRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetCollectionByNameOrOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.status)
  return status_;
}
 void GetCollectionByNameOrOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCollOidsByNameOrOidReq::kClientIdFieldNumber;
const int GetCollOidsByNameOrOidReq::kCollectionIdentifierFieldNumber;
const int GetCollOidsByNameOrOidReq::kIsNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCollOidsByNameOrOidReq::GetCollOidsByNameOrOidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetCollOidsByNameOrOidReq)
}

void GetCollOidsByNameOrOidReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetCollOidsByNameOrOidReq::GetCollOidsByNameOrOidReq(const GetCollOidsByNameOrOidReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetCollOidsByNameOrOidReq)
}

void GetCollOidsByNameOrOidReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collection_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_name_ = false;
}

GetCollOidsByNameOrOidReq::~GetCollOidsByNameOrOidReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetCollOidsByNameOrOidReq)
  SharedDtor();
}

void GetCollOidsByNameOrOidReq::SharedDtor() {
  collection_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetCollOidsByNameOrOidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCollOidsByNameOrOidReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCollOidsByNameOrOidReq_descriptor_;
}

const GetCollOidsByNameOrOidReq& GetCollOidsByNameOrOidReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetCollOidsByNameOrOidReq* GetCollOidsByNameOrOidReq::default_instance_ = NULL;

GetCollOidsByNameOrOidReq* GetCollOidsByNameOrOidReq::New(::google::protobuf::Arena* arena) const {
  GetCollOidsByNameOrOidReq* n = new GetCollOidsByNameOrOidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCollOidsByNameOrOidReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetCollOidsByNameOrOidReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, is_name_);
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetCollOidsByNameOrOidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetCollOidsByNameOrOidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_identifier;
        break;
      }

      // optional string collection_identifier = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_identifier().data(), this->collection_identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_name;
        break;
      }

      // optional bool is_name = 3;
      case 3: {
        if (tag == 24) {
         parse_is_name:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_name_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetCollOidsByNameOrOidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetCollOidsByNameOrOidReq)
  return false;
#undef DO_
}

void GetCollOidsByNameOrOidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetCollOidsByNameOrOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_identifier().data(), this->collection_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_identifier(), output);
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetCollOidsByNameOrOidReq)
}

::google::protobuf::uint8* GetCollOidsByNameOrOidReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetCollOidsByNameOrOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_identifier().data(), this->collection_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_identifier(), target);
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetCollOidsByNameOrOidReq)
  return target;
}

int GetCollOidsByNameOrOidReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collection_identifier = 2;
  if (this->collection_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_identifier());
  }

  // optional bool is_name = 3;
  if (this->is_name() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCollOidsByNameOrOidReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCollOidsByNameOrOidReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCollOidsByNameOrOidReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCollOidsByNameOrOidReq::MergeFrom(const GetCollOidsByNameOrOidReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collection_identifier().size() > 0) {

    collection_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_identifier_);
  }
  if (from.is_name() != 0) {
    set_is_name(from.is_name());
  }
}

void GetCollOidsByNameOrOidReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCollOidsByNameOrOidReq::CopyFrom(const GetCollOidsByNameOrOidReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCollOidsByNameOrOidReq::IsInitialized() const {

  return true;
}

void GetCollOidsByNameOrOidReq::Swap(GetCollOidsByNameOrOidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCollOidsByNameOrOidReq::InternalSwap(GetCollOidsByNameOrOidReq* other) {
  std::swap(client_id_, other->client_id_);
  collection_identifier_.Swap(&other->collection_identifier_);
  std::swap(is_name_, other->is_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCollOidsByNameOrOidReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCollOidsByNameOrOidReq_descriptor_;
  metadata.reflection = GetCollOidsByNameOrOidReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCollOidsByNameOrOidReq

// optional int32 client_id = 1;
void GetCollOidsByNameOrOidReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetCollOidsByNameOrOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.client_id)
  return client_id_;
}
 void GetCollOidsByNameOrOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.client_id)
}

// optional string collection_identifier = 2;
void GetCollOidsByNameOrOidReq::clear_collection_identifier() {
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollOidsByNameOrOidReq::collection_identifier() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
  return collection_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidReq::set_collection_identifier(const ::std::string& value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
 void GetCollOidsByNameOrOidReq::set_collection_identifier(const char* value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
 void GetCollOidsByNameOrOidReq::set_collection_identifier(const char* value, size_t size) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
 ::std::string* GetCollOidsByNameOrOidReq::mutable_collection_identifier() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
  return collection_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollOidsByNameOrOidReq::release_collection_identifier() {
  
  return collection_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidReq::set_allocated_collection_identifier(::std::string* collection_identifier) {
  if (collection_identifier != NULL) {
    
  } else {
    
  }
  collection_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_identifier);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}

// optional bool is_name = 3;
void GetCollOidsByNameOrOidReq::clear_is_name() {
  is_name_ = false;
}
 bool GetCollOidsByNameOrOidReq::is_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.is_name)
  return is_name_;
}
 void GetCollOidsByNameOrOidReq::set_is_name(bool value) {
  
  is_name_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.is_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCollOidsByNameOrOidRepl::kStatusFieldNumber;
const int GetCollOidsByNameOrOidRepl::kTypeNameFieldNumber;
const int GetCollOidsByNameOrOidRepl::kTypeStructureFieldNumber;
const int GetCollOidsByNameOrOidRepl::kOidsStringFieldNumber;
const int GetCollOidsByNameOrOidRepl::kCollectionNameFieldNumber;
const int GetCollOidsByNameOrOidRepl::kOidSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCollOidsByNameOrOidRepl::GetCollOidsByNameOrOidRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetCollOidsByNameOrOidRepl)
}

void GetCollOidsByNameOrOidRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetCollOidsByNameOrOidRepl::GetCollOidsByNameOrOidRepl(const GetCollOidsByNameOrOidRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetCollOidsByNameOrOidRepl)
}

void GetCollOidsByNameOrOidRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oids_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetCollOidsByNameOrOidRepl::~GetCollOidsByNameOrOidRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetCollOidsByNameOrOidRepl)
  SharedDtor();
}

void GetCollOidsByNameOrOidRepl::SharedDtor() {
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oids_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetCollOidsByNameOrOidRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCollOidsByNameOrOidRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCollOidsByNameOrOidRepl_descriptor_;
}

const GetCollOidsByNameOrOidRepl& GetCollOidsByNameOrOidRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetCollOidsByNameOrOidRepl* GetCollOidsByNameOrOidRepl::default_instance_ = NULL;

GetCollOidsByNameOrOidRepl* GetCollOidsByNameOrOidRepl::New(::google::protobuf::Arena* arena) const {
  GetCollOidsByNameOrOidRepl* n = new GetCollOidsByNameOrOidRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCollOidsByNameOrOidRepl::Clear() {
  status_ = 0;
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oids_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_set_.Clear();
}

bool GetCollOidsByNameOrOidRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetCollOidsByNameOrOidRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_name;
        break;
      }

      // optional string type_name = 2;
      case 2: {
        if (tag == 18) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidRepl.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 3;
      case 3: {
        if (tag == 26) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_oids_string;
        break;
      }

      // optional string oids_string = 4;
      case 4: {
        if (tag == 34) {
         parse_oids_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oids_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oids_string().data(), this->oids_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidRepl.oids_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 5;
      case 5: {
        if (tag == 42) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidRepl.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oid_set;
        break;
      }

      // repeated string oid_set = 6;
      case 6: {
        if (tag == 50) {
         parse_oid_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_oid_set()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid_set(this->oid_set_size() - 1).data(),
            this->oid_set(this->oid_set_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetCollOidsByNameOrOidRepl.oid_set"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oid_set;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetCollOidsByNameOrOidRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetCollOidsByNameOrOidRepl)
  return false;
#undef DO_
}

void GetCollOidsByNameOrOidRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetCollOidsByNameOrOidRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_name(), output);
  }

  // optional string type_structure = 3;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type_structure(), output);
  }

  // optional string oids_string = 4;
  if (this->oids_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oids_string().data(), this->oids_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.oids_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->oids_string(), output);
  }

  // optional string collection_name = 5;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->collection_name(), output);
  }

  // repeated string oid_set = 6;
  for (int i = 0; i < this->oid_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid_set(i).data(), this->oid_set(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.oid_set");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->oid_set(i), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetCollOidsByNameOrOidRepl)
}

::google::protobuf::uint8* GetCollOidsByNameOrOidRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetCollOidsByNameOrOidRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_name(), target);
  }

  // optional string type_structure = 3;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type_structure(), target);
  }

  // optional string oids_string = 4;
  if (this->oids_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oids_string().data(), this->oids_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.oids_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->oids_string(), target);
  }

  // optional string collection_name = 5;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->collection_name(), target);
  }

  // repeated string oid_set = 6;
  for (int i = 0; i < this->oid_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid_set(i).data(), this->oid_set(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetCollOidsByNameOrOidRepl.oid_set");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->oid_set(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetCollOidsByNameOrOidRepl)
  return target;
}

int GetCollOidsByNameOrOidRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string type_structure = 3;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  // optional string oids_string = 4;
  if (this->oids_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oids_string());
  }

  // optional string collection_name = 5;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // repeated string oid_set = 6;
  total_size += 1 * this->oid_set_size();
  for (int i = 0; i < this->oid_set_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->oid_set(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCollOidsByNameOrOidRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCollOidsByNameOrOidRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCollOidsByNameOrOidRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCollOidsByNameOrOidRepl::MergeFrom(const GetCollOidsByNameOrOidRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  oid_set_.MergeFrom(from.oid_set_);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
  if (from.oids_string().size() > 0) {

    oids_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oids_string_);
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
}

void GetCollOidsByNameOrOidRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCollOidsByNameOrOidRepl::CopyFrom(const GetCollOidsByNameOrOidRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCollOidsByNameOrOidRepl::IsInitialized() const {

  return true;
}

void GetCollOidsByNameOrOidRepl::Swap(GetCollOidsByNameOrOidRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCollOidsByNameOrOidRepl::InternalSwap(GetCollOidsByNameOrOidRepl* other) {
  std::swap(status_, other->status_);
  type_name_.Swap(&other->type_name_);
  type_structure_.Swap(&other->type_structure_);
  oids_string_.Swap(&other->oids_string_);
  collection_name_.Swap(&other->collection_name_);
  oid_set_.UnsafeArenaSwap(&other->oid_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCollOidsByNameOrOidRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCollOidsByNameOrOidRepl_descriptor_;
  metadata.reflection = GetCollOidsByNameOrOidRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCollOidsByNameOrOidRepl

// optional int32 status = 1;
void GetCollOidsByNameOrOidRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetCollOidsByNameOrOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.status)
  return status_;
}
 void GetCollOidsByNameOrOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.status)
}

// optional string type_name = 2;
void GetCollOidsByNameOrOidRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollOidsByNameOrOidRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
 void GetCollOidsByNameOrOidRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
 void GetCollOidsByNameOrOidRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
 ::std::string* GetCollOidsByNameOrOidRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollOidsByNameOrOidRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}

// optional string type_structure = 3;
void GetCollOidsByNameOrOidRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollOidsByNameOrOidRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
 void GetCollOidsByNameOrOidRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
 void GetCollOidsByNameOrOidRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
 ::std::string* GetCollOidsByNameOrOidRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollOidsByNameOrOidRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}

// optional string oids_string = 4;
void GetCollOidsByNameOrOidRepl::clear_oids_string() {
  oids_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollOidsByNameOrOidRepl::oids_string() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
  return oids_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_oids_string(const ::std::string& value) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
 void GetCollOidsByNameOrOidRepl::set_oids_string(const char* value) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
 void GetCollOidsByNameOrOidRepl::set_oids_string(const char* value, size_t size) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
 ::std::string* GetCollOidsByNameOrOidRepl::mutable_oids_string() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
  return oids_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollOidsByNameOrOidRepl::release_oids_string() {
  
  return oids_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_allocated_oids_string(::std::string* oids_string) {
  if (oids_string != NULL) {
    
  } else {
    
  }
  oids_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oids_string);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}

// optional string collection_name = 5;
void GetCollOidsByNameOrOidRepl::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCollOidsByNameOrOidRepl::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
 void GetCollOidsByNameOrOidRepl::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
 void GetCollOidsByNameOrOidRepl::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
 ::std::string* GetCollOidsByNameOrOidRepl::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCollOidsByNameOrOidRepl::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCollOidsByNameOrOidRepl::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}

// repeated string oid_set = 6;
int GetCollOidsByNameOrOidRepl::oid_set_size() const {
  return oid_set_.size();
}
void GetCollOidsByNameOrOidRepl::clear_oid_set() {
  oid_set_.Clear();
}
 const ::std::string& GetCollOidsByNameOrOidRepl::oid_set(int index) const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_.Get(index);
}
 ::std::string* GetCollOidsByNameOrOidRepl::mutable_oid_set(int index) {
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_.Mutable(index);
}
 void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  oid_set_.Mutable(index)->assign(value);
}
 void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const char* value) {
  oid_set_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
 void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const char* value, size_t size) {
  oid_set_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
 ::std::string* GetCollOidsByNameOrOidRepl::add_oid_set() {
  return oid_set_.Add();
}
 void GetCollOidsByNameOrOidRepl::add_oid_set(const ::std::string& value) {
  oid_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
 void GetCollOidsByNameOrOidRepl::add_oid_set(const char* value) {
  oid_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
 void GetCollOidsByNameOrOidRepl::add_oid_set(const char* value, size_t size) {
  oid_set_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetCollOidsByNameOrOidRepl::oid_set() const {
  // @@protoc_insertion_point(field_list:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetCollOidsByNameOrOidRepl::mutable_oid_set() {
  // @@protoc_insertion_point(field_mutable_list:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return &oid_set_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveObjectFromCollectionReq::kClientIdFieldNumber;
const int RemoveObjectFromCollectionReq::kCollectionNameFieldNumber;
const int RemoveObjectFromCollectionReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveObjectFromCollectionReq::RemoveObjectFromCollectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.RemoveObjectFromCollectionReq)
}

void RemoveObjectFromCollectionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RemoveObjectFromCollectionReq::RemoveObjectFromCollectionReq(const RemoveObjectFromCollectionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.RemoveObjectFromCollectionReq)
}

void RemoveObjectFromCollectionReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  collection_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveObjectFromCollectionReq::~RemoveObjectFromCollectionReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.RemoveObjectFromCollectionReq)
  SharedDtor();
}

void RemoveObjectFromCollectionReq::SharedDtor() {
  collection_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RemoveObjectFromCollectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveObjectFromCollectionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveObjectFromCollectionReq_descriptor_;
}

const RemoveObjectFromCollectionReq& RemoveObjectFromCollectionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

RemoveObjectFromCollectionReq* RemoveObjectFromCollectionReq::default_instance_ = NULL;

RemoveObjectFromCollectionReq* RemoveObjectFromCollectionReq::New(::google::protobuf::Arena* arena) const {
  RemoveObjectFromCollectionReq* n = new RemoveObjectFromCollectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveObjectFromCollectionReq::Clear() {
  client_id_ = 0;
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RemoveObjectFromCollectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.RemoveObjectFromCollectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collection_name;
        break;
      }

      // optional string collection_name = 2;
      case 2: {
        if (tag == 18) {
         parse_collection_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection_name().data(), this->collection_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.RemoveObjectFromCollectionReq.collection_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_oid;
        break;
      }

      // optional string oid = 3;
      case 3: {
        if (tag == 26) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.RemoveObjectFromCollectionReq.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.RemoveObjectFromCollectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.RemoveObjectFromCollectionReq)
  return false;
#undef DO_
}

void RemoveObjectFromCollectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.RemoveObjectFromCollectionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.RemoveObjectFromCollectionReq.collection_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection_name(), output);
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.RemoveObjectFromCollectionReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.RemoveObjectFromCollectionReq)
}

::google::protobuf::uint8* RemoveObjectFromCollectionReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.RemoveObjectFromCollectionReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection_name().data(), this->collection_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.RemoveObjectFromCollectionReq.collection_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection_name(), target);
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.RemoveObjectFromCollectionReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.RemoveObjectFromCollectionReq)
  return target;
}

int RemoveObjectFromCollectionReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string collection_name = 2;
  if (this->collection_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection_name());
  }

  // optional string oid = 3;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveObjectFromCollectionReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RemoveObjectFromCollectionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveObjectFromCollectionReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveObjectFromCollectionReq::MergeFrom(const RemoveObjectFromCollectionReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.collection_name().size() > 0) {

    collection_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_name_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void RemoveObjectFromCollectionReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveObjectFromCollectionReq::CopyFrom(const RemoveObjectFromCollectionReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveObjectFromCollectionReq::IsInitialized() const {

  return true;
}

void RemoveObjectFromCollectionReq::Swap(RemoveObjectFromCollectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveObjectFromCollectionReq::InternalSwap(RemoveObjectFromCollectionReq* other) {
  std::swap(client_id_, other->client_id_);
  collection_name_.Swap(&other->collection_name_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveObjectFromCollectionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveObjectFromCollectionReq_descriptor_;
  metadata.reflection = RemoveObjectFromCollectionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveObjectFromCollectionReq

// optional int32 client_id = 1;
void RemoveObjectFromCollectionReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 RemoveObjectFromCollectionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.client_id)
  return client_id_;
}
 void RemoveObjectFromCollectionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.client_id)
}

// optional string collection_name = 2;
void RemoveObjectFromCollectionReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RemoveObjectFromCollectionReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveObjectFromCollectionReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
 void RemoveObjectFromCollectionReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
 void RemoveObjectFromCollectionReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
 ::std::string* RemoveObjectFromCollectionReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RemoveObjectFromCollectionReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveObjectFromCollectionReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}

// optional string oid = 3;
void RemoveObjectFromCollectionReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RemoveObjectFromCollectionReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveObjectFromCollectionReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
 void RemoveObjectFromCollectionReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
 void RemoveObjectFromCollectionReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
 ::std::string* RemoveObjectFromCollectionReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.RemoveObjectFromCollectionReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RemoveObjectFromCollectionReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RemoveObjectFromCollectionReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.RemoveObjectFromCollectionReq.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveObjectFromCollectionRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveObjectFromCollectionRepl::RemoveObjectFromCollectionRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.RemoveObjectFromCollectionRepl)
}

void RemoveObjectFromCollectionRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RemoveObjectFromCollectionRepl::RemoveObjectFromCollectionRepl(const RemoveObjectFromCollectionRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.RemoveObjectFromCollectionRepl)
}

void RemoveObjectFromCollectionRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

RemoveObjectFromCollectionRepl::~RemoveObjectFromCollectionRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.RemoveObjectFromCollectionRepl)
  SharedDtor();
}

void RemoveObjectFromCollectionRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveObjectFromCollectionRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveObjectFromCollectionRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveObjectFromCollectionRepl_descriptor_;
}

const RemoveObjectFromCollectionRepl& RemoveObjectFromCollectionRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

RemoveObjectFromCollectionRepl* RemoveObjectFromCollectionRepl::default_instance_ = NULL;

RemoveObjectFromCollectionRepl* RemoveObjectFromCollectionRepl::New(::google::protobuf::Arena* arena) const {
  RemoveObjectFromCollectionRepl* n = new RemoveObjectFromCollectionRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveObjectFromCollectionRepl::Clear() {
  status_ = 0;
}

bool RemoveObjectFromCollectionRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.RemoveObjectFromCollectionRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.RemoveObjectFromCollectionRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.RemoveObjectFromCollectionRepl)
  return false;
#undef DO_
}

void RemoveObjectFromCollectionRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.RemoveObjectFromCollectionRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.RemoveObjectFromCollectionRepl)
}

::google::protobuf::uint8* RemoveObjectFromCollectionRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.RemoveObjectFromCollectionRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.RemoveObjectFromCollectionRepl)
  return target;
}

int RemoveObjectFromCollectionRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveObjectFromCollectionRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RemoveObjectFromCollectionRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveObjectFromCollectionRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveObjectFromCollectionRepl::MergeFrom(const RemoveObjectFromCollectionRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RemoveObjectFromCollectionRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveObjectFromCollectionRepl::CopyFrom(const RemoveObjectFromCollectionRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveObjectFromCollectionRepl::IsInitialized() const {

  return true;
}

void RemoveObjectFromCollectionRepl::Swap(RemoveObjectFromCollectionRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveObjectFromCollectionRepl::InternalSwap(RemoveObjectFromCollectionRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveObjectFromCollectionRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveObjectFromCollectionRepl_descriptor_;
  metadata.reflection = RemoveObjectFromCollectionRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveObjectFromCollectionRepl

// optional int32 status = 1;
void RemoveObjectFromCollectionRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 RemoveObjectFromCollectionRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionRepl.status)
  return status_;
}
 void RemoveObjectFromCollectionRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextMDDReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextMDDReq::GetNextMDDReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextMDDReq)
}

void GetNextMDDReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextMDDReq::GetNextMDDReq(const GetNextMDDReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextMDDReq)
}

void GetNextMDDReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

GetNextMDDReq::~GetNextMDDReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextMDDReq)
  SharedDtor();
}

void GetNextMDDReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNextMDDReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextMDDReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextMDDReq_descriptor_;
}

const GetNextMDDReq& GetNextMDDReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextMDDReq* GetNextMDDReq::default_instance_ = NULL;

GetNextMDDReq* GetNextMDDReq::New(::google::protobuf::Arena* arena) const {
  GetNextMDDReq* n = new GetNextMDDReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextMDDReq::Clear() {
  client_id_ = 0;
}

bool GetNextMDDReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextMDDReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextMDDReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextMDDReq)
  return false;
#undef DO_
}

void GetNextMDDReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextMDDReq)
}

::google::protobuf::uint8* GetNextMDDReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextMDDReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextMDDReq)
  return target;
}

int GetNextMDDReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextMDDReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextMDDReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextMDDReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextMDDReq::MergeFrom(const GetNextMDDReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void GetNextMDDReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextMDDReq::CopyFrom(const GetNextMDDReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextMDDReq::IsInitialized() const {

  return true;
}

void GetNextMDDReq::Swap(GetNextMDDReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextMDDReq::InternalSwap(GetNextMDDReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextMDDReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextMDDReq_descriptor_;
  metadata.reflection = GetNextMDDReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextMDDReq

// optional int32 client_id = 1;
void GetNextMDDReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetNextMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDReq.client_id)
  return client_id_;
}
 void GetNextMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextMDDRepl::kStatusFieldNumber;
const int GetNextMDDRepl::kDomainFieldNumber;
const int GetNextMDDRepl::kTypeNameFieldNumber;
const int GetNextMDDRepl::kTypeStructureFieldNumber;
const int GetNextMDDRepl::kOidFieldNumber;
const int GetNextMDDRepl::kCurrentFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextMDDRepl::GetNextMDDRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextMDDRepl)
}

void GetNextMDDRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextMDDRepl::GetNextMDDRepl(const GetNextMDDRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextMDDRepl)
}

void GetNextMDDRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_format_ = 0;
}

GetNextMDDRepl::~GetNextMDDRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextMDDRepl)
  SharedDtor();
}

void GetNextMDDRepl::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNextMDDRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextMDDRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextMDDRepl_descriptor_;
}

const GetNextMDDRepl& GetNextMDDRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextMDDRepl* GetNextMDDRepl::default_instance_ = NULL;

GetNextMDDRepl* GetNextMDDRepl::New(::google::protobuf::Arena* arena) const {
  GetNextMDDRepl* n = new GetNextMDDRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextMDDRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetNextMDDRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, current_format_);
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetNextMDDRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextMDDRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_domain;
        break;
      }

      // optional string domain = 2;
      case 2: {
        if (tag == 18) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNextMDDRepl.domain"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type_name;
        break;
      }

      // optional string type_name = 3;
      case 3: {
        if (tag == 26) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNextMDDRepl.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 4;
      case 4: {
        if (tag == 34) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNextMDDRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_oid;
        break;
      }

      // optional string oid = 5;
      case 5: {
        if (tag == 42) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNextMDDRepl.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_current_format;
        break;
      }

      // optional int32 current_format = 6;
      case 6: {
        if (tag == 48) {
         parse_current_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextMDDRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextMDDRepl)
  return false;
#undef DO_
}

void GetNextMDDRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type_name(), output);
  }

  // optional string type_structure = 4;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type_structure(), output);
  }

  // optional string oid = 5;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->oid(), output);
  }

  // optional int32 current_format = 6;
  if (this->current_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->current_format(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextMDDRepl)
}

::google::protobuf::uint8* GetNextMDDRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextMDDRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type_name(), target);
  }

  // optional string type_structure = 4;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type_structure(), target);
  }

  // optional string oid = 5;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextMDDRepl.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->oid(), target);
  }

  // optional int32 current_format = 6;
  if (this->current_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->current_format(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextMDDRepl)
  return target;
}

int GetNextMDDRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // optional string type_name = 3;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string type_structure = 4;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  // optional string oid = 5;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  // optional int32 current_format = 6;
  if (this->current_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_format());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextMDDRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextMDDRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextMDDRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextMDDRepl::MergeFrom(const GetNextMDDRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  if (from.current_format() != 0) {
    set_current_format(from.current_format());
  }
}

void GetNextMDDRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextMDDRepl::CopyFrom(const GetNextMDDRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextMDDRepl::IsInitialized() const {

  return true;
}

void GetNextMDDRepl::Swap(GetNextMDDRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextMDDRepl::InternalSwap(GetNextMDDRepl* other) {
  std::swap(status_, other->status_);
  domain_.Swap(&other->domain_);
  type_name_.Swap(&other->type_name_);
  type_structure_.Swap(&other->type_structure_);
  oid_.Swap(&other->oid_);
  std::swap(current_format_, other->current_format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextMDDRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextMDDRepl_descriptor_;
  metadata.reflection = GetNextMDDRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextMDDRepl

// optional int32 status = 1;
void GetNextMDDRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetNextMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.status)
  return status_;
}
 void GetNextMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.status)
}

// optional string domain = 2;
void GetNextMDDRepl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextMDDRepl::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.domain)
}
 void GetNextMDDRepl::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.domain)
}
 void GetNextMDDRepl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.domain)
}
 ::std::string* GetNextMDDRepl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextMDDRepl::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.domain)
}

// optional string type_name = 3;
void GetNextMDDRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextMDDRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.type_name)
}
 void GetNextMDDRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.type_name)
}
 void GetNextMDDRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.type_name)
}
 ::std::string* GetNextMDDRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextMDDRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.type_name)
}

// optional string type_structure = 4;
void GetNextMDDRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextMDDRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.type_structure)
}
 void GetNextMDDRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.type_structure)
}
 void GetNextMDDRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.type_structure)
}
 ::std::string* GetNextMDDRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextMDDRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.type_structure)
}

// optional string oid = 5;
void GetNextMDDRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextMDDRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.oid)
}
 void GetNextMDDRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.oid)
}
 void GetNextMDDRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.oid)
}
 ::std::string* GetNextMDDRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextMDDRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextMDDRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.oid)
}

// optional int32 current_format = 6;
void GetNextMDDRepl::clear_current_format() {
  current_format_ = 0;
}
 ::google::protobuf::int32 GetNextMDDRepl::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.current_format)
  return current_format_;
}
 void GetNextMDDRepl::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.current_format)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextTileReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextTileReq::GetNextTileReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextTileReq)
}

void GetNextTileReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextTileReq::GetNextTileReq(const GetNextTileReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextTileReq)
}

void GetNextTileReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

GetNextTileReq::~GetNextTileReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextTileReq)
  SharedDtor();
}

void GetNextTileReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNextTileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextTileReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextTileReq_descriptor_;
}

const GetNextTileReq& GetNextTileReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextTileReq* GetNextTileReq::default_instance_ = NULL;

GetNextTileReq* GetNextTileReq::New(::google::protobuf::Arena* arena) const {
  GetNextTileReq* n = new GetNextTileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextTileReq::Clear() {
  client_id_ = 0;
}

bool GetNextTileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextTileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextTileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextTileReq)
  return false;
#undef DO_
}

void GetNextTileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextTileReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextTileReq)
}

::google::protobuf::uint8* GetNextTileReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextTileReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextTileReq)
  return target;
}

int GetNextTileReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextTileReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextTileReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextTileReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextTileReq::MergeFrom(const GetNextTileReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void GetNextTileReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextTileReq::CopyFrom(const GetNextTileReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextTileReq::IsInitialized() const {

  return true;
}

void GetNextTileReq::Swap(GetNextTileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextTileReq::InternalSwap(GetNextTileReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextTileReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextTileReq_descriptor_;
  metadata.reflection = GetNextTileReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextTileReq

// optional int32 client_id = 1;
void GetNextTileReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetNextTileReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileReq.client_id)
  return client_id_;
}
 void GetNextTileReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextTileRepl::kStatusFieldNumber;
const int GetNextTileRepl::kDomainFieldNumber;
const int GetNextTileRepl::kCellTypeLengthFieldNumber;
const int GetNextTileRepl::kCurrentFormatFieldNumber;
const int GetNextTileRepl::kStorageFormatFieldNumber;
const int GetNextTileRepl::kDataLengthFieldNumber;
const int GetNextTileRepl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextTileRepl::GetNextTileRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextTileRepl)
}

void GetNextTileRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextTileRepl::GetNextTileRepl(const GetNextTileRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextTileRepl)
}

void GetNextTileRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cell_type_length_ = 0;
  current_format_ = 0;
  storage_format_ = 0;
  data_length_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNextTileRepl::~GetNextTileRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextTileRepl)
  SharedDtor();
}

void GetNextTileRepl::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNextTileRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextTileRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextTileRepl_descriptor_;
}

const GetNextTileRepl& GetNextTileRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextTileRepl* GetNextTileRepl::default_instance_ = NULL;

GetNextTileRepl* GetNextTileRepl::New(::google::protobuf::Arena* arena) const {
  GetNextTileRepl* n = new GetNextTileRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextTileRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetNextTileRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, storage_format_);
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_length_ = 0;
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetNextTileRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextTileRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_domain;
        break;
      }

      // optional string domain = 2;
      case 2: {
        if (tag == 18) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNextTileRepl.domain"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cell_type_length;
        break;
      }

      // optional int32 cell_type_length = 3;
      case 3: {
        if (tag == 24) {
         parse_cell_type_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cell_type_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_current_format;
        break;
      }

      // optional int32 current_format = 4;
      case 4: {
        if (tag == 32) {
         parse_current_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_storage_format;
        break;
      }

      // optional int32 storage_format = 5;
      case 5: {
        if (tag == 40) {
         parse_storage_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storage_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_data_length;
        break;
      }

      // optional int32 data_length = 6;
      case 6: {
        if (tag == 48) {
         parse_data_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_data;
        break;
      }

      // optional bytes data = 7;
      case 7: {
        if (tag == 58) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextTileRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextTileRepl)
  return false;
#undef DO_
}

void GetNextTileRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextTileRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextTileRepl.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // optional int32 cell_type_length = 3;
  if (this->cell_type_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cell_type_length(), output);
  }

  // optional int32 current_format = 4;
  if (this->current_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->current_format(), output);
  }

  // optional int32 storage_format = 5;
  if (this->storage_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->storage_format(), output);
  }

  // optional int32 data_length = 6;
  if (this->data_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->data_length(), output);
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextTileRepl)
}

::google::protobuf::uint8* GetNextTileRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextTileRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNextTileRepl.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // optional int32 cell_type_length = 3;
  if (this->cell_type_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cell_type_length(), target);
  }

  // optional int32 current_format = 4;
  if (this->current_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->current_format(), target);
  }

  // optional int32 storage_format = 5;
  if (this->storage_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->storage_format(), target);
  }

  // optional int32 data_length = 6;
  if (this->data_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->data_length(), target);
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextTileRepl)
  return target;
}

int GetNextTileRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // optional int32 cell_type_length = 3;
  if (this->cell_type_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cell_type_length());
  }

  // optional int32 current_format = 4;
  if (this->current_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_format());
  }

  // optional int32 storage_format = 5;
  if (this->storage_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storage_format());
  }

  // optional int32 data_length = 6;
  if (this->data_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_length());
  }

  // optional bytes data = 7;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextTileRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextTileRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextTileRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextTileRepl::MergeFrom(const GetNextTileRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.cell_type_length() != 0) {
    set_cell_type_length(from.cell_type_length());
  }
  if (from.current_format() != 0) {
    set_current_format(from.current_format());
  }
  if (from.storage_format() != 0) {
    set_storage_format(from.storage_format());
  }
  if (from.data_length() != 0) {
    set_data_length(from.data_length());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GetNextTileRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextTileRepl::CopyFrom(const GetNextTileRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextTileRepl::IsInitialized() const {

  return true;
}

void GetNextTileRepl::Swap(GetNextTileRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextTileRepl::InternalSwap(GetNextTileRepl* other) {
  std::swap(status_, other->status_);
  domain_.Swap(&other->domain_);
  std::swap(cell_type_length_, other->cell_type_length_);
  std::swap(current_format_, other->current_format_);
  std::swap(storage_format_, other->storage_format_);
  std::swap(data_length_, other->data_length_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextTileRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextTileRepl_descriptor_;
  metadata.reflection = GetNextTileRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextTileRepl

// optional int32 status = 1;
void GetNextTileRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetNextTileRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.status)
  return status_;
}
 void GetNextTileRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.status)
}

// optional string domain = 2;
void GetNextTileRepl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextTileRepl::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextTileRepl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.domain)
}
 void GetNextTileRepl::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextTileRepl.domain)
}
 void GetNextTileRepl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextTileRepl.domain)
}
 ::std::string* GetNextTileRepl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextTileRepl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextTileRepl::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextTileRepl::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextTileRepl.domain)
}

// optional int32 cell_type_length = 3;
void GetNextTileRepl::clear_cell_type_length() {
  cell_type_length_ = 0;
}
 ::google::protobuf::int32 GetNextTileRepl::cell_type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.cell_type_length)
  return cell_type_length_;
}
 void GetNextTileRepl::set_cell_type_length(::google::protobuf::int32 value) {
  
  cell_type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.cell_type_length)
}

// optional int32 current_format = 4;
void GetNextTileRepl::clear_current_format() {
  current_format_ = 0;
}
 ::google::protobuf::int32 GetNextTileRepl::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.current_format)
  return current_format_;
}
 void GetNextTileRepl::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.current_format)
}

// optional int32 storage_format = 5;
void GetNextTileRepl::clear_storage_format() {
  storage_format_ = 0;
}
 ::google::protobuf::int32 GetNextTileRepl::storage_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.storage_format)
  return storage_format_;
}
 void GetNextTileRepl::set_storage_format(::google::protobuf::int32 value) {
  
  storage_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.storage_format)
}

// optional int32 data_length = 6;
void GetNextTileRepl::clear_data_length() {
  data_length_ = 0;
}
 ::google::protobuf::int32 GetNextTileRepl::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.data_length)
  return data_length_;
}
 void GetNextTileRepl::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.data_length)
}

// optional bytes data = 7;
void GetNextTileRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextTileRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextTileRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.data)
}
 void GetNextTileRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextTileRepl.data)
}
 void GetNextTileRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextTileRepl.data)
}
 ::std::string* GetNextTileRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextTileRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextTileRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextTileRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextTileRepl.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndTransferReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndTransferReq::EndTransferReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.EndTransferReq)
}

void EndTransferReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EndTransferReq::EndTransferReq(const EndTransferReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.EndTransferReq)
}

void EndTransferReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

EndTransferReq::~EndTransferReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.EndTransferReq)
  SharedDtor();
}

void EndTransferReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EndTransferReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndTransferReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EndTransferReq_descriptor_;
}

const EndTransferReq& EndTransferReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

EndTransferReq* EndTransferReq::default_instance_ = NULL;

EndTransferReq* EndTransferReq::New(::google::protobuf::Arena* arena) const {
  EndTransferReq* n = new EndTransferReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndTransferReq::Clear() {
  client_id_ = 0;
}

bool EndTransferReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.EndTransferReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.EndTransferReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.EndTransferReq)
  return false;
#undef DO_
}

void EndTransferReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.EndTransferReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.EndTransferReq)
}

::google::protobuf::uint8* EndTransferReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.EndTransferReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.EndTransferReq)
  return target;
}

int EndTransferReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndTransferReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EndTransferReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EndTransferReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EndTransferReq::MergeFrom(const EndTransferReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void EndTransferReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndTransferReq::CopyFrom(const EndTransferReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndTransferReq::IsInitialized() const {

  return true;
}

void EndTransferReq::Swap(EndTransferReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndTransferReq::InternalSwap(EndTransferReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndTransferReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EndTransferReq_descriptor_;
  metadata.reflection = EndTransferReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndTransferReq

// optional int32 client_id = 1;
void EndTransferReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 EndTransferReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndTransferReq.client_id)
  return client_id_;
}
 void EndTransferReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndTransferReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndTransferRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndTransferRepl::EndTransferRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.EndTransferRepl)
}

void EndTransferRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EndTransferRepl::EndTransferRepl(const EndTransferRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.EndTransferRepl)
}

void EndTransferRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

EndTransferRepl::~EndTransferRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.EndTransferRepl)
  SharedDtor();
}

void EndTransferRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EndTransferRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndTransferRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EndTransferRepl_descriptor_;
}

const EndTransferRepl& EndTransferRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

EndTransferRepl* EndTransferRepl::default_instance_ = NULL;

EndTransferRepl* EndTransferRepl::New(::google::protobuf::Arena* arena) const {
  EndTransferRepl* n = new EndTransferRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndTransferRepl::Clear() {
  status_ = 0;
}

bool EndTransferRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.EndTransferRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.EndTransferRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.EndTransferRepl)
  return false;
#undef DO_
}

void EndTransferRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.EndTransferRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.EndTransferRepl)
}

::google::protobuf::uint8* EndTransferRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.EndTransferRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.EndTransferRepl)
  return target;
}

int EndTransferRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndTransferRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EndTransferRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EndTransferRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EndTransferRepl::MergeFrom(const EndTransferRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void EndTransferRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndTransferRepl::CopyFrom(const EndTransferRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndTransferRepl::IsInitialized() const {

  return true;
}

void EndTransferRepl::Swap(EndTransferRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndTransferRepl::InternalSwap(EndTransferRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndTransferRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EndTransferRepl_descriptor_;
  metadata.reflection = EndTransferRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndTransferRepl

// optional int32 status = 1;
void EndTransferRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 EndTransferRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndTransferRepl.status)
  return status_;
}
 void EndTransferRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndTransferRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitUpdateReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitUpdateReq::InitUpdateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InitUpdateReq)
}

void InitUpdateReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InitUpdateReq::InitUpdateReq(const InitUpdateReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InitUpdateReq)
}

void InitUpdateReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

InitUpdateReq::~InitUpdateReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.InitUpdateReq)
  SharedDtor();
}

void InitUpdateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InitUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitUpdateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitUpdateReq_descriptor_;
}

const InitUpdateReq& InitUpdateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InitUpdateReq* InitUpdateReq::default_instance_ = NULL;

InitUpdateReq* InitUpdateReq::New(::google::protobuf::Arena* arena) const {
  InitUpdateReq* n = new InitUpdateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitUpdateReq::Clear() {
  client_id_ = 0;
}

bool InitUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InitUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InitUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InitUpdateReq)
  return false;
#undef DO_
}

void InitUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InitUpdateReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InitUpdateReq)
}

::google::protobuf::uint8* InitUpdateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InitUpdateReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InitUpdateReq)
  return target;
}

int InitUpdateReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InitUpdateReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InitUpdateReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InitUpdateReq::MergeFrom(const InitUpdateReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void InitUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitUpdateReq::CopyFrom(const InitUpdateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitUpdateReq::IsInitialized() const {

  return true;
}

void InitUpdateReq::Swap(InitUpdateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitUpdateReq::InternalSwap(InitUpdateReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitUpdateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitUpdateReq_descriptor_;
  metadata.reflection = InitUpdateReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitUpdateReq

// optional int32 client_id = 1;
void InitUpdateReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 InitUpdateReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InitUpdateReq.client_id)
  return client_id_;
}
 void InitUpdateReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InitUpdateReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitUpdateRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitUpdateRepl::InitUpdateRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.InitUpdateRepl)
}

void InitUpdateRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InitUpdateRepl::InitUpdateRepl(const InitUpdateRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.InitUpdateRepl)
}

void InitUpdateRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

InitUpdateRepl::~InitUpdateRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.InitUpdateRepl)
  SharedDtor();
}

void InitUpdateRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InitUpdateRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitUpdateRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitUpdateRepl_descriptor_;
}

const InitUpdateRepl& InitUpdateRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

InitUpdateRepl* InitUpdateRepl::default_instance_ = NULL;

InitUpdateRepl* InitUpdateRepl::New(::google::protobuf::Arena* arena) const {
  InitUpdateRepl* n = new InitUpdateRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitUpdateRepl::Clear() {
  status_ = 0;
}

bool InitUpdateRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.InitUpdateRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.InitUpdateRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.InitUpdateRepl)
  return false;
#undef DO_
}

void InitUpdateRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.InitUpdateRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.InitUpdateRepl)
}

::google::protobuf::uint8* InitUpdateRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.InitUpdateRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.InitUpdateRepl)
  return target;
}

int InitUpdateRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitUpdateRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InitUpdateRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InitUpdateRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InitUpdateRepl::MergeFrom(const InitUpdateRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void InitUpdateRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitUpdateRepl::CopyFrom(const InitUpdateRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitUpdateRepl::IsInitialized() const {

  return true;
}

void InitUpdateRepl::Swap(InitUpdateRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitUpdateRepl::InternalSwap(InitUpdateRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitUpdateRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitUpdateRepl_descriptor_;
  metadata.reflection = InitUpdateRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitUpdateRepl

// optional int32 status = 1;
void InitUpdateRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 InitUpdateRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InitUpdateRepl.status)
  return status_;
}
 void InitUpdateRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InitUpdateRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteQueryReq::kClientIdFieldNumber;
const int ExecuteQueryReq::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteQueryReq::ExecuteQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteQueryReq)
}

void ExecuteQueryReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteQueryReq::ExecuteQueryReq(const ExecuteQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteQueryReq)
}

void ExecuteQueryReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteQueryReq::~ExecuteQueryReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteQueryReq)
  SharedDtor();
}

void ExecuteQueryReq::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteQueryReq_descriptor_;
}

const ExecuteQueryReq& ExecuteQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteQueryReq* ExecuteQueryReq::default_instance_ = NULL;

ExecuteQueryReq* ExecuteQueryReq::New(::google::protobuf::Arena* arena) const {
  ExecuteQueryReq* n = new ExecuteQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteQueryReq::Clear() {
  client_id_ = 0;
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExecuteQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_query;
        break;
      }

      // optional string query = 2;
      case 2: {
        if (tag == 18) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteQueryReq.query"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteQueryReq)
  return false;
#undef DO_
}

void ExecuteQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryReq.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteQueryReq)
}

::google::protobuf::uint8* ExecuteQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryReq.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteQueryReq)
  return target;
}

int ExecuteQueryReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteQueryReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteQueryReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteQueryReq::MergeFrom(const ExecuteQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ExecuteQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteQueryReq::CopyFrom(const ExecuteQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteQueryReq::IsInitialized() const {

  return true;
}

void ExecuteQueryReq::Swap(ExecuteQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteQueryReq::InternalSwap(ExecuteQueryReq* other) {
  std::swap(client_id_, other->client_id_);
  query_.Swap(&other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteQueryReq_descriptor_;
  metadata.reflection = ExecuteQueryReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteQueryReq

// optional int32 client_id = 1;
void ExecuteQueryReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 ExecuteQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryReq.client_id)
  return client_id_;
}
 void ExecuteQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryReq.client_id)
}

// optional string query = 2;
void ExecuteQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryReq.query)
}
 void ExecuteQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryReq.query)
}
 void ExecuteQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryReq.query)
}
 ::std::string* ExecuteQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryReq.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteQueryRepl::kStatusFieldNumber;
const int ExecuteQueryRepl::kErrNoFieldNumber;
const int ExecuteQueryRepl::kLineNoFieldNumber;
const int ExecuteQueryRepl::kColNoFieldNumber;
const int ExecuteQueryRepl::kTokenFieldNumber;
const int ExecuteQueryRepl::kTypeNameFieldNumber;
const int ExecuteQueryRepl::kTypeStructureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteQueryRepl::ExecuteQueryRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteQueryRepl)
}

void ExecuteQueryRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteQueryRepl::ExecuteQueryRepl(const ExecuteQueryRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteQueryRepl)
}

void ExecuteQueryRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  err_no_ = 0;
  line_no_ = 0;
  col_no_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteQueryRepl::~ExecuteQueryRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteQueryRepl)
  SharedDtor();
}

void ExecuteQueryRepl::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteQueryRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteQueryRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteQueryRepl_descriptor_;
}

const ExecuteQueryRepl& ExecuteQueryRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteQueryRepl* ExecuteQueryRepl::default_instance_ = NULL;

ExecuteQueryRepl* ExecuteQueryRepl::New(::google::protobuf::Arena* arena) const {
  ExecuteQueryRepl* n = new ExecuteQueryRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteQueryRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExecuteQueryRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, col_no_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ExecuteQueryRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteQueryRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err_no;
        break;
      }

      // optional int32 err_no = 2;
      case 2: {
        if (tag == 16) {
         parse_err_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_line_no;
        break;
      }

      // optional int32 line_no = 3;
      case 3: {
        if (tag == 24) {
         parse_line_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_col_no;
        break;
      }

      // optional int32 col_no = 4;
      case 4: {
        if (tag == 32) {
         parse_col_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_token;
        break;
      }

      // optional string token = 5;
      case 5: {
        if (tag == 42) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteQueryRepl.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_type_name;
        break;
      }

      // optional string type_name = 6;
      case 6: {
        if (tag == 50) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteQueryRepl.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 7;
      case 7: {
        if (tag == 58) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteQueryRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteQueryRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteQueryRepl)
  return false;
#undef DO_
}

void ExecuteQueryRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 err_no = 2;
  if (this->err_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->err_no(), output);
  }

  // optional int32 line_no = 3;
  if (this->line_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->line_no(), output);
  }

  // optional int32 col_no = 4;
  if (this->col_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->col_no(), output);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type_name(), output);
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->type_structure(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteQueryRepl)
}

::google::protobuf::uint8* ExecuteQueryRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 err_no = 2;
  if (this->err_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->err_no(), target);
  }

  // optional int32 line_no = 3;
  if (this->line_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->line_no(), target);
  }

  // optional int32 col_no = 4;
  if (this->col_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->col_no(), target);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type_name(), target);
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteQueryRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->type_structure(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteQueryRepl)
  return target;
}

int ExecuteQueryRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 err_no = 2;
  if (this->err_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());
  }

  // optional int32 line_no = 3;
  if (this->line_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line_no());
  }

  // optional int32 col_no = 4;
  if (this->col_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col_no());
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteQueryRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteQueryRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteQueryRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteQueryRepl::MergeFrom(const ExecuteQueryRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.err_no() != 0) {
    set_err_no(from.err_no());
  }
  if (from.line_no() != 0) {
    set_line_no(from.line_no());
  }
  if (from.col_no() != 0) {
    set_col_no(from.col_no());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
}

void ExecuteQueryRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteQueryRepl::CopyFrom(const ExecuteQueryRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteQueryRepl::IsInitialized() const {

  return true;
}

void ExecuteQueryRepl::Swap(ExecuteQueryRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteQueryRepl::InternalSwap(ExecuteQueryRepl* other) {
  std::swap(status_, other->status_);
  std::swap(err_no_, other->err_no_);
  std::swap(line_no_, other->line_no_);
  std::swap(col_no_, other->col_no_);
  token_.Swap(&other->token_);
  type_name_.Swap(&other->type_name_);
  type_structure_.Swap(&other->type_structure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteQueryRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteQueryRepl_descriptor_;
  metadata.reflection = ExecuteQueryRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteQueryRepl

// optional int32 status = 1;
void ExecuteQueryRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 ExecuteQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.status)
  return status_;
}
 void ExecuteQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.status)
}

// optional int32 err_no = 2;
void ExecuteQueryRepl::clear_err_no() {
  err_no_ = 0;
}
 ::google::protobuf::int32 ExecuteQueryRepl::err_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.err_no)
  return err_no_;
}
 void ExecuteQueryRepl::set_err_no(::google::protobuf::int32 value) {
  
  err_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.err_no)
}

// optional int32 line_no = 3;
void ExecuteQueryRepl::clear_line_no() {
  line_no_ = 0;
}
 ::google::protobuf::int32 ExecuteQueryRepl::line_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.line_no)
  return line_no_;
}
 void ExecuteQueryRepl::set_line_no(::google::protobuf::int32 value) {
  
  line_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.line_no)
}

// optional int32 col_no = 4;
void ExecuteQueryRepl::clear_col_no() {
  col_no_ = 0;
}
 ::google::protobuf::int32 ExecuteQueryRepl::col_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.col_no)
  return col_no_;
}
 void ExecuteQueryRepl::set_col_no(::google::protobuf::int32 value) {
  
  col_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.col_no)
}

// optional string token = 5;
void ExecuteQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.token)
}
 void ExecuteQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.token)
}
 void ExecuteQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.token)
}
 ::std::string* ExecuteQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.token)
}

// optional string type_name = 6;
void ExecuteQueryRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteQueryRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.type_name)
}
 void ExecuteQueryRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.type_name)
}
 void ExecuteQueryRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.type_name)
}
 ::std::string* ExecuteQueryRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteQueryRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.type_name)
}

// optional string type_structure = 7;
void ExecuteQueryRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteQueryRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.type_structure)
}
 void ExecuteQueryRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.type_structure)
}
 void ExecuteQueryRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.type_structure)
}
 ::std::string* ExecuteQueryRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteQueryRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteQueryRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.type_structure)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteHttpQueryReq::kClientIdFieldNumber;
const int ExecuteHttpQueryReq::kDataFieldNumber;
const int ExecuteHttpQueryReq::kDataLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteHttpQueryReq::ExecuteHttpQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteHttpQueryReq)
}

void ExecuteHttpQueryReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteHttpQueryReq::ExecuteHttpQueryReq(const ExecuteHttpQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteHttpQueryReq)
}

void ExecuteHttpQueryReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_length_ = 0;
}

ExecuteHttpQueryReq::~ExecuteHttpQueryReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteHttpQueryReq)
  SharedDtor();
}

void ExecuteHttpQueryReq::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteHttpQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteHttpQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteHttpQueryReq_descriptor_;
}

const ExecuteHttpQueryReq& ExecuteHttpQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteHttpQueryReq* ExecuteHttpQueryReq::default_instance_ = NULL;

ExecuteHttpQueryReq* ExecuteHttpQueryReq::New(::google::protobuf::Arena* arena) const {
  ExecuteHttpQueryReq* n = new ExecuteHttpQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteHttpQueryReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExecuteHttpQueryReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, data_length_);
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ExecuteHttpQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteHttpQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_data_length;
        break;
      }

      // optional int32 data_length = 3;
      case 3: {
        if (tag == 24) {
         parse_data_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteHttpQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteHttpQueryReq)
  return false;
#undef DO_
}

void ExecuteHttpQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteHttpQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data_length(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteHttpQueryReq)
}

::google::protobuf::uint8* ExecuteHttpQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteHttpQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data_length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteHttpQueryReq)
  return target;
}

int ExecuteHttpQueryReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_length());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteHttpQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteHttpQueryReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteHttpQueryReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteHttpQueryReq::MergeFrom(const ExecuteHttpQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.data_length() != 0) {
    set_data_length(from.data_length());
  }
}

void ExecuteHttpQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteHttpQueryReq::CopyFrom(const ExecuteHttpQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteHttpQueryReq::IsInitialized() const {

  return true;
}

void ExecuteHttpQueryReq::Swap(ExecuteHttpQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteHttpQueryReq::InternalSwap(ExecuteHttpQueryReq* other) {
  std::swap(client_id_, other->client_id_);
  data_.Swap(&other->data_);
  std::swap(data_length_, other->data_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteHttpQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteHttpQueryReq_descriptor_;
  metadata.reflection = ExecuteHttpQueryReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteHttpQueryReq

// optional int32 client_id = 1;
void ExecuteHttpQueryReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 ExecuteHttpQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.client_id)
  return client_id_;
}
 void ExecuteHttpQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.client_id)
}

// optional bytes data = 2;
void ExecuteHttpQueryReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteHttpQueryReq::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteHttpQueryReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.data)
}
 void ExecuteHttpQueryReq::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteHttpQueryReq.data)
}
 void ExecuteHttpQueryReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteHttpQueryReq.data)
}
 ::std::string* ExecuteHttpQueryReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteHttpQueryReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteHttpQueryReq::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteHttpQueryReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteHttpQueryReq.data)
}

// optional int32 data_length = 3;
void ExecuteHttpQueryReq::clear_data_length() {
  data_length_ = 0;
}
 ::google::protobuf::int32 ExecuteHttpQueryReq::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.data_length)
  return data_length_;
}
 void ExecuteHttpQueryReq::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.data_length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteHttpQueryRepl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteHttpQueryRepl::ExecuteHttpQueryRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteHttpQueryRepl)
}

void ExecuteHttpQueryRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteHttpQueryRepl::ExecuteHttpQueryRepl(const ExecuteHttpQueryRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteHttpQueryRepl)
}

void ExecuteHttpQueryRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteHttpQueryRepl::~ExecuteHttpQueryRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteHttpQueryRepl)
  SharedDtor();
}

void ExecuteHttpQueryRepl::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteHttpQueryRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteHttpQueryRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteHttpQueryRepl_descriptor_;
}

const ExecuteHttpQueryRepl& ExecuteHttpQueryRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteHttpQueryRepl* ExecuteHttpQueryRepl::default_instance_ = NULL;

ExecuteHttpQueryRepl* ExecuteHttpQueryRepl::New(::google::protobuf::Arena* arena) const {
  ExecuteHttpQueryRepl* n = new ExecuteHttpQueryRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteHttpQueryRepl::Clear() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExecuteHttpQueryRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteHttpQueryRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteHttpQueryRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteHttpQueryRepl)
  return false;
#undef DO_
}

void ExecuteHttpQueryRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteHttpQueryRepl)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteHttpQueryRepl)
}

::google::protobuf::uint8* ExecuteHttpQueryRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteHttpQueryRepl)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteHttpQueryRepl)
  return target;
}

int ExecuteHttpQueryRepl::ByteSize() const {
  int total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteHttpQueryRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteHttpQueryRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteHttpQueryRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteHttpQueryRepl::MergeFrom(const ExecuteHttpQueryRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ExecuteHttpQueryRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteHttpQueryRepl::CopyFrom(const ExecuteHttpQueryRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteHttpQueryRepl::IsInitialized() const {

  return true;
}

void ExecuteHttpQueryRepl::Swap(ExecuteHttpQueryRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteHttpQueryRepl::InternalSwap(ExecuteHttpQueryRepl* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteHttpQueryRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteHttpQueryRepl_descriptor_;
  metadata.reflection = ExecuteHttpQueryRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteHttpQueryRepl

// optional bytes data = 1;
void ExecuteHttpQueryRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteHttpQueryRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteHttpQueryRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryRepl.data)
}
 void ExecuteHttpQueryRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteHttpQueryRepl.data)
}
 void ExecuteHttpQueryRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteHttpQueryRepl.data)
}
 ::std::string* ExecuteHttpQueryRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteHttpQueryRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteHttpQueryRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteHttpQueryRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteHttpQueryRepl.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextElementReq::kClientIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextElementReq::GetNextElementReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextElementReq)
}

void GetNextElementReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextElementReq::GetNextElementReq(const GetNextElementReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextElementReq)
}

void GetNextElementReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
}

GetNextElementReq::~GetNextElementReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextElementReq)
  SharedDtor();
}

void GetNextElementReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNextElementReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextElementReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextElementReq_descriptor_;
}

const GetNextElementReq& GetNextElementReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextElementReq* GetNextElementReq::default_instance_ = NULL;

GetNextElementReq* GetNextElementReq::New(::google::protobuf::Arena* arena) const {
  GetNextElementReq* n = new GetNextElementReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextElementReq::Clear() {
  client_id_ = 0;
}

bool GetNextElementReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextElementReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextElementReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextElementReq)
  return false;
#undef DO_
}

void GetNextElementReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextElementReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextElementReq)
}

::google::protobuf::uint8* GetNextElementReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextElementReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextElementReq)
  return target;
}

int GetNextElementReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextElementReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextElementReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextElementReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextElementReq::MergeFrom(const GetNextElementReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
}

void GetNextElementReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextElementReq::CopyFrom(const GetNextElementReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextElementReq::IsInitialized() const {

  return true;
}

void GetNextElementReq::Swap(GetNextElementReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextElementReq::InternalSwap(GetNextElementReq* other) {
  std::swap(client_id_, other->client_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextElementReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextElementReq_descriptor_;
  metadata.reflection = GetNextElementReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextElementReq

// optional int32 client_id = 1;
void GetNextElementReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetNextElementReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementReq.client_id)
  return client_id_;
}
 void GetNextElementReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementReq.client_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNextElementRepl::kStatusFieldNumber;
const int GetNextElementRepl::kDataLengthFieldNumber;
const int GetNextElementRepl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNextElementRepl::GetNextElementRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNextElementRepl)
}

void GetNextElementRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNextElementRepl::GetNextElementRepl(const GetNextElementRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNextElementRepl)
}

void GetNextElementRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  data_length_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNextElementRepl::~GetNextElementRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNextElementRepl)
  SharedDtor();
}

void GetNextElementRepl::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNextElementRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNextElementRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNextElementRepl_descriptor_;
}

const GetNextElementRepl& GetNextElementRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNextElementRepl* GetNextElementRepl::default_instance_ = NULL;

GetNextElementRepl* GetNextElementRepl::New(::google::protobuf::Arena* arena) const {
  GetNextElementRepl* n = new GetNextElementRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNextElementRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetNextElementRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, data_length_);
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetNextElementRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNextElementRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_data_length;
        break;
      }

      // optional int32 data_length = 3;
      case 3: {
        if (tag == 24) {
         parse_data_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional bytes data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNextElementRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNextElementRepl)
  return false;
#undef DO_
}

void GetNextElementRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNextElementRepl)
  // optional int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data_length(), output);
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNextElementRepl)
}

::google::protobuf::uint8* GetNextElementRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNextElementRepl)
  // optional int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data_length(), target);
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNextElementRepl)
  return target;
}

int GetNextElementRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 data_length = 3;
  if (this->data_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data_length());
  }

  // optional bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNextElementRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNextElementRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNextElementRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNextElementRepl::MergeFrom(const GetNextElementRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.data_length() != 0) {
    set_data_length(from.data_length());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GetNextElementRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNextElementRepl::CopyFrom(const GetNextElementRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextElementRepl::IsInitialized() const {

  return true;
}

void GetNextElementRepl::Swap(GetNextElementRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNextElementRepl::InternalSwap(GetNextElementRepl* other) {
  std::swap(status_, other->status_);
  std::swap(data_length_, other->data_length_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNextElementRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNextElementRepl_descriptor_;
  metadata.reflection = GetNextElementRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNextElementRepl

// optional int32 status = 2;
void GetNextElementRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetNextElementRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.status)
  return status_;
}
 void GetNextElementRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.status)
}

// optional int32 data_length = 3;
void GetNextElementRepl::clear_data_length() {
  data_length_ = 0;
}
 ::google::protobuf::int32 GetNextElementRepl::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.data_length)
  return data_length_;
}
 void GetNextElementRepl::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.data_length)
}

// optional bytes data = 4;
void GetNextElementRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNextElementRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextElementRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.data)
}
 void GetNextElementRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextElementRepl.data)
}
 void GetNextElementRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextElementRepl.data)
}
 ::std::string* GetNextElementRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextElementRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNextElementRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNextElementRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextElementRepl.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteUpdateQueryReq::kClientIdFieldNumber;
const int ExecuteUpdateQueryReq::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteUpdateQueryReq::ExecuteUpdateQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteUpdateQueryReq)
}

void ExecuteUpdateQueryReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteUpdateQueryReq::ExecuteUpdateQueryReq(const ExecuteUpdateQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteUpdateQueryReq)
}

void ExecuteUpdateQueryReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteUpdateQueryReq::~ExecuteUpdateQueryReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteUpdateQueryReq)
  SharedDtor();
}

void ExecuteUpdateQueryReq::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteUpdateQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteUpdateQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteUpdateQueryReq_descriptor_;
}

const ExecuteUpdateQueryReq& ExecuteUpdateQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteUpdateQueryReq* ExecuteUpdateQueryReq::default_instance_ = NULL;

ExecuteUpdateQueryReq* ExecuteUpdateQueryReq::New(::google::protobuf::Arena* arena) const {
  ExecuteUpdateQueryReq* n = new ExecuteUpdateQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteUpdateQueryReq::Clear() {
  client_id_ = 0;
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExecuteUpdateQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteUpdateQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_query;
        break;
      }

      // optional string query = 2;
      case 2: {
        if (tag == 18) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteUpdateQueryReq.query"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteUpdateQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteUpdateQueryReq)
  return false;
#undef DO_
}

void ExecuteUpdateQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteUpdateQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteUpdateQueryReq.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteUpdateQueryReq)
}

::google::protobuf::uint8* ExecuteUpdateQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteUpdateQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteUpdateQueryReq.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteUpdateQueryReq)
  return target;
}

int ExecuteUpdateQueryReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteUpdateQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteUpdateQueryReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteUpdateQueryReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteUpdateQueryReq::MergeFrom(const ExecuteUpdateQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ExecuteUpdateQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUpdateQueryReq::CopyFrom(const ExecuteUpdateQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUpdateQueryReq::IsInitialized() const {

  return true;
}

void ExecuteUpdateQueryReq::Swap(ExecuteUpdateQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteUpdateQueryReq::InternalSwap(ExecuteUpdateQueryReq* other) {
  std::swap(client_id_, other->client_id_);
  query_.Swap(&other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteUpdateQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteUpdateQueryReq_descriptor_;
  metadata.reflection = ExecuteUpdateQueryReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteUpdateQueryReq

// optional int32 client_id = 1;
void ExecuteUpdateQueryReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 ExecuteUpdateQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryReq.client_id)
  return client_id_;
}
 void ExecuteUpdateQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryReq.client_id)
}

// optional string query = 2;
void ExecuteUpdateQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteUpdateQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteUpdateQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryReq.query)
}
 void ExecuteUpdateQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteUpdateQueryReq.query)
}
 void ExecuteUpdateQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteUpdateQueryReq.query)
}
 ::std::string* ExecuteUpdateQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteUpdateQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteUpdateQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteUpdateQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteUpdateQueryReq.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteUpdateQueryRepl::kStatusFieldNumber;
const int ExecuteUpdateQueryRepl::kErroNoFieldNumber;
const int ExecuteUpdateQueryRepl::kLineNoFieldNumber;
const int ExecuteUpdateQueryRepl::kColNoFieldNumber;
const int ExecuteUpdateQueryRepl::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteUpdateQueryRepl::ExecuteUpdateQueryRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteUpdateQueryRepl)
}

void ExecuteUpdateQueryRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteUpdateQueryRepl::ExecuteUpdateQueryRepl(const ExecuteUpdateQueryRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteUpdateQueryRepl)
}

void ExecuteUpdateQueryRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  errono_ = 0;
  lineno_ = 0;
  colno_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteUpdateQueryRepl::~ExecuteUpdateQueryRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteUpdateQueryRepl)
  SharedDtor();
}

void ExecuteUpdateQueryRepl::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteUpdateQueryRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteUpdateQueryRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteUpdateQueryRepl_descriptor_;
}

const ExecuteUpdateQueryRepl& ExecuteUpdateQueryRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteUpdateQueryRepl* ExecuteUpdateQueryRepl::default_instance_ = NULL;

ExecuteUpdateQueryRepl* ExecuteUpdateQueryRepl::New(::google::protobuf::Arena* arena) const {
  ExecuteUpdateQueryRepl* n = new ExecuteUpdateQueryRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteUpdateQueryRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExecuteUpdateQueryRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, colno_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ExecuteUpdateQueryRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteUpdateQueryRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_erroNo;
        break;
      }

      // optional int32 erroNo = 2;
      case 2: {
        if (tag == 16) {
         parse_erroNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errono_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lineNo;
        break;
      }

      // optional int32 lineNo = 3;
      case 3: {
        if (tag == 24) {
         parse_lineNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_colNo;
        break;
      }

      // optional int32 colNo = 4;
      case 4: {
        if (tag == 32) {
         parse_colNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_token;
        break;
      }

      // optional string token = 5;
      case 5: {
        if (tag == 42) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteUpdateQueryRepl.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteUpdateQueryRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteUpdateQueryRepl)
  return false;
#undef DO_
}

void ExecuteUpdateQueryRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteUpdateQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errono(), output);
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lineno(), output);
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->colno(), output);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteUpdateQueryRepl.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteUpdateQueryRepl)
}

::google::protobuf::uint8* ExecuteUpdateQueryRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteUpdateQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errono(), target);
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lineno(), target);
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->colno(), target);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteUpdateQueryRepl.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteUpdateQueryRepl)
  return target;
}

int ExecuteUpdateQueryRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errono());
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineno());
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colno());
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteUpdateQueryRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteUpdateQueryRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteUpdateQueryRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteUpdateQueryRepl::MergeFrom(const ExecuteUpdateQueryRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.errono() != 0) {
    set_errono(from.errono());
  }
  if (from.lineno() != 0) {
    set_lineno(from.lineno());
  }
  if (from.colno() != 0) {
    set_colno(from.colno());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ExecuteUpdateQueryRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteUpdateQueryRepl::CopyFrom(const ExecuteUpdateQueryRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteUpdateQueryRepl::IsInitialized() const {

  return true;
}

void ExecuteUpdateQueryRepl::Swap(ExecuteUpdateQueryRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteUpdateQueryRepl::InternalSwap(ExecuteUpdateQueryRepl* other) {
  std::swap(status_, other->status_);
  std::swap(errono_, other->errono_);
  std::swap(lineno_, other->lineno_);
  std::swap(colno_, other->colno_);
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteUpdateQueryRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteUpdateQueryRepl_descriptor_;
  metadata.reflection = ExecuteUpdateQueryRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteUpdateQueryRepl

// optional int32 status = 1;
void ExecuteUpdateQueryRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 ExecuteUpdateQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.status)
  return status_;
}
 void ExecuteUpdateQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.status)
}

// optional int32 erroNo = 2;
void ExecuteUpdateQueryRepl::clear_errono() {
  errono_ = 0;
}
 ::google::protobuf::int32 ExecuteUpdateQueryRepl::errono() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.erroNo)
  return errono_;
}
 void ExecuteUpdateQueryRepl::set_errono(::google::protobuf::int32 value) {
  
  errono_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.erroNo)
}

// optional int32 lineNo = 3;
void ExecuteUpdateQueryRepl::clear_lineno() {
  lineno_ = 0;
}
 ::google::protobuf::int32 ExecuteUpdateQueryRepl::lineno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.lineNo)
  return lineno_;
}
 void ExecuteUpdateQueryRepl::set_lineno(::google::protobuf::int32 value) {
  
  lineno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.lineNo)
}

// optional int32 colNo = 4;
void ExecuteUpdateQueryRepl::clear_colno() {
  colno_ = 0;
}
 ::google::protobuf::int32 ExecuteUpdateQueryRepl::colno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.colNo)
  return colno_;
}
 void ExecuteUpdateQueryRepl::set_colno(::google::protobuf::int32 value) {
  
  colno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.colNo)
}

// optional string token = 5;
void ExecuteUpdateQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteUpdateQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteUpdateQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.token)
}
 void ExecuteUpdateQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteUpdateQueryRepl.token)
}
 void ExecuteUpdateQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteUpdateQueryRepl.token)
}
 ::std::string* ExecuteUpdateQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteUpdateQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteUpdateQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteUpdateQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteUpdateQueryRepl.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteInsertQueryReq::kClientIdFieldNumber;
const int ExecuteInsertQueryReq::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteInsertQueryReq::ExecuteInsertQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteInsertQueryReq)
}

void ExecuteInsertQueryReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteInsertQueryReq::ExecuteInsertQueryReq(const ExecuteInsertQueryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteInsertQueryReq)
}

void ExecuteInsertQueryReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteInsertQueryReq::~ExecuteInsertQueryReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteInsertQueryReq)
  SharedDtor();
}

void ExecuteInsertQueryReq::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteInsertQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteInsertQueryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteInsertQueryReq_descriptor_;
}

const ExecuteInsertQueryReq& ExecuteInsertQueryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteInsertQueryReq* ExecuteInsertQueryReq::default_instance_ = NULL;

ExecuteInsertQueryReq* ExecuteInsertQueryReq::New(::google::protobuf::Arena* arena) const {
  ExecuteInsertQueryReq* n = new ExecuteInsertQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteInsertQueryReq::Clear() {
  client_id_ = 0;
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ExecuteInsertQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteInsertQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_query;
        break;
      }

      // optional string query = 2;
      case 2: {
        if (tag == 18) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteInsertQueryReq.query"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteInsertQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteInsertQueryReq)
  return false;
#undef DO_
}

void ExecuteInsertQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteInsertQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryReq.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteInsertQueryReq)
}

::google::protobuf::uint8* ExecuteInsertQueryReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteInsertQueryReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryReq.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteInsertQueryReq)
  return target;
}

int ExecuteInsertQueryReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteInsertQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteInsertQueryReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteInsertQueryReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteInsertQueryReq::MergeFrom(const ExecuteInsertQueryReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
}

void ExecuteInsertQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteInsertQueryReq::CopyFrom(const ExecuteInsertQueryReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteInsertQueryReq::IsInitialized() const {

  return true;
}

void ExecuteInsertQueryReq::Swap(ExecuteInsertQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteInsertQueryReq::InternalSwap(ExecuteInsertQueryReq* other) {
  std::swap(client_id_, other->client_id_);
  query_.Swap(&other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteInsertQueryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteInsertQueryReq_descriptor_;
  metadata.reflection = ExecuteInsertQueryReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteInsertQueryReq

// optional int32 client_id = 1;
void ExecuteInsertQueryReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 ExecuteInsertQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryReq.client_id)
  return client_id_;
}
 void ExecuteInsertQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryReq.client_id)
}

// optional string query = 2;
void ExecuteInsertQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteInsertQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryReq.query)
}
 void ExecuteInsertQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryReq.query)
}
 void ExecuteInsertQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryReq.query)
}
 ::std::string* ExecuteInsertQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteInsertQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryReq.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteInsertQueryRepl::kStatusFieldNumber;
const int ExecuteInsertQueryRepl::kErroNoFieldNumber;
const int ExecuteInsertQueryRepl::kLineNoFieldNumber;
const int ExecuteInsertQueryRepl::kColNoFieldNumber;
const int ExecuteInsertQueryRepl::kTokenFieldNumber;
const int ExecuteInsertQueryRepl::kTypeNameFieldNumber;
const int ExecuteInsertQueryRepl::kTypeStructureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteInsertQueryRepl::ExecuteInsertQueryRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ExecuteInsertQueryRepl)
}

void ExecuteInsertQueryRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExecuteInsertQueryRepl::ExecuteInsertQueryRepl(const ExecuteInsertQueryRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ExecuteInsertQueryRepl)
}

void ExecuteInsertQueryRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  errono_ = 0;
  lineno_ = 0;
  colno_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ExecuteInsertQueryRepl::~ExecuteInsertQueryRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.ExecuteInsertQueryRepl)
  SharedDtor();
}

void ExecuteInsertQueryRepl::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExecuteInsertQueryRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteInsertQueryRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecuteInsertQueryRepl_descriptor_;
}

const ExecuteInsertQueryRepl& ExecuteInsertQueryRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

ExecuteInsertQueryRepl* ExecuteInsertQueryRepl::default_instance_ = NULL;

ExecuteInsertQueryRepl* ExecuteInsertQueryRepl::New(::google::protobuf::Arena* arena) const {
  ExecuteInsertQueryRepl* n = new ExecuteInsertQueryRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteInsertQueryRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExecuteInsertQueryRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, colno_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ExecuteInsertQueryRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ExecuteInsertQueryRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_erroNo;
        break;
      }

      // optional int32 erroNo = 2;
      case 2: {
        if (tag == 16) {
         parse_erroNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errono_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lineNo;
        break;
      }

      // optional int32 lineNo = 3;
      case 3: {
        if (tag == 24) {
         parse_lineNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_colNo;
        break;
      }

      // optional int32 colNo = 4;
      case 4: {
        if (tag == 32) {
         parse_colNo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colno_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_token;
        break;
      }

      // optional string token = 5;
      case 5: {
        if (tag == 42) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteInsertQueryRepl.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_type_name;
        break;
      }

      // optional string type_name = 6;
      case 6: {
        if (tag == 50) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteInsertQueryRepl.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 7;
      case 7: {
        if (tag == 58) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ExecuteInsertQueryRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ExecuteInsertQueryRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ExecuteInsertQueryRepl)
  return false;
#undef DO_
}

void ExecuteInsertQueryRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ExecuteInsertQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errono(), output);
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lineno(), output);
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->colno(), output);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type_name(), output);
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->type_structure(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ExecuteInsertQueryRepl)
}

::google::protobuf::uint8* ExecuteInsertQueryRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ExecuteInsertQueryRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errono(), target);
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lineno(), target);
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->colno(), target);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type_name(), target);
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ExecuteInsertQueryRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->type_structure(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ExecuteInsertQueryRepl)
  return target;
}

int ExecuteInsertQueryRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 erroNo = 2;
  if (this->errono() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errono());
  }

  // optional int32 lineNo = 3;
  if (this->lineno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineno());
  }

  // optional int32 colNo = 4;
  if (this->colno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colno());
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional string type_name = 6;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional string type_structure = 7;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteInsertQueryRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExecuteInsertQueryRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteInsertQueryRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecuteInsertQueryRepl::MergeFrom(const ExecuteInsertQueryRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.errono() != 0) {
    set_errono(from.errono());
  }
  if (from.lineno() != 0) {
    set_lineno(from.lineno());
  }
  if (from.colno() != 0) {
    set_colno(from.colno());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
}

void ExecuteInsertQueryRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteInsertQueryRepl::CopyFrom(const ExecuteInsertQueryRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteInsertQueryRepl::IsInitialized() const {

  return true;
}

void ExecuteInsertQueryRepl::Swap(ExecuteInsertQueryRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteInsertQueryRepl::InternalSwap(ExecuteInsertQueryRepl* other) {
  std::swap(status_, other->status_);
  std::swap(errono_, other->errono_);
  std::swap(lineno_, other->lineno_);
  std::swap(colno_, other->colno_);
  token_.Swap(&other->token_);
  type_name_.Swap(&other->type_name_);
  type_structure_.Swap(&other->type_structure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteInsertQueryRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecuteInsertQueryRepl_descriptor_;
  metadata.reflection = ExecuteInsertQueryRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteInsertQueryRepl

// optional int32 status = 1;
void ExecuteInsertQueryRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 ExecuteInsertQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.status)
  return status_;
}
 void ExecuteInsertQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.status)
}

// optional int32 erroNo = 2;
void ExecuteInsertQueryRepl::clear_errono() {
  errono_ = 0;
}
 ::google::protobuf::int32 ExecuteInsertQueryRepl::errono() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.erroNo)
  return errono_;
}
 void ExecuteInsertQueryRepl::set_errono(::google::protobuf::int32 value) {
  
  errono_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.erroNo)
}

// optional int32 lineNo = 3;
void ExecuteInsertQueryRepl::clear_lineno() {
  lineno_ = 0;
}
 ::google::protobuf::int32 ExecuteInsertQueryRepl::lineno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.lineNo)
  return lineno_;
}
 void ExecuteInsertQueryRepl::set_lineno(::google::protobuf::int32 value) {
  
  lineno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.lineNo)
}

// optional int32 colNo = 4;
void ExecuteInsertQueryRepl::clear_colno() {
  colno_ = 0;
}
 ::google::protobuf::int32 ExecuteInsertQueryRepl::colno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.colNo)
  return colno_;
}
 void ExecuteInsertQueryRepl::set_colno(::google::protobuf::int32 value) {
  
  colno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.colNo)
}

// optional string token = 5;
void ExecuteInsertQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteInsertQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.token)
}
 void ExecuteInsertQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.token)
}
 void ExecuteInsertQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.token)
}
 ::std::string* ExecuteInsertQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteInsertQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.token)
}

// optional string type_name = 6;
void ExecuteInsertQueryRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteInsertQueryRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
 void ExecuteInsertQueryRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
 void ExecuteInsertQueryRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
 ::std::string* ExecuteInsertQueryRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteInsertQueryRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.type_name)
}

// optional string type_structure = 7;
void ExecuteInsertQueryRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ExecuteInsertQueryRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
 void ExecuteInsertQueryRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
 void ExecuteInsertQueryRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
 ::std::string* ExecuteInsertQueryRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExecuteInsertQueryRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExecuteInsertQueryRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNewOidReq::kClientIdFieldNumber;
const int GetNewOidReq::kObjectTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNewOidReq::GetNewOidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNewOidReq)
}

void GetNewOidReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNewOidReq::GetNewOidReq(const GetNewOidReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNewOidReq)
}

void GetNewOidReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_id_ = 0;
  object_type_ = 0;
}

GetNewOidReq::~GetNewOidReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNewOidReq)
  SharedDtor();
}

void GetNewOidReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNewOidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewOidReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewOidReq_descriptor_;
}

const GetNewOidReq& GetNewOidReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNewOidReq* GetNewOidReq::default_instance_ = NULL;

GetNewOidReq* GetNewOidReq::New(::google::protobuf::Arena* arena) const {
  GetNewOidReq* n = new GetNewOidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNewOidReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetNewOidReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, object_type_);

#undef ZR_HELPER_
#undef ZR_

}

bool GetNewOidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNewOidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_object_type;
        break;
      }

      // optional int32 object_type = 2;
      case 2: {
        if (tag == 16) {
         parse_object_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNewOidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNewOidReq)
  return false;
#undef DO_
}

void GetNewOidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNewOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->object_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNewOidReq)
}

::google::protobuf::uint8* GetNewOidReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNewOidReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->object_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNewOidReq)
  return target;
}

int GetNewOidReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewOidReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNewOidReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNewOidReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewOidReq::MergeFrom(const GetNewOidReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.object_type() != 0) {
    set_object_type(from.object_type());
  }
}

void GetNewOidReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewOidReq::CopyFrom(const GetNewOidReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewOidReq::IsInitialized() const {

  return true;
}

void GetNewOidReq::Swap(GetNewOidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNewOidReq::InternalSwap(GetNewOidReq* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(object_type_, other->object_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNewOidReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewOidReq_descriptor_;
  metadata.reflection = GetNewOidReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNewOidReq

// optional int32 client_id = 1;
void GetNewOidReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetNewOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidReq.client_id)
  return client_id_;
}
 void GetNewOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidReq.client_id)
}

// optional int32 object_type = 2;
void GetNewOidReq::clear_object_type() {
  object_type_ = 0;
}
 ::google::protobuf::int32 GetNewOidReq::object_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidReq.object_type)
  return object_type_;
}
 void GetNewOidReq::set_object_type(::google::protobuf::int32 value) {
  
  object_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidReq.object_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNewOidRepl::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNewOidRepl::GetNewOidRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetNewOidRepl)
}

void GetNewOidRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNewOidRepl::GetNewOidRepl(const GetNewOidRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetNewOidRepl)
}

void GetNewOidRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNewOidRepl::~GetNewOidRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetNewOidRepl)
  SharedDtor();
}

void GetNewOidRepl::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNewOidRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewOidRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewOidRepl_descriptor_;
}

const GetNewOidRepl& GetNewOidRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetNewOidRepl* GetNewOidRepl::default_instance_ = NULL;

GetNewOidRepl* GetNewOidRepl::New(::google::protobuf::Arena* arena) const {
  GetNewOidRepl* n = new GetNewOidRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNewOidRepl::Clear() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetNewOidRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetNewOidRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string oid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetNewOidRepl.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetNewOidRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetNewOidRepl)
  return false;
#undef DO_
}

void GetNewOidRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetNewOidRepl)
  // optional string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNewOidRepl.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetNewOidRepl)
}

::google::protobuf::uint8* GetNewOidRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetNewOidRepl)
  // optional string oid = 1;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetNewOidRepl.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetNewOidRepl)
  return target;
}

int GetNewOidRepl::ByteSize() const {
  int total_size = 0;

  // optional string oid = 1;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewOidRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetNewOidRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNewOidRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewOidRepl::MergeFrom(const GetNewOidRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void GetNewOidRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewOidRepl::CopyFrom(const GetNewOidRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewOidRepl::IsInitialized() const {

  return true;
}

void GetNewOidRepl::Swap(GetNewOidRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNewOidRepl::InternalSwap(GetNewOidRepl* other) {
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNewOidRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewOidRepl_descriptor_;
  metadata.reflection = GetNewOidRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNewOidRepl

// optional string oid = 1;
void GetNewOidRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNewOidRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNewOidRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidRepl.oid)
}
 void GetNewOidRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNewOidRepl.oid)
}
 void GetNewOidRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNewOidRepl.oid)
}
 ::std::string* GetNewOidRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNewOidRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNewOidRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNewOidRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNewOidRepl.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetObjectTypeReq::kClientIdFieldNumber;
const int GetObjectTypeReq::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetObjectTypeReq::GetObjectTypeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetObjectTypeReq)
}

void GetObjectTypeReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetObjectTypeReq::GetObjectTypeReq(const GetObjectTypeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetObjectTypeReq)
}

void GetObjectTypeReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetObjectTypeReq::~GetObjectTypeReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetObjectTypeReq)
  SharedDtor();
}

void GetObjectTypeReq::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetObjectTypeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetObjectTypeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetObjectTypeReq_descriptor_;
}

const GetObjectTypeReq& GetObjectTypeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetObjectTypeReq* GetObjectTypeReq::default_instance_ = NULL;

GetObjectTypeReq* GetObjectTypeReq::New(::google::protobuf::Arena* arena) const {
  GetObjectTypeReq* n = new GetObjectTypeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetObjectTypeReq::Clear() {
  client_id_ = 0;
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetObjectTypeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetObjectTypeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_oid;
        break;
      }

      // optional string oid = 2;
      case 2: {
        if (tag == 18) {
         parse_oid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oid().data(), this->oid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetObjectTypeReq.oid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetObjectTypeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetObjectTypeReq)
  return false;
#undef DO_
}

void GetObjectTypeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetObjectTypeReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetObjectTypeReq.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oid(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetObjectTypeReq)
}

::google::protobuf::uint8* GetObjectTypeReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetObjectTypeReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oid().data(), this->oid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetObjectTypeReq.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetObjectTypeReq)
  return target;
}

int GetObjectTypeReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string oid = 2;
  if (this->oid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetObjectTypeReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetObjectTypeReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetObjectTypeReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetObjectTypeReq::MergeFrom(const GetObjectTypeReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.oid().size() > 0) {

    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
}

void GetObjectTypeReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectTypeReq::CopyFrom(const GetObjectTypeReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectTypeReq::IsInitialized() const {

  return true;
}

void GetObjectTypeReq::Swap(GetObjectTypeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetObjectTypeReq::InternalSwap(GetObjectTypeReq* other) {
  std::swap(client_id_, other->client_id_);
  oid_.Swap(&other->oid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetObjectTypeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetObjectTypeReq_descriptor_;
  metadata.reflection = GetObjectTypeReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetObjectTypeReq

// optional int32 client_id = 1;
void GetObjectTypeReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetObjectTypeReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeReq.client_id)
  return client_id_;
}
 void GetObjectTypeReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeReq.client_id)
}

// optional string oid = 2;
void GetObjectTypeReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetObjectTypeReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetObjectTypeReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeReq.oid)
}
 void GetObjectTypeReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetObjectTypeReq.oid)
}
 void GetObjectTypeReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetObjectTypeReq.oid)
}
 ::std::string* GetObjectTypeReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetObjectTypeReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetObjectTypeReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetObjectTypeReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetObjectTypeReq.oid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetObjectTypeRepl::kStatusFieldNumber;
const int GetObjectTypeRepl::kObjectTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetObjectTypeRepl::GetObjectTypeRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetObjectTypeRepl)
}

void GetObjectTypeRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetObjectTypeRepl::GetObjectTypeRepl(const GetObjectTypeRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetObjectTypeRepl)
}

void GetObjectTypeRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
  object_type_ = 0;
}

GetObjectTypeRepl::~GetObjectTypeRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetObjectTypeRepl)
  SharedDtor();
}

void GetObjectTypeRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetObjectTypeRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetObjectTypeRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetObjectTypeRepl_descriptor_;
}

const GetObjectTypeRepl& GetObjectTypeRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetObjectTypeRepl* GetObjectTypeRepl::default_instance_ = NULL;

GetObjectTypeRepl* GetObjectTypeRepl::New(::google::protobuf::Arena* arena) const {
  GetObjectTypeRepl* n = new GetObjectTypeRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetObjectTypeRepl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetObjectTypeRepl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, object_type_);

#undef ZR_HELPER_
#undef ZR_

}

bool GetObjectTypeRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetObjectTypeRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_object_type;
        break;
      }

      // optional int32 object_type = 2;
      case 2: {
        if (tag == 16) {
         parse_object_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetObjectTypeRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetObjectTypeRepl)
  return false;
#undef DO_
}

void GetObjectTypeRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetObjectTypeRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->object_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetObjectTypeRepl)
}

::google::protobuf::uint8* GetObjectTypeRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetObjectTypeRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->object_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetObjectTypeRepl)
  return target;
}

int GetObjectTypeRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 object_type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetObjectTypeRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetObjectTypeRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetObjectTypeRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetObjectTypeRepl::MergeFrom(const GetObjectTypeRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.object_type() != 0) {
    set_object_type(from.object_type());
  }
}

void GetObjectTypeRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectTypeRepl::CopyFrom(const GetObjectTypeRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectTypeRepl::IsInitialized() const {

  return true;
}

void GetObjectTypeRepl::Swap(GetObjectTypeRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetObjectTypeRepl::InternalSwap(GetObjectTypeRepl* other) {
  std::swap(status_, other->status_);
  std::swap(object_type_, other->object_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetObjectTypeRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetObjectTypeRepl_descriptor_;
  metadata.reflection = GetObjectTypeRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetObjectTypeRepl

// optional int32 status = 1;
void GetObjectTypeRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetObjectTypeRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeRepl.status)
  return status_;
}
 void GetObjectTypeRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeRepl.status)
}

// optional int32 object_type = 2;
void GetObjectTypeRepl::clear_object_type() {
  object_type_ = 0;
}
 ::google::protobuf::int32 GetObjectTypeRepl::object_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeRepl.object_type)
  return object_type_;
}
 void GetObjectTypeRepl::set_object_type(::google::protobuf::int32 value) {
  
  object_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeRepl.object_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTypeStructureReq::kClientIdFieldNumber;
const int GetTypeStructureReq::kTypeNameFieldNumber;
const int GetTypeStructureReq::kTypeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTypeStructureReq::GetTypeStructureReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetTypeStructureReq)
}

void GetTypeStructureReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetTypeStructureReq::GetTypeStructureReq(const GetTypeStructureReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetTypeStructureReq)
}

void GetTypeStructureReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_type_ = 0;
}

GetTypeStructureReq::~GetTypeStructureReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetTypeStructureReq)
  SharedDtor();
}

void GetTypeStructureReq::SharedDtor() {
  type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetTypeStructureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTypeStructureReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTypeStructureReq_descriptor_;
}

const GetTypeStructureReq& GetTypeStructureReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetTypeStructureReq* GetTypeStructureReq::default_instance_ = NULL;

GetTypeStructureReq* GetTypeStructureReq::New(::google::protobuf::Arena* arena) const {
  GetTypeStructureReq* n = new GetTypeStructureReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTypeStructureReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetTypeStructureReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, type_type_);
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetTypeStructureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetTypeStructureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_name;
        break;
      }

      // optional string type_name = 2;
      case 2: {
        if (tag == 18) {
         parse_type_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_name().data(), this->type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetTypeStructureReq.type_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type_type;
        break;
      }

      // optional int32 type_type = 3;
      case 3: {
        if (tag == 24) {
         parse_type_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetTypeStructureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetTypeStructureReq)
  return false;
#undef DO_
}

void GetTypeStructureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetTypeStructureReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetTypeStructureReq.type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_name(), output);
  }

  // optional int32 type_type = 3;
  if (this->type_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetTypeStructureReq)
}

::google::protobuf::uint8* GetTypeStructureReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetTypeStructureReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_name().data(), this->type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetTypeStructureReq.type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_name(), target);
  }

  // optional int32 type_type = 3;
  if (this->type_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetTypeStructureReq)
  return target;
}

int GetTypeStructureReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional string type_name = 2;
  if (this->type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_name());
  }

  // optional int32 type_type = 3;
  if (this->type_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTypeStructureReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetTypeStructureReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTypeStructureReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetTypeStructureReq::MergeFrom(const GetTypeStructureReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.type_name().size() > 0) {

    type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_name_);
  }
  if (from.type_type() != 0) {
    set_type_type(from.type_type());
  }
}

void GetTypeStructureReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTypeStructureReq::CopyFrom(const GetTypeStructureReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTypeStructureReq::IsInitialized() const {

  return true;
}

void GetTypeStructureReq::Swap(GetTypeStructureReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTypeStructureReq::InternalSwap(GetTypeStructureReq* other) {
  std::swap(client_id_, other->client_id_);
  type_name_.Swap(&other->type_name_);
  std::swap(type_type_, other->type_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTypeStructureReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTypeStructureReq_descriptor_;
  metadata.reflection = GetTypeStructureReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTypeStructureReq

// optional int32 client_id = 1;
void GetTypeStructureReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 GetTypeStructureReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.client_id)
  return client_id_;
}
 void GetTypeStructureReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.client_id)
}

// optional string type_name = 2;
void GetTypeStructureReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetTypeStructureReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTypeStructureReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.type_name)
}
 void GetTypeStructureReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetTypeStructureReq.type_name)
}
 void GetTypeStructureReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetTypeStructureReq.type_name)
}
 ::std::string* GetTypeStructureReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetTypeStructureReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetTypeStructureReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTypeStructureReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetTypeStructureReq.type_name)
}

// optional int32 type_type = 3;
void GetTypeStructureReq::clear_type_type() {
  type_type_ = 0;
}
 ::google::protobuf::int32 GetTypeStructureReq::type_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.type_type)
  return type_type_;
}
 void GetTypeStructureReq::set_type_type(::google::protobuf::int32 value) {
  
  type_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.type_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTypeStructureRepl::kStatusFieldNumber;
const int GetTypeStructureRepl::kTypeStructureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTypeStructureRepl::GetTypeStructureRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.GetTypeStructureRepl)
}

void GetTypeStructureRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetTypeStructureRepl::GetTypeStructureRepl(const GetTypeStructureRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.GetTypeStructureRepl)
}

void GetTypeStructureRepl::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  type_structure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTypeStructureRepl::~GetTypeStructureRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.GetTypeStructureRepl)
  SharedDtor();
}

void GetTypeStructureRepl::SharedDtor() {
  type_structure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetTypeStructureRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTypeStructureRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTypeStructureRepl_descriptor_;
}

const GetTypeStructureRepl& GetTypeStructureRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

GetTypeStructureRepl* GetTypeStructureRepl::default_instance_ = NULL;

GetTypeStructureRepl* GetTypeStructureRepl::New(::google::protobuf::Arena* arena) const {
  GetTypeStructureRepl* n = new GetTypeStructureRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTypeStructureRepl::Clear() {
  status_ = 0;
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetTypeStructureRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.GetTypeStructureRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type_structure;
        break;
      }

      // optional string type_structure = 2;
      case 2: {
        if (tag == 18) {
         parse_type_structure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_structure()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_structure().data(), this->type_structure().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.GetTypeStructureRepl.type_structure"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.GetTypeStructureRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.GetTypeStructureRepl)
  return false;
#undef DO_
}

void GetTypeStructureRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.GetTypeStructureRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetTypeStructureRepl.type_structure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_structure(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.GetTypeStructureRepl)
}

::google::protobuf::uint8* GetTypeStructureRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.GetTypeStructureRepl)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_structure().data(), this->type_structure().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.GetTypeStructureRepl.type_structure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_structure(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.GetTypeStructureRepl)
  return target;
}

int GetTypeStructureRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string type_structure = 2;
  if (this->type_structure().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_structure());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTypeStructureRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetTypeStructureRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTypeStructureRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetTypeStructureRepl::MergeFrom(const GetTypeStructureRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.type_structure().size() > 0) {

    type_structure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_structure_);
  }
}

void GetTypeStructureRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTypeStructureRepl::CopyFrom(const GetTypeStructureRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTypeStructureRepl::IsInitialized() const {

  return true;
}

void GetTypeStructureRepl::Swap(GetTypeStructureRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTypeStructureRepl::InternalSwap(GetTypeStructureRepl* other) {
  std::swap(status_, other->status_);
  type_structure_.Swap(&other->type_structure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTypeStructureRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTypeStructureRepl_descriptor_;
  metadata.reflection = GetTypeStructureRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTypeStructureRepl

// optional int32 status = 1;
void GetTypeStructureRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 GetTypeStructureRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureRepl.status)
  return status_;
}
 void GetTypeStructureRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureRepl.status)
}

// optional string type_structure = 2;
void GetTypeStructureRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetTypeStructureRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTypeStructureRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureRepl.type_structure)
}
 void GetTypeStructureRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetTypeStructureRepl.type_structure)
}
 void GetTypeStructureRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetTypeStructureRepl.type_structure)
}
 ::std::string* GetTypeStructureRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetTypeStructureRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetTypeStructureRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetTypeStructureRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetTypeStructureRepl.type_structure)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFormatReq::kClientIdFieldNumber;
const int SetFormatReq::kTransferFormatFieldNumber;
const int SetFormatReq::kFormatFieldNumber;
const int SetFormatReq::kFormatParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFormatReq::SetFormatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.SetFormatReq)
}

void SetFormatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetFormatReq::SetFormatReq(const SetFormatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.SetFormatReq)
}

void SetFormatReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_id_ = 0;
  transfer_format_ = 0;
  format_ = 0;
  format_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetFormatReq::~SetFormatReq() {
  // @@protoc_insertion_point(destructor:rasnet.service.SetFormatReq)
  SharedDtor();
}

void SetFormatReq::SharedDtor() {
  format_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SetFormatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFormatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFormatReq_descriptor_;
}

const SetFormatReq& SetFormatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

SetFormatReq* SetFormatReq::default_instance_ = NULL;

SetFormatReq* SetFormatReq::New(::google::protobuf::Arena* arena) const {
  SetFormatReq* n = new SetFormatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFormatReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetFormatReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(client_id_, transfer_format_);
  format_ = 0;
  format_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SetFormatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.SetFormatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_transfer_format;
        break;
      }

      // optional int32 transfer_format = 2;
      case 2: {
        if (tag == 16) {
         parse_transfer_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_format;
        break;
      }

      // optional int32 format = 3;
      case 3: {
        if (tag == 24) {
         parse_format:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_format_params;
        break;
      }

      // optional string format_params = 4;
      case 4: {
        if (tag == 34) {
         parse_format_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format_params().data(), this->format_params().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.SetFormatReq.format_params"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.SetFormatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.SetFormatReq)
  return false;
#undef DO_
}

void SetFormatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.SetFormatReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_id(), output);
  }

  // optional int32 transfer_format = 2;
  if (this->transfer_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->transfer_format(), output);
  }

  // optional int32 format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->format(), output);
  }

  // optional string format_params = 4;
  if (this->format_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format_params().data(), this->format_params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.SetFormatReq.format_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->format_params(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.SetFormatReq)
}

::google::protobuf::uint8* SetFormatReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.SetFormatReq)
  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_id(), target);
  }

  // optional int32 transfer_format = 2;
  if (this->transfer_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->transfer_format(), target);
  }

  // optional int32 format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->format(), target);
  }

  // optional string format_params = 4;
  if (this->format_params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format_params().data(), this->format_params().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.SetFormatReq.format_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->format_params(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.SetFormatReq)
  return target;
}

int SetFormatReq::ByteSize() const {
  int total_size = 0;

  // optional int32 client_id = 1;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // optional int32 transfer_format = 2;
  if (this->transfer_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transfer_format());
  }

  // optional int32 format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->format());
  }

  // optional string format_params = 4;
  if (this->format_params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format_params());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFormatReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetFormatReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFormatReq>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFormatReq::MergeFrom(const SetFormatReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.transfer_format() != 0) {
    set_transfer_format(from.transfer_format());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  if (from.format_params().size() > 0) {

    format_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_params_);
  }
}

void SetFormatReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFormatReq::CopyFrom(const SetFormatReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFormatReq::IsInitialized() const {

  return true;
}

void SetFormatReq::Swap(SetFormatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFormatReq::InternalSwap(SetFormatReq* other) {
  std::swap(client_id_, other->client_id_);
  std::swap(transfer_format_, other->transfer_format_);
  std::swap(format_, other->format_);
  format_params_.Swap(&other->format_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFormatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFormatReq_descriptor_;
  metadata.reflection = SetFormatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFormatReq

// optional int32 client_id = 1;
void SetFormatReq::clear_client_id() {
  client_id_ = 0;
}
 ::google::protobuf::int32 SetFormatReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.client_id)
  return client_id_;
}
 void SetFormatReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.client_id)
}

// optional int32 transfer_format = 2;
void SetFormatReq::clear_transfer_format() {
  transfer_format_ = 0;
}
 ::google::protobuf::int32 SetFormatReq::transfer_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.transfer_format)
  return transfer_format_;
}
 void SetFormatReq::set_transfer_format(::google::protobuf::int32 value) {
  
  transfer_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.transfer_format)
}

// optional int32 format = 3;
void SetFormatReq::clear_format() {
  format_ = 0;
}
 ::google::protobuf::int32 SetFormatReq::format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.format)
  return format_;
}
 void SetFormatReq::set_format(::google::protobuf::int32 value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.format)
}

// optional string format_params = 4;
void SetFormatReq::clear_format_params() {
  format_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SetFormatReq::format_params() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.format_params)
  return format_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SetFormatReq::set_format_params(const ::std::string& value) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.format_params)
}
 void SetFormatReq::set_format_params(const char* value) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.SetFormatReq.format_params)
}
 void SetFormatReq::set_format_params(const char* value, size_t size) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.SetFormatReq.format_params)
}
 ::std::string* SetFormatReq::mutable_format_params() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.SetFormatReq.format_params)
  return format_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SetFormatReq::release_format_params() {
  
  return format_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SetFormatReq::set_allocated_format_params(::std::string* format_params) {
  if (format_params != NULL) {
    
  } else {
    
  }
  format_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format_params);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.SetFormatReq.format_params)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFormatRepl::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFormatRepl::SetFormatRepl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.SetFormatRepl)
}

void SetFormatRepl::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetFormatRepl::SetFormatRepl(const SetFormatRepl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.SetFormatRepl)
}

void SetFormatRepl::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

SetFormatRepl::~SetFormatRepl() {
  // @@protoc_insertion_point(destructor:rasnet.service.SetFormatRepl)
  SharedDtor();
}

void SetFormatRepl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFormatRepl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFormatRepl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFormatRepl_descriptor_;
}

const SetFormatRepl& SetFormatRepl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

SetFormatRepl* SetFormatRepl::default_instance_ = NULL;

SetFormatRepl* SetFormatRepl::New(::google::protobuf::Arena* arena) const {
  SetFormatRepl* n = new SetFormatRepl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFormatRepl::Clear() {
  status_ = 0;
}

bool SetFormatRepl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.SetFormatRepl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.SetFormatRepl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.SetFormatRepl)
  return false;
#undef DO_
}

void SetFormatRepl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.SetFormatRepl)
  // optional int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.SetFormatRepl)
}

::google::protobuf::uint8* SetFormatRepl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.SetFormatRepl)
  // optional int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.SetFormatRepl)
  return target;
}

int SetFormatRepl::ByteSize() const {
  int total_size = 0;

  // optional int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFormatRepl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetFormatRepl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFormatRepl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFormatRepl::MergeFrom(const SetFormatRepl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void SetFormatRepl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFormatRepl::CopyFrom(const SetFormatRepl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFormatRepl::IsInitialized() const {

  return true;
}

void SetFormatRepl::Swap(SetFormatRepl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFormatRepl::InternalSwap(SetFormatRepl* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFormatRepl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFormatRepl_descriptor_;
  metadata.reflection = SetFormatRepl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetFormatRepl

// optional int32 status = 2;
void SetFormatRepl::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 SetFormatRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatRepl.status)
  return status_;
}
 void SetFormatRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatRepl.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeepAliveRequest::kClientUuidFieldNumber;
const int KeepAliveRequest::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveRequest::KeepAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.KeepAliveRequest)
}

void KeepAliveRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

KeepAliveRequest::KeepAliveRequest(const KeepAliveRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.KeepAliveRequest)
}

void KeepAliveRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeepAliveRequest::~KeepAliveRequest() {
  // @@protoc_insertion_point(destructor:rasnet.service.KeepAliveRequest)
  SharedDtor();
}

void KeepAliveRequest::SharedDtor() {
  client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void KeepAliveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeepAliveRequest_descriptor_;
}

const KeepAliveRequest& KeepAliveRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  return *default_instance_;
}

KeepAliveRequest* KeepAliveRequest::default_instance_ = NULL;

KeepAliveRequest* KeepAliveRequest::New(::google::protobuf::Arena* arena) const {
  KeepAliveRequest* n = new KeepAliveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveRequest::Clear() {
  client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool KeepAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.KeepAliveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client_uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_uuid().data(), this->client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.KeepAliveRequest.client_uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_session_id;
        break;
      }

      // optional string session_id = 2;
      case 2: {
        if (tag == 18) {
         parse_session_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), this->session_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.KeepAliveRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.KeepAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.KeepAliveRequest)
  return false;
#undef DO_
}

void KeepAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.KeepAliveRequest)
  // optional string client_uuid = 1;
  if (this->client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_uuid().data(), this->client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.KeepAliveRequest.client_uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->client_uuid(), output);
  }

  // optional string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.KeepAliveRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.KeepAliveRequest)
}

::google::protobuf::uint8* KeepAliveRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.KeepAliveRequest)
  // optional string client_uuid = 1;
  if (this->client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_uuid().data(), this->client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.KeepAliveRequest.client_uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->client_uuid(), target);
  }

  // optional string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.KeepAliveRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.KeepAliveRequest)
  return target;
}

int KeepAliveRequest::ByteSize() const {
  int total_size = 0;

  // optional string client_uuid = 1;
  if (this->client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_uuid());
  }

  // optional string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeepAliveRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KeepAliveRequest::MergeFrom(const KeepAliveRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_uuid().size() > 0) {

    client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_uuid_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void KeepAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveRequest::CopyFrom(const KeepAliveRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveRequest::IsInitialized() const {

  return true;
}

void KeepAliveRequest::Swap(KeepAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveRequest::InternalSwap(KeepAliveRequest* other) {
  client_uuid_.Swap(&other->client_uuid_);
  session_id_.Swap(&other->session_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeepAliveRequest_descriptor_;
  metadata.reflection = KeepAliveRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveRequest

// optional string client_uuid = 1;
void KeepAliveRequest::clear_client_uuid() {
  client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeepAliveRequest::client_uuid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.KeepAliveRequest.client_uuid)
  return client_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeepAliveRequest::set_client_uuid(const ::std::string& value) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.KeepAliveRequest.client_uuid)
}
 void KeepAliveRequest::set_client_uuid(const char* value) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.KeepAliveRequest.client_uuid)
}
 void KeepAliveRequest::set_client_uuid(const char* value, size_t size) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.KeepAliveRequest.client_uuid)
}
 ::std::string* KeepAliveRequest::mutable_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.KeepAliveRequest.client_uuid)
  return client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeepAliveRequest::release_client_uuid() {
  
  return client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeepAliveRequest::set_allocated_client_uuid(::std::string* client_uuid) {
  if (client_uuid != NULL) {
    
  } else {
    
  }
  client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_uuid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.KeepAliveRequest.client_uuid)
}

// optional string session_id = 2;
void KeepAliveRequest::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& KeepAliveRequest::session_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.KeepAliveRequest.session_id)
  return session_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeepAliveRequest::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.KeepAliveRequest.session_id)
}
 void KeepAliveRequest::set_session_id(const char* value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.KeepAliveRequest.session_id)
}
 void KeepAliveRequest::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.KeepAliveRequest.session_id)
}
 ::std::string* KeepAliveRequest::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.KeepAliveRequest.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* KeepAliveRequest::release_session_id() {
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void KeepAliveRequest::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.KeepAliveRequest.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace rasnet

// @@protoc_insertion_point(global_scope)
