// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_rassrvr_service.proto

#ifndef PROTOBUF_client_5frassrvr_5fservice_2eproto__INCLUDED
#define PROTOBUF_client_5frassrvr_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_service.pb.h"
// @@protoc_insertion_point(includes)

namespace rasnet {
namespace service {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

class AbortTransactionRepl;
class AbortTransactionReq;
class BeginTransactionRepl;
class BeginTransactionReq;
class CloseServerDatabaseReq;
class CommitTransactionRepl;
class CommitTransactionReq;
class CreateDatabaseRepl;
class CreateDatabaseReq;
class DeleteCollectionByNameRepl;
class DeleteCollectionByNameReq;
class DeleteCollectionByOidRepl;
class DeleteCollectionByOidReq;
class DestroyDatabaseRepl;
class DestroyDatabaseReq;
class EndInsertMDDRepl;
class EndInsertMDDReq;
class EndTransferRepl;
class EndTransferReq;
class ExecuteHttpQueryRepl;
class ExecuteHttpQueryReq;
class ExecuteInsertQueryRepl;
class ExecuteInsertQueryReq;
class ExecuteQueryRepl;
class ExecuteQueryReq;
class ExecuteUpdateQueryRepl;
class ExecuteUpdateQueryReq;
class GetCollOidsByNameOrOidRepl;
class GetCollOidsByNameOrOidReq;
class GetCollectionByNameOrOidRepl;
class GetCollectionByNameOrOidReq;
class GetNewOidRepl;
class GetNewOidReq;
class GetNextElementRepl;
class GetNextElementReq;
class GetNextMDDRepl;
class GetNextMDDReq;
class GetNextTileRepl;
class GetNextTileReq;
class GetObjectTypeRepl;
class GetObjectTypeReq;
class GetTypeStructureRepl;
class GetTypeStructureReq;
class InitUpdateRepl;
class InitUpdateReq;
class InsertCollectionRepl;
class InsertCollectionReq;
class InsertTileRepl;
class InsertTileReq;
class IsTransactionOpenRepl;
class IsTransactionOpenReq;
class KeepAliveRequest;
class OpenServerDatabaseRepl;
class OpenServerDatabaseReq;
class RemoveObjectFromCollectionRepl;
class RemoveObjectFromCollectionReq;
class SetFormatRepl;
class SetFormatReq;
class StartInsertMDDRepl;
class StartInsertMDDReq;
class StartInsertTransMDDRepl;
class StartInsertTransMDDReq;

// ===================================================================

class OpenServerDatabaseReq : public ::google::protobuf::Message {
 public:
  OpenServerDatabaseReq();
  virtual ~OpenServerDatabaseReq();

  OpenServerDatabaseReq(const OpenServerDatabaseReq& from);

  inline OpenServerDatabaseReq& operator=(const OpenServerDatabaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenServerDatabaseReq& default_instance();

  void Swap(OpenServerDatabaseReq* other);

  // implements Message ----------------------------------------------

  inline OpenServerDatabaseReq* New() const { return New(NULL); }

  OpenServerDatabaseReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenServerDatabaseReq& from);
  void MergeFrom(const OpenServerDatabaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenServerDatabaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string database_name = 2;
  void clear_database_name();
  static const int kDatabaseNameFieldNumber = 2;
  const ::std::string& database_name() const;
  void set_database_name(const ::std::string& value);
  void set_database_name(const char* value);
  void set_database_name(const char* value, size_t size);
  ::std::string* mutable_database_name();
  ::std::string* release_database_name();
  void set_allocated_database_name(::std::string* database_name);

  // @@protoc_insertion_point(class_scope:rasnet.service.OpenServerDatabaseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr database_name_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static OpenServerDatabaseReq* default_instance_;
};
// -------------------------------------------------------------------

class OpenServerDatabaseRepl : public ::google::protobuf::Message {
 public:
  OpenServerDatabaseRepl();
  virtual ~OpenServerDatabaseRepl();

  OpenServerDatabaseRepl(const OpenServerDatabaseRepl& from);

  inline OpenServerDatabaseRepl& operator=(const OpenServerDatabaseRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenServerDatabaseRepl& default_instance();

  void Swap(OpenServerDatabaseRepl* other);

  // implements Message ----------------------------------------------

  inline OpenServerDatabaseRepl* New() const { return New(NULL); }

  OpenServerDatabaseRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenServerDatabaseRepl& from);
  void MergeFrom(const OpenServerDatabaseRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenServerDatabaseRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.OpenServerDatabaseRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static OpenServerDatabaseRepl* default_instance_;
};
// -------------------------------------------------------------------

class CloseServerDatabaseReq : public ::google::protobuf::Message {
 public:
  CloseServerDatabaseReq();
  virtual ~CloseServerDatabaseReq();

  CloseServerDatabaseReq(const CloseServerDatabaseReq& from);

  inline CloseServerDatabaseReq& operator=(const CloseServerDatabaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseServerDatabaseReq& default_instance();

  void Swap(CloseServerDatabaseReq* other);

  // implements Message ----------------------------------------------

  inline CloseServerDatabaseReq* New() const { return New(NULL); }

  CloseServerDatabaseReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseServerDatabaseReq& from);
  void MergeFrom(const CloseServerDatabaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloseServerDatabaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.CloseServerDatabaseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CloseServerDatabaseReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateDatabaseReq : public ::google::protobuf::Message {
 public:
  CreateDatabaseReq();
  virtual ~CreateDatabaseReq();

  CreateDatabaseReq(const CreateDatabaseReq& from);

  inline CreateDatabaseReq& operator=(const CreateDatabaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDatabaseReq& default_instance();

  void Swap(CreateDatabaseReq* other);

  // implements Message ----------------------------------------------

  inline CreateDatabaseReq* New() const { return New(NULL); }

  CreateDatabaseReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateDatabaseReq& from);
  void MergeFrom(const CreateDatabaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateDatabaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string database_name = 2;
  void clear_database_name();
  static const int kDatabaseNameFieldNumber = 2;
  const ::std::string& database_name() const;
  void set_database_name(const ::std::string& value);
  void set_database_name(const char* value);
  void set_database_name(const char* value, size_t size);
  ::std::string* mutable_database_name();
  ::std::string* release_database_name();
  void set_allocated_database_name(::std::string* database_name);

  // @@protoc_insertion_point(class_scope:rasnet.service.CreateDatabaseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr database_name_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CreateDatabaseReq* default_instance_;
};
// -------------------------------------------------------------------

class CreateDatabaseRepl : public ::google::protobuf::Message {
 public:
  CreateDatabaseRepl();
  virtual ~CreateDatabaseRepl();

  CreateDatabaseRepl(const CreateDatabaseRepl& from);

  inline CreateDatabaseRepl& operator=(const CreateDatabaseRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateDatabaseRepl& default_instance();

  void Swap(CreateDatabaseRepl* other);

  // implements Message ----------------------------------------------

  inline CreateDatabaseRepl* New() const { return New(NULL); }

  CreateDatabaseRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateDatabaseRepl& from);
  void MergeFrom(const CreateDatabaseRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateDatabaseRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.CreateDatabaseRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CreateDatabaseRepl* default_instance_;
};
// -------------------------------------------------------------------

class DestroyDatabaseReq : public ::google::protobuf::Message {
 public:
  DestroyDatabaseReq();
  virtual ~DestroyDatabaseReq();

  DestroyDatabaseReq(const DestroyDatabaseReq& from);

  inline DestroyDatabaseReq& operator=(const DestroyDatabaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyDatabaseReq& default_instance();

  void Swap(DestroyDatabaseReq* other);

  // implements Message ----------------------------------------------

  inline DestroyDatabaseReq* New() const { return New(NULL); }

  DestroyDatabaseReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyDatabaseReq& from);
  void MergeFrom(const DestroyDatabaseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyDatabaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string database_name = 2;
  void clear_database_name();
  static const int kDatabaseNameFieldNumber = 2;
  const ::std::string& database_name() const;
  void set_database_name(const ::std::string& value);
  void set_database_name(const char* value);
  void set_database_name(const char* value, size_t size);
  ::std::string* mutable_database_name();
  ::std::string* release_database_name();
  void set_allocated_database_name(::std::string* database_name);

  // @@protoc_insertion_point(class_scope:rasnet.service.DestroyDatabaseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr database_name_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DestroyDatabaseReq* default_instance_;
};
// -------------------------------------------------------------------

class DestroyDatabaseRepl : public ::google::protobuf::Message {
 public:
  DestroyDatabaseRepl();
  virtual ~DestroyDatabaseRepl();

  DestroyDatabaseRepl(const DestroyDatabaseRepl& from);

  inline DestroyDatabaseRepl& operator=(const DestroyDatabaseRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyDatabaseRepl& default_instance();

  void Swap(DestroyDatabaseRepl* other);

  // implements Message ----------------------------------------------

  inline DestroyDatabaseRepl* New() const { return New(NULL); }

  DestroyDatabaseRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DestroyDatabaseRepl& from);
  void MergeFrom(const DestroyDatabaseRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DestroyDatabaseRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.DestroyDatabaseRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DestroyDatabaseRepl* default_instance_;
};
// -------------------------------------------------------------------

class BeginTransactionReq : public ::google::protobuf::Message {
 public:
  BeginTransactionReq();
  virtual ~BeginTransactionReq();

  BeginTransactionReq(const BeginTransactionReq& from);

  inline BeginTransactionReq& operator=(const BeginTransactionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginTransactionReq& default_instance();

  void Swap(BeginTransactionReq* other);

  // implements Message ----------------------------------------------

  inline BeginTransactionReq* New() const { return New(NULL); }

  BeginTransactionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginTransactionReq& from);
  void MergeFrom(const BeginTransactionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeginTransactionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional bool rw = 2;
  void clear_rw();
  static const int kRwFieldNumber = 2;
  bool rw() const;
  void set_rw(bool value);

  // @@protoc_insertion_point(class_scope:rasnet.service.BeginTransactionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  bool rw_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static BeginTransactionReq* default_instance_;
};
// -------------------------------------------------------------------

class BeginTransactionRepl : public ::google::protobuf::Message {
 public:
  BeginTransactionRepl();
  virtual ~BeginTransactionRepl();

  BeginTransactionRepl(const BeginTransactionRepl& from);

  inline BeginTransactionRepl& operator=(const BeginTransactionRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginTransactionRepl& default_instance();

  void Swap(BeginTransactionRepl* other);

  // implements Message ----------------------------------------------

  inline BeginTransactionRepl* New() const { return New(NULL); }

  BeginTransactionRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginTransactionRepl& from);
  void MergeFrom(const BeginTransactionRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BeginTransactionRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.BeginTransactionRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static BeginTransactionRepl* default_instance_;
};
// -------------------------------------------------------------------

class CommitTransactionReq : public ::google::protobuf::Message {
 public:
  CommitTransactionReq();
  virtual ~CommitTransactionReq();

  CommitTransactionReq(const CommitTransactionReq& from);

  inline CommitTransactionReq& operator=(const CommitTransactionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitTransactionReq& default_instance();

  void Swap(CommitTransactionReq* other);

  // implements Message ----------------------------------------------

  inline CommitTransactionReq* New() const { return New(NULL); }

  CommitTransactionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommitTransactionReq& from);
  void MergeFrom(const CommitTransactionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommitTransactionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.CommitTransactionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CommitTransactionReq* default_instance_;
};
// -------------------------------------------------------------------

class CommitTransactionRepl : public ::google::protobuf::Message {
 public:
  CommitTransactionRepl();
  virtual ~CommitTransactionRepl();

  CommitTransactionRepl(const CommitTransactionRepl& from);

  inline CommitTransactionRepl& operator=(const CommitTransactionRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitTransactionRepl& default_instance();

  void Swap(CommitTransactionRepl* other);

  // implements Message ----------------------------------------------

  inline CommitTransactionRepl* New() const { return New(NULL); }

  CommitTransactionRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommitTransactionRepl& from);
  void MergeFrom(const CommitTransactionRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommitTransactionRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.CommitTransactionRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CommitTransactionRepl* default_instance_;
};
// -------------------------------------------------------------------

class AbortTransactionReq : public ::google::protobuf::Message {
 public:
  AbortTransactionReq();
  virtual ~AbortTransactionReq();

  AbortTransactionReq(const AbortTransactionReq& from);

  inline AbortTransactionReq& operator=(const AbortTransactionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortTransactionReq& default_instance();

  void Swap(AbortTransactionReq* other);

  // implements Message ----------------------------------------------

  inline AbortTransactionReq* New() const { return New(NULL); }

  AbortTransactionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbortTransactionReq& from);
  void MergeFrom(const AbortTransactionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AbortTransactionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.AbortTransactionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AbortTransactionReq* default_instance_;
};
// -------------------------------------------------------------------

class AbortTransactionRepl : public ::google::protobuf::Message {
 public:
  AbortTransactionRepl();
  virtual ~AbortTransactionRepl();

  AbortTransactionRepl(const AbortTransactionRepl& from);

  inline AbortTransactionRepl& operator=(const AbortTransactionRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortTransactionRepl& default_instance();

  void Swap(AbortTransactionRepl* other);

  // implements Message ----------------------------------------------

  inline AbortTransactionRepl* New() const { return New(NULL); }

  AbortTransactionRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AbortTransactionRepl& from);
  void MergeFrom(const AbortTransactionRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AbortTransactionRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rasnet.service.AbortTransactionRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AbortTransactionRepl* default_instance_;
};
// -------------------------------------------------------------------

class IsTransactionOpenReq : public ::google::protobuf::Message {
 public:
  IsTransactionOpenReq();
  virtual ~IsTransactionOpenReq();

  IsTransactionOpenReq(const IsTransactionOpenReq& from);

  inline IsTransactionOpenReq& operator=(const IsTransactionOpenReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsTransactionOpenReq& default_instance();

  void Swap(IsTransactionOpenReq* other);

  // implements Message ----------------------------------------------

  inline IsTransactionOpenReq* New() const { return New(NULL); }

  IsTransactionOpenReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsTransactionOpenReq& from);
  void MergeFrom(const IsTransactionOpenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsTransactionOpenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.IsTransactionOpenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static IsTransactionOpenReq* default_instance_;
};
// -------------------------------------------------------------------

class IsTransactionOpenRepl : public ::google::protobuf::Message {
 public:
  IsTransactionOpenRepl();
  virtual ~IsTransactionOpenRepl();

  IsTransactionOpenRepl(const IsTransactionOpenRepl& from);

  inline IsTransactionOpenRepl& operator=(const IsTransactionOpenRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsTransactionOpenRepl& default_instance();

  void Swap(IsTransactionOpenRepl* other);

  // implements Message ----------------------------------------------

  inline IsTransactionOpenRepl* New() const { return New(NULL); }

  IsTransactionOpenRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsTransactionOpenRepl& from);
  void MergeFrom(const IsTransactionOpenRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsTransactionOpenRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isOpen = 1;
  void clear_isopen();
  static const int kIsOpenFieldNumber = 1;
  bool isopen() const;
  void set_isopen(bool value);

  // @@protoc_insertion_point(class_scope:rasnet.service.IsTransactionOpenRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool isopen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static IsTransactionOpenRepl* default_instance_;
};
// -------------------------------------------------------------------

class StartInsertMDDReq : public ::google::protobuf::Message {
 public:
  StartInsertMDDReq();
  virtual ~StartInsertMDDReq();

  StartInsertMDDReq(const StartInsertMDDReq& from);

  inline StartInsertMDDReq& operator=(const StartInsertMDDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartInsertMDDReq& default_instance();

  void Swap(StartInsertMDDReq* other);

  // implements Message ----------------------------------------------

  inline StartInsertMDDReq* New() const { return New(NULL); }

  StartInsertMDDReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartInsertMDDReq& from);
  void MergeFrom(const StartInsertMDDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartInsertMDDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collName = 2;
  void clear_collname();
  static const int kCollNameFieldNumber = 2;
  const ::std::string& collname() const;
  void set_collname(const ::std::string& value);
  void set_collname(const char* value);
  void set_collname(const char* value, size_t size);
  ::std::string* mutable_collname();
  ::std::string* release_collname();
  void set_allocated_collname(::std::string* collname);

  // optional bytes domain = 3;
  void clear_domain();
  static const int kDomainFieldNumber = 3;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const void* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int32 type_length = 4;
  void clear_type_length();
  static const int kTypeLengthFieldNumber = 4;
  ::google::protobuf::int32 type_length() const;
  void set_type_length(::google::protobuf::int32 value);

  // optional string type_name = 5;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 5;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string oid = 6;
  void clear_oid();
  static const int kOidFieldNumber = 6;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.StartInsertMDDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collname_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 type_length_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StartInsertMDDReq* default_instance_;
};
// -------------------------------------------------------------------

class StartInsertMDDRepl : public ::google::protobuf::Message {
 public:
  StartInsertMDDRepl();
  virtual ~StartInsertMDDRepl();

  StartInsertMDDRepl(const StartInsertMDDRepl& from);

  inline StartInsertMDDRepl& operator=(const StartInsertMDDRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartInsertMDDRepl& default_instance();

  void Swap(StartInsertMDDRepl* other);

  // implements Message ----------------------------------------------

  inline StartInsertMDDRepl* New() const { return New(NULL); }

  StartInsertMDDRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartInsertMDDRepl& from);
  void MergeFrom(const StartInsertMDDRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartInsertMDDRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.StartInsertMDDRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StartInsertMDDRepl* default_instance_;
};
// -------------------------------------------------------------------

class InsertTileReq : public ::google::protobuf::Message {
 public:
  InsertTileReq();
  virtual ~InsertTileReq();

  InsertTileReq(const InsertTileReq& from);

  inline InsertTileReq& operator=(const InsertTileReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertTileReq& default_instance();

  void Swap(InsertTileReq* other);

  // implements Message ----------------------------------------------

  inline InsertTileReq* New() const { return New(NULL); }

  InsertTileReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertTileReq& from);
  void MergeFrom(const InsertTileReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertTileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional bool persistent = 2;
  void clear_persistent();
  static const int kPersistentFieldNumber = 2;
  bool persistent() const;
  void set_persistent(bool value);

  // optional string domain = 3;
  void clear_domain();
  static const int kDomainFieldNumber = 3;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int32 type_length = 4;
  void clear_type_length();
  static const int kTypeLengthFieldNumber = 4;
  ::google::protobuf::int32 type_length() const;
  void set_type_length(::google::protobuf::int32 value);

  // optional int32 current_format = 5;
  void clear_current_format();
  static const int kCurrentFormatFieldNumber = 5;
  ::google::protobuf::int32 current_format() const;
  void set_current_format(::google::protobuf::int32 value);

  // optional int32 storage_format = 6;
  void clear_storage_format();
  static const int kStorageFormatFieldNumber = 6;
  ::google::protobuf::int32 storage_format() const;
  void set_storage_format(::google::protobuf::int32 value);

  // optional bytes data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 data_length = 8;
  void clear_data_length();
  static const int kDataLengthFieldNumber = 8;
  ::google::protobuf::int32 data_length() const;
  void set_data_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.InsertTileReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  bool persistent_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::int32 type_length_;
  ::google::protobuf::int32 current_format_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 storage_format_;
  ::google::protobuf::int32 data_length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InsertTileReq* default_instance_;
};
// -------------------------------------------------------------------

class InsertTileRepl : public ::google::protobuf::Message {
 public:
  InsertTileRepl();
  virtual ~InsertTileRepl();

  InsertTileRepl(const InsertTileRepl& from);

  inline InsertTileRepl& operator=(const InsertTileRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertTileRepl& default_instance();

  void Swap(InsertTileRepl* other);

  // implements Message ----------------------------------------------

  inline InsertTileRepl* New() const { return New(NULL); }

  InsertTileRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertTileRepl& from);
  void MergeFrom(const InsertTileRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertTileRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.InsertTileRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InsertTileRepl* default_instance_;
};
// -------------------------------------------------------------------

class EndInsertMDDReq : public ::google::protobuf::Message {
 public:
  EndInsertMDDReq();
  virtual ~EndInsertMDDReq();

  EndInsertMDDReq(const EndInsertMDDReq& from);

  inline EndInsertMDDReq& operator=(const EndInsertMDDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndInsertMDDReq& default_instance();

  void Swap(EndInsertMDDReq* other);

  // implements Message ----------------------------------------------

  inline EndInsertMDDReq* New() const { return New(NULL); }

  EndInsertMDDReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndInsertMDDReq& from);
  void MergeFrom(const EndInsertMDDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndInsertMDDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional bool persistent = 2;
  void clear_persistent();
  static const int kPersistentFieldNumber = 2;
  bool persistent() const;
  void set_persistent(bool value);

  // @@protoc_insertion_point(class_scope:rasnet.service.EndInsertMDDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  bool persistent_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EndInsertMDDReq* default_instance_;
};
// -------------------------------------------------------------------

class EndInsertMDDRepl : public ::google::protobuf::Message {
 public:
  EndInsertMDDRepl();
  virtual ~EndInsertMDDRepl();

  EndInsertMDDRepl(const EndInsertMDDRepl& from);

  inline EndInsertMDDRepl& operator=(const EndInsertMDDRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndInsertMDDRepl& default_instance();

  void Swap(EndInsertMDDRepl* other);

  // implements Message ----------------------------------------------

  inline EndInsertMDDRepl* New() const { return New(NULL); }

  EndInsertMDDRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndInsertMDDRepl& from);
  void MergeFrom(const EndInsertMDDRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndInsertMDDRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.EndInsertMDDRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EndInsertMDDRepl* default_instance_;
};
// -------------------------------------------------------------------

class StartInsertTransMDDReq : public ::google::protobuf::Message {
 public:
  StartInsertTransMDDReq();
  virtual ~StartInsertTransMDDReq();

  StartInsertTransMDDReq(const StartInsertTransMDDReq& from);

  inline StartInsertTransMDDReq& operator=(const StartInsertTransMDDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartInsertTransMDDReq& default_instance();

  void Swap(StartInsertTransMDDReq* other);

  // implements Message ----------------------------------------------

  inline StartInsertTransMDDReq* New() const { return New(NULL); }

  StartInsertTransMDDReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartInsertTransMDDReq& from);
  void MergeFrom(const StartInsertTransMDDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartInsertTransMDDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int32 type_length = 3;
  void clear_type_length();
  static const int kTypeLengthFieldNumber = 3;
  ::google::protobuf::int32 type_length() const;
  void set_type_length(::google::protobuf::int32 value);

  // optional string type_name = 4;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 4;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // @@protoc_insertion_point(class_scope:rasnet.service.StartInsertTransMDDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 type_length_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StartInsertTransMDDReq* default_instance_;
};
// -------------------------------------------------------------------

class StartInsertTransMDDRepl : public ::google::protobuf::Message {
 public:
  StartInsertTransMDDRepl();
  virtual ~StartInsertTransMDDRepl();

  StartInsertTransMDDRepl(const StartInsertTransMDDRepl& from);

  inline StartInsertTransMDDRepl& operator=(const StartInsertTransMDDRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartInsertTransMDDRepl& default_instance();

  void Swap(StartInsertTransMDDRepl* other);

  // implements Message ----------------------------------------------

  inline StartInsertTransMDDRepl* New() const { return New(NULL); }

  StartInsertTransMDDRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartInsertTransMDDRepl& from);
  void MergeFrom(const StartInsertTransMDDRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartInsertTransMDDRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.StartInsertTransMDDRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StartInsertTransMDDRepl* default_instance_;
};
// -------------------------------------------------------------------

class InsertCollectionReq : public ::google::protobuf::Message {
 public:
  InsertCollectionReq();
  virtual ~InsertCollectionReq();

  InsertCollectionReq(const InsertCollectionReq& from);

  inline InsertCollectionReq& operator=(const InsertCollectionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertCollectionReq& default_instance();

  void Swap(InsertCollectionReq* other);

  // implements Message ----------------------------------------------

  inline InsertCollectionReq* New() const { return New(NULL); }

  InsertCollectionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertCollectionReq& from);
  void MergeFrom(const InsertCollectionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertCollectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collection_name = 2;
  void clear_collection_name();
  static const int kCollectionNameFieldNumber = 2;
  const ::std::string& collection_name() const;
  void set_collection_name(const ::std::string& value);
  void set_collection_name(const char* value);
  void set_collection_name(const char* value, size_t size);
  ::std::string* mutable_collection_name();
  ::std::string* release_collection_name();
  void set_allocated_collection_name(::std::string* collection_name);

  // optional string type_name = 3;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 3;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string oid = 4;
  void clear_oid();
  static const int kOidFieldNumber = 4;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.InsertCollectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collection_name_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InsertCollectionReq* default_instance_;
};
// -------------------------------------------------------------------

class InsertCollectionRepl : public ::google::protobuf::Message {
 public:
  InsertCollectionRepl();
  virtual ~InsertCollectionRepl();

  InsertCollectionRepl(const InsertCollectionRepl& from);

  inline InsertCollectionRepl& operator=(const InsertCollectionRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertCollectionRepl& default_instance();

  void Swap(InsertCollectionRepl* other);

  // implements Message ----------------------------------------------

  inline InsertCollectionRepl* New() const { return New(NULL); }

  InsertCollectionRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertCollectionRepl& from);
  void MergeFrom(const InsertCollectionRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InsertCollectionRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.InsertCollectionRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InsertCollectionRepl* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCollectionByNameReq : public ::google::protobuf::Message {
 public:
  DeleteCollectionByNameReq();
  virtual ~DeleteCollectionByNameReq();

  DeleteCollectionByNameReq(const DeleteCollectionByNameReq& from);

  inline DeleteCollectionByNameReq& operator=(const DeleteCollectionByNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCollectionByNameReq& default_instance();

  void Swap(DeleteCollectionByNameReq* other);

  // implements Message ----------------------------------------------

  inline DeleteCollectionByNameReq* New() const { return New(NULL); }

  DeleteCollectionByNameReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteCollectionByNameReq& from);
  void MergeFrom(const DeleteCollectionByNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteCollectionByNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collection_name = 2;
  void clear_collection_name();
  static const int kCollectionNameFieldNumber = 2;
  const ::std::string& collection_name() const;
  void set_collection_name(const ::std::string& value);
  void set_collection_name(const char* value);
  void set_collection_name(const char* value, size_t size);
  ::std::string* mutable_collection_name();
  ::std::string* release_collection_name();
  void set_allocated_collection_name(::std::string* collection_name);

  // @@protoc_insertion_point(class_scope:rasnet.service.DeleteCollectionByNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collection_name_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteCollectionByNameReq* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCollectionByNameRepl : public ::google::protobuf::Message {
 public:
  DeleteCollectionByNameRepl();
  virtual ~DeleteCollectionByNameRepl();

  DeleteCollectionByNameRepl(const DeleteCollectionByNameRepl& from);

  inline DeleteCollectionByNameRepl& operator=(const DeleteCollectionByNameRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCollectionByNameRepl& default_instance();

  void Swap(DeleteCollectionByNameRepl* other);

  // implements Message ----------------------------------------------

  inline DeleteCollectionByNameRepl* New() const { return New(NULL); }

  DeleteCollectionByNameRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteCollectionByNameRepl& from);
  void MergeFrom(const DeleteCollectionByNameRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteCollectionByNameRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.DeleteCollectionByNameRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteCollectionByNameRepl* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCollectionByOidReq : public ::google::protobuf::Message {
 public:
  DeleteCollectionByOidReq();
  virtual ~DeleteCollectionByOidReq();

  DeleteCollectionByOidReq(const DeleteCollectionByOidReq& from);

  inline DeleteCollectionByOidReq& operator=(const DeleteCollectionByOidReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCollectionByOidReq& default_instance();

  void Swap(DeleteCollectionByOidReq* other);

  // implements Message ----------------------------------------------

  inline DeleteCollectionByOidReq* New() const { return New(NULL); }

  DeleteCollectionByOidReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteCollectionByOidReq& from);
  void MergeFrom(const DeleteCollectionByOidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteCollectionByOidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string oid = 2;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.DeleteCollectionByOidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteCollectionByOidReq* default_instance_;
};
// -------------------------------------------------------------------

class DeleteCollectionByOidRepl : public ::google::protobuf::Message {
 public:
  DeleteCollectionByOidRepl();
  virtual ~DeleteCollectionByOidRepl();

  DeleteCollectionByOidRepl(const DeleteCollectionByOidRepl& from);

  inline DeleteCollectionByOidRepl& operator=(const DeleteCollectionByOidRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCollectionByOidRepl& default_instance();

  void Swap(DeleteCollectionByOidRepl* other);

  // implements Message ----------------------------------------------

  inline DeleteCollectionByOidRepl* New() const { return New(NULL); }

  DeleteCollectionByOidRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteCollectionByOidRepl& from);
  void MergeFrom(const DeleteCollectionByOidRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteCollectionByOidRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.DeleteCollectionByOidRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteCollectionByOidRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetCollectionByNameOrOidReq : public ::google::protobuf::Message {
 public:
  GetCollectionByNameOrOidReq();
  virtual ~GetCollectionByNameOrOidReq();

  GetCollectionByNameOrOidReq(const GetCollectionByNameOrOidReq& from);

  inline GetCollectionByNameOrOidReq& operator=(const GetCollectionByNameOrOidReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCollectionByNameOrOidReq& default_instance();

  void Swap(GetCollectionByNameOrOidReq* other);

  // implements Message ----------------------------------------------

  inline GetCollectionByNameOrOidReq* New() const { return New(NULL); }

  GetCollectionByNameOrOidReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCollectionByNameOrOidReq& from);
  void MergeFrom(const GetCollectionByNameOrOidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCollectionByNameOrOidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collection_identifier = 2;
  void clear_collection_identifier();
  static const int kCollectionIdentifierFieldNumber = 2;
  const ::std::string& collection_identifier() const;
  void set_collection_identifier(const ::std::string& value);
  void set_collection_identifier(const char* value);
  void set_collection_identifier(const char* value, size_t size);
  ::std::string* mutable_collection_identifier();
  ::std::string* release_collection_identifier();
  void set_allocated_collection_identifier(::std::string* collection_identifier);

  // optional bool is_name = 3;
  void clear_is_name();
  static const int kIsNameFieldNumber = 3;
  bool is_name() const;
  void set_is_name(bool value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetCollectionByNameOrOidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collection_identifier_;
  ::google::protobuf::int32 client_id_;
  bool is_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetCollectionByNameOrOidReq* default_instance_;
};
// -------------------------------------------------------------------

class GetCollectionByNameOrOidRepl : public ::google::protobuf::Message {
 public:
  GetCollectionByNameOrOidRepl();
  virtual ~GetCollectionByNameOrOidRepl();

  GetCollectionByNameOrOidRepl(const GetCollectionByNameOrOidRepl& from);

  inline GetCollectionByNameOrOidRepl& operator=(const GetCollectionByNameOrOidRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCollectionByNameOrOidRepl& default_instance();

  void Swap(GetCollectionByNameOrOidRepl* other);

  // implements Message ----------------------------------------------

  inline GetCollectionByNameOrOidRepl* New() const { return New(NULL); }

  GetCollectionByNameOrOidRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCollectionByNameOrOidRepl& from);
  void MergeFrom(const GetCollectionByNameOrOidRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCollectionByNameOrOidRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_name = 1;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 1;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string type_structure = 2;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 2;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // optional string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // optional string collection_name = 4;
  void clear_collection_name();
  static const int kCollectionNameFieldNumber = 4;
  const ::std::string& collection_name() const;
  void set_collection_name(const ::std::string& value);
  void set_collection_name(const char* value);
  void set_collection_name(const char* value, size_t size);
  ::std::string* mutable_collection_name();
  ::std::string* release_collection_name();
  void set_allocated_collection_name(::std::string* collection_name);

  // optional int32 status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetCollectionByNameOrOidRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::internal::ArenaStringPtr collection_name_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetCollectionByNameOrOidRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetCollOidsByNameOrOidReq : public ::google::protobuf::Message {
 public:
  GetCollOidsByNameOrOidReq();
  virtual ~GetCollOidsByNameOrOidReq();

  GetCollOidsByNameOrOidReq(const GetCollOidsByNameOrOidReq& from);

  inline GetCollOidsByNameOrOidReq& operator=(const GetCollOidsByNameOrOidReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCollOidsByNameOrOidReq& default_instance();

  void Swap(GetCollOidsByNameOrOidReq* other);

  // implements Message ----------------------------------------------

  inline GetCollOidsByNameOrOidReq* New() const { return New(NULL); }

  GetCollOidsByNameOrOidReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCollOidsByNameOrOidReq& from);
  void MergeFrom(const GetCollOidsByNameOrOidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCollOidsByNameOrOidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collection_identifier = 2;
  void clear_collection_identifier();
  static const int kCollectionIdentifierFieldNumber = 2;
  const ::std::string& collection_identifier() const;
  void set_collection_identifier(const ::std::string& value);
  void set_collection_identifier(const char* value);
  void set_collection_identifier(const char* value, size_t size);
  ::std::string* mutable_collection_identifier();
  ::std::string* release_collection_identifier();
  void set_allocated_collection_identifier(::std::string* collection_identifier);

  // optional bool is_name = 3;
  void clear_is_name();
  static const int kIsNameFieldNumber = 3;
  bool is_name() const;
  void set_is_name(bool value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetCollOidsByNameOrOidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collection_identifier_;
  ::google::protobuf::int32 client_id_;
  bool is_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetCollOidsByNameOrOidReq* default_instance_;
};
// -------------------------------------------------------------------

class GetCollOidsByNameOrOidRepl : public ::google::protobuf::Message {
 public:
  GetCollOidsByNameOrOidRepl();
  virtual ~GetCollOidsByNameOrOidRepl();

  GetCollOidsByNameOrOidRepl(const GetCollOidsByNameOrOidRepl& from);

  inline GetCollOidsByNameOrOidRepl& operator=(const GetCollOidsByNameOrOidRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCollOidsByNameOrOidRepl& default_instance();

  void Swap(GetCollOidsByNameOrOidRepl* other);

  // implements Message ----------------------------------------------

  inline GetCollOidsByNameOrOidRepl* New() const { return New(NULL); }

  GetCollOidsByNameOrOidRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCollOidsByNameOrOidRepl& from);
  void MergeFrom(const GetCollOidsByNameOrOidRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCollOidsByNameOrOidRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string type_name = 2;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 2;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string type_structure = 3;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 3;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // optional string oids_string = 4;
  void clear_oids_string();
  static const int kOidsStringFieldNumber = 4;
  const ::std::string& oids_string() const;
  void set_oids_string(const ::std::string& value);
  void set_oids_string(const char* value);
  void set_oids_string(const char* value, size_t size);
  ::std::string* mutable_oids_string();
  ::std::string* release_oids_string();
  void set_allocated_oids_string(::std::string* oids_string);

  // optional string collection_name = 5;
  void clear_collection_name();
  static const int kCollectionNameFieldNumber = 5;
  const ::std::string& collection_name() const;
  void set_collection_name(const ::std::string& value);
  void set_collection_name(const char* value);
  void set_collection_name(const char* value, size_t size);
  ::std::string* mutable_collection_name();
  ::std::string* release_collection_name();
  void set_allocated_collection_name(::std::string* collection_name);

  // repeated string oid_set = 6;
  int oid_set_size() const;
  void clear_oid_set();
  static const int kOidSetFieldNumber = 6;
  const ::std::string& oid_set(int index) const;
  ::std::string* mutable_oid_set(int index);
  void set_oid_set(int index, const ::std::string& value);
  void set_oid_set(int index, const char* value);
  void set_oid_set(int index, const char* value, size_t size);
  ::std::string* add_oid_set();
  void add_oid_set(const ::std::string& value);
  void add_oid_set(const char* value);
  void add_oid_set(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& oid_set() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_oid_set();

  // @@protoc_insertion_point(class_scope:rasnet.service.GetCollOidsByNameOrOidRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  ::google::protobuf::internal::ArenaStringPtr oids_string_;
  ::google::protobuf::internal::ArenaStringPtr collection_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> oid_set_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetCollOidsByNameOrOidRepl* default_instance_;
};
// -------------------------------------------------------------------

class RemoveObjectFromCollectionReq : public ::google::protobuf::Message {
 public:
  RemoveObjectFromCollectionReq();
  virtual ~RemoveObjectFromCollectionReq();

  RemoveObjectFromCollectionReq(const RemoveObjectFromCollectionReq& from);

  inline RemoveObjectFromCollectionReq& operator=(const RemoveObjectFromCollectionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveObjectFromCollectionReq& default_instance();

  void Swap(RemoveObjectFromCollectionReq* other);

  // implements Message ----------------------------------------------

  inline RemoveObjectFromCollectionReq* New() const { return New(NULL); }

  RemoveObjectFromCollectionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveObjectFromCollectionReq& from);
  void MergeFrom(const RemoveObjectFromCollectionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RemoveObjectFromCollectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string collection_name = 2;
  void clear_collection_name();
  static const int kCollectionNameFieldNumber = 2;
  const ::std::string& collection_name() const;
  void set_collection_name(const ::std::string& value);
  void set_collection_name(const char* value);
  void set_collection_name(const char* value, size_t size);
  ::std::string* mutable_collection_name();
  ::std::string* release_collection_name();
  void set_allocated_collection_name(::std::string* collection_name);

  // optional string oid = 3;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.RemoveObjectFromCollectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr collection_name_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static RemoveObjectFromCollectionReq* default_instance_;
};
// -------------------------------------------------------------------

class RemoveObjectFromCollectionRepl : public ::google::protobuf::Message {
 public:
  RemoveObjectFromCollectionRepl();
  virtual ~RemoveObjectFromCollectionRepl();

  RemoveObjectFromCollectionRepl(const RemoveObjectFromCollectionRepl& from);

  inline RemoveObjectFromCollectionRepl& operator=(const RemoveObjectFromCollectionRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveObjectFromCollectionRepl& default_instance();

  void Swap(RemoveObjectFromCollectionRepl* other);

  // implements Message ----------------------------------------------

  inline RemoveObjectFromCollectionRepl* New() const { return New(NULL); }

  RemoveObjectFromCollectionRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveObjectFromCollectionRepl& from);
  void MergeFrom(const RemoveObjectFromCollectionRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RemoveObjectFromCollectionRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.RemoveObjectFromCollectionRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static RemoveObjectFromCollectionRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetNextMDDReq : public ::google::protobuf::Message {
 public:
  GetNextMDDReq();
  virtual ~GetNextMDDReq();

  GetNextMDDReq(const GetNextMDDReq& from);

  inline GetNextMDDReq& operator=(const GetNextMDDReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextMDDReq& default_instance();

  void Swap(GetNextMDDReq* other);

  // implements Message ----------------------------------------------

  inline GetNextMDDReq* New() const { return New(NULL); }

  GetNextMDDReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextMDDReq& from);
  void MergeFrom(const GetNextMDDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextMDDReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextMDDReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextMDDReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNextMDDRepl : public ::google::protobuf::Message {
 public:
  GetNextMDDRepl();
  virtual ~GetNextMDDRepl();

  GetNextMDDRepl(const GetNextMDDRepl& from);

  inline GetNextMDDRepl& operator=(const GetNextMDDRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextMDDRepl& default_instance();

  void Swap(GetNextMDDRepl* other);

  // implements Message ----------------------------------------------

  inline GetNextMDDRepl* New() const { return New(NULL); }

  GetNextMDDRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextMDDRepl& from);
  void MergeFrom(const GetNextMDDRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextMDDRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional string type_name = 3;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 3;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string type_structure = 4;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 4;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // optional string oid = 5;
  void clear_oid();
  static const int kOidFieldNumber = 5;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // optional int32 current_format = 6;
  void clear_current_format();
  static const int kCurrentFormatFieldNumber = 6;
  ::google::protobuf::int32 current_format() const;
  void set_current_format(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextMDDRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 current_format_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextMDDRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetNextTileReq : public ::google::protobuf::Message {
 public:
  GetNextTileReq();
  virtual ~GetNextTileReq();

  GetNextTileReq(const GetNextTileReq& from);

  inline GetNextTileReq& operator=(const GetNextTileReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextTileReq& default_instance();

  void Swap(GetNextTileReq* other);

  // implements Message ----------------------------------------------

  inline GetNextTileReq* New() const { return New(NULL); }

  GetNextTileReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextTileReq& from);
  void MergeFrom(const GetNextTileReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextTileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextTileReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextTileReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNextTileRepl : public ::google::protobuf::Message {
 public:
  GetNextTileRepl();
  virtual ~GetNextTileRepl();

  GetNextTileRepl(const GetNextTileRepl& from);

  inline GetNextTileRepl& operator=(const GetNextTileRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextTileRepl& default_instance();

  void Swap(GetNextTileRepl* other);

  // implements Message ----------------------------------------------

  inline GetNextTileRepl* New() const { return New(NULL); }

  GetNextTileRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextTileRepl& from);
  void MergeFrom(const GetNextTileRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextTileRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int32 cell_type_length = 3;
  void clear_cell_type_length();
  static const int kCellTypeLengthFieldNumber = 3;
  ::google::protobuf::int32 cell_type_length() const;
  void set_cell_type_length(::google::protobuf::int32 value);

  // optional int32 current_format = 4;
  void clear_current_format();
  static const int kCurrentFormatFieldNumber = 4;
  ::google::protobuf::int32 current_format() const;
  void set_current_format(::google::protobuf::int32 value);

  // optional int32 storage_format = 5;
  void clear_storage_format();
  static const int kStorageFormatFieldNumber = 5;
  ::google::protobuf::int32 storage_format() const;
  void set_storage_format(::google::protobuf::int32 value);

  // optional int32 data_length = 6;
  void clear_data_length();
  static const int kDataLengthFieldNumber = 6;
  ::google::protobuf::int32 data_length() const;
  void set_data_length(::google::protobuf::int32 value);

  // optional bytes data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextTileRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 cell_type_length_;
  ::google::protobuf::int32 current_format_;
  ::google::protobuf::int32 storage_format_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 data_length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextTileRepl* default_instance_;
};
// -------------------------------------------------------------------

class EndTransferReq : public ::google::protobuf::Message {
 public:
  EndTransferReq();
  virtual ~EndTransferReq();

  EndTransferReq(const EndTransferReq& from);

  inline EndTransferReq& operator=(const EndTransferReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndTransferReq& default_instance();

  void Swap(EndTransferReq* other);

  // implements Message ----------------------------------------------

  inline EndTransferReq* New() const { return New(NULL); }

  EndTransferReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndTransferReq& from);
  void MergeFrom(const EndTransferReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndTransferReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.EndTransferReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EndTransferReq* default_instance_;
};
// -------------------------------------------------------------------

class EndTransferRepl : public ::google::protobuf::Message {
 public:
  EndTransferRepl();
  virtual ~EndTransferRepl();

  EndTransferRepl(const EndTransferRepl& from);

  inline EndTransferRepl& operator=(const EndTransferRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EndTransferRepl& default_instance();

  void Swap(EndTransferRepl* other);

  // implements Message ----------------------------------------------

  inline EndTransferRepl* New() const { return New(NULL); }

  EndTransferRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EndTransferRepl& from);
  void MergeFrom(const EndTransferRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EndTransferRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.EndTransferRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EndTransferRepl* default_instance_;
};
// -------------------------------------------------------------------

class InitUpdateReq : public ::google::protobuf::Message {
 public:
  InitUpdateReq();
  virtual ~InitUpdateReq();

  InitUpdateReq(const InitUpdateReq& from);

  inline InitUpdateReq& operator=(const InitUpdateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitUpdateReq& default_instance();

  void Swap(InitUpdateReq* other);

  // implements Message ----------------------------------------------

  inline InitUpdateReq* New() const { return New(NULL); }

  InitUpdateReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitUpdateReq& from);
  void MergeFrom(const InitUpdateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitUpdateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.InitUpdateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InitUpdateReq* default_instance_;
};
// -------------------------------------------------------------------

class InitUpdateRepl : public ::google::protobuf::Message {
 public:
  InitUpdateRepl();
  virtual ~InitUpdateRepl();

  InitUpdateRepl(const InitUpdateRepl& from);

  inline InitUpdateRepl& operator=(const InitUpdateRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitUpdateRepl& default_instance();

  void Swap(InitUpdateRepl* other);

  // implements Message ----------------------------------------------

  inline InitUpdateRepl* New() const { return New(NULL); }

  InitUpdateRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitUpdateRepl& from);
  void MergeFrom(const InitUpdateRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitUpdateRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.InitUpdateRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InitUpdateRepl* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteQueryReq : public ::google::protobuf::Message {
 public:
  ExecuteQueryReq();
  virtual ~ExecuteQueryReq();

  ExecuteQueryReq(const ExecuteQueryReq& from);

  inline ExecuteQueryReq& operator=(const ExecuteQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteQueryReq& default_instance();

  void Swap(ExecuteQueryReq* other);

  // implements Message ----------------------------------------------

  inline ExecuteQueryReq* New() const { return New(NULL); }

  ExecuteQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteQueryReq& from);
  void MergeFrom(const ExecuteQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteQueryRepl : public ::google::protobuf::Message {
 public:
  ExecuteQueryRepl();
  virtual ~ExecuteQueryRepl();

  ExecuteQueryRepl(const ExecuteQueryRepl& from);

  inline ExecuteQueryRepl& operator=(const ExecuteQueryRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteQueryRepl& default_instance();

  void Swap(ExecuteQueryRepl* other);

  // implements Message ----------------------------------------------

  inline ExecuteQueryRepl* New() const { return New(NULL); }

  ExecuteQueryRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteQueryRepl& from);
  void MergeFrom(const ExecuteQueryRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteQueryRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 err_no = 2;
  void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  ::google::protobuf::int32 err_no() const;
  void set_err_no(::google::protobuf::int32 value);

  // optional int32 line_no = 3;
  void clear_line_no();
  static const int kLineNoFieldNumber = 3;
  ::google::protobuf::int32 line_no() const;
  void set_line_no(::google::protobuf::int32 value);

  // optional int32 col_no = 4;
  void clear_col_no();
  static const int kColNoFieldNumber = 4;
  ::google::protobuf::int32 col_no() const;
  void set_col_no(::google::protobuf::int32 value);

  // optional string token = 5;
  void clear_token();
  static const int kTokenFieldNumber = 5;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string type_name = 6;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 6;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string type_structure = 7;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 7;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteQueryRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 line_no_;
  ::google::protobuf::int32 col_no_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteQueryRepl* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteHttpQueryReq : public ::google::protobuf::Message {
 public:
  ExecuteHttpQueryReq();
  virtual ~ExecuteHttpQueryReq();

  ExecuteHttpQueryReq(const ExecuteHttpQueryReq& from);

  inline ExecuteHttpQueryReq& operator=(const ExecuteHttpQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteHttpQueryReq& default_instance();

  void Swap(ExecuteHttpQueryReq* other);

  // implements Message ----------------------------------------------

  inline ExecuteHttpQueryReq* New() const { return New(NULL); }

  ExecuteHttpQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteHttpQueryReq& from);
  void MergeFrom(const ExecuteHttpQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteHttpQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 data_length = 3;
  void clear_data_length();
  static const int kDataLengthFieldNumber = 3;
  ::google::protobuf::int32 data_length() const;
  void set_data_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteHttpQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 data_length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteHttpQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteHttpQueryRepl : public ::google::protobuf::Message {
 public:
  ExecuteHttpQueryRepl();
  virtual ~ExecuteHttpQueryRepl();

  ExecuteHttpQueryRepl(const ExecuteHttpQueryRepl& from);

  inline ExecuteHttpQueryRepl& operator=(const ExecuteHttpQueryRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteHttpQueryRepl& default_instance();

  void Swap(ExecuteHttpQueryRepl* other);

  // implements Message ----------------------------------------------

  inline ExecuteHttpQueryRepl* New() const { return New(NULL); }

  ExecuteHttpQueryRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteHttpQueryRepl& from);
  void MergeFrom(const ExecuteHttpQueryRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteHttpQueryRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteHttpQueryRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteHttpQueryRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetNextElementReq : public ::google::protobuf::Message {
 public:
  GetNextElementReq();
  virtual ~GetNextElementReq();

  GetNextElementReq(const GetNextElementReq& from);

  inline GetNextElementReq& operator=(const GetNextElementReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextElementReq& default_instance();

  void Swap(GetNextElementReq* other);

  // implements Message ----------------------------------------------

  inline GetNextElementReq* New() const { return New(NULL); }

  GetNextElementReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextElementReq& from);
  void MergeFrom(const GetNextElementReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextElementReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextElementReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextElementReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNextElementRepl : public ::google::protobuf::Message {
 public:
  GetNextElementRepl();
  virtual ~GetNextElementRepl();

  GetNextElementRepl(const GetNextElementRepl& from);

  inline GetNextElementRepl& operator=(const GetNextElementRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNextElementRepl& default_instance();

  void Swap(GetNextElementRepl* other);

  // implements Message ----------------------------------------------

  inline GetNextElementRepl* New() const { return New(NULL); }

  GetNextElementRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNextElementRepl& from);
  void MergeFrom(const GetNextElementRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNextElementRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 data_length = 3;
  void clear_data_length();
  static const int kDataLengthFieldNumber = 3;
  ::google::protobuf::int32 data_length() const;
  void set_data_length(::google::protobuf::int32 value);

  // optional bytes data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNextElementRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 data_length_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNextElementRepl* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteUpdateQueryReq : public ::google::protobuf::Message {
 public:
  ExecuteUpdateQueryReq();
  virtual ~ExecuteUpdateQueryReq();

  ExecuteUpdateQueryReq(const ExecuteUpdateQueryReq& from);

  inline ExecuteUpdateQueryReq& operator=(const ExecuteUpdateQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteUpdateQueryReq& default_instance();

  void Swap(ExecuteUpdateQueryReq* other);

  // implements Message ----------------------------------------------

  inline ExecuteUpdateQueryReq* New() const { return New(NULL); }

  ExecuteUpdateQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteUpdateQueryReq& from);
  void MergeFrom(const ExecuteUpdateQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteUpdateQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteUpdateQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteUpdateQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteUpdateQueryRepl : public ::google::protobuf::Message {
 public:
  ExecuteUpdateQueryRepl();
  virtual ~ExecuteUpdateQueryRepl();

  ExecuteUpdateQueryRepl(const ExecuteUpdateQueryRepl& from);

  inline ExecuteUpdateQueryRepl& operator=(const ExecuteUpdateQueryRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteUpdateQueryRepl& default_instance();

  void Swap(ExecuteUpdateQueryRepl* other);

  // implements Message ----------------------------------------------

  inline ExecuteUpdateQueryRepl* New() const { return New(NULL); }

  ExecuteUpdateQueryRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteUpdateQueryRepl& from);
  void MergeFrom(const ExecuteUpdateQueryRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteUpdateQueryRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 erroNo = 2;
  void clear_errono();
  static const int kErroNoFieldNumber = 2;
  ::google::protobuf::int32 errono() const;
  void set_errono(::google::protobuf::int32 value);

  // optional int32 lineNo = 3;
  void clear_lineno();
  static const int kLineNoFieldNumber = 3;
  ::google::protobuf::int32 lineno() const;
  void set_lineno(::google::protobuf::int32 value);

  // optional int32 colNo = 4;
  void clear_colno();
  static const int kColNoFieldNumber = 4;
  ::google::protobuf::int32 colno() const;
  void set_colno(::google::protobuf::int32 value);

  // optional string token = 5;
  void clear_token();
  static const int kTokenFieldNumber = 5;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteUpdateQueryRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 errono_;
  ::google::protobuf::int32 lineno_;
  ::google::protobuf::int32 colno_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteUpdateQueryRepl* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteInsertQueryReq : public ::google::protobuf::Message {
 public:
  ExecuteInsertQueryReq();
  virtual ~ExecuteInsertQueryReq();

  ExecuteInsertQueryReq(const ExecuteInsertQueryReq& from);

  inline ExecuteInsertQueryReq& operator=(const ExecuteInsertQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteInsertQueryReq& default_instance();

  void Swap(ExecuteInsertQueryReq* other);

  // implements Message ----------------------------------------------

  inline ExecuteInsertQueryReq* New() const { return New(NULL); }

  ExecuteInsertQueryReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteInsertQueryReq& from);
  void MergeFrom(const ExecuteInsertQueryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteInsertQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteInsertQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteInsertQueryReq* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteInsertQueryRepl : public ::google::protobuf::Message {
 public:
  ExecuteInsertQueryRepl();
  virtual ~ExecuteInsertQueryRepl();

  ExecuteInsertQueryRepl(const ExecuteInsertQueryRepl& from);

  inline ExecuteInsertQueryRepl& operator=(const ExecuteInsertQueryRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteInsertQueryRepl& default_instance();

  void Swap(ExecuteInsertQueryRepl* other);

  // implements Message ----------------------------------------------

  inline ExecuteInsertQueryRepl* New() const { return New(NULL); }

  ExecuteInsertQueryRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteInsertQueryRepl& from);
  void MergeFrom(const ExecuteInsertQueryRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteInsertQueryRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 erroNo = 2;
  void clear_errono();
  static const int kErroNoFieldNumber = 2;
  ::google::protobuf::int32 errono() const;
  void set_errono(::google::protobuf::int32 value);

  // optional int32 lineNo = 3;
  void clear_lineno();
  static const int kLineNoFieldNumber = 3;
  ::google::protobuf::int32 lineno() const;
  void set_lineno(::google::protobuf::int32 value);

  // optional int32 colNo = 4;
  void clear_colno();
  static const int kColNoFieldNumber = 4;
  ::google::protobuf::int32 colno() const;
  void set_colno(::google::protobuf::int32 value);

  // optional string token = 5;
  void clear_token();
  static const int kTokenFieldNumber = 5;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string type_name = 6;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 6;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional string type_structure = 7;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 7;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // @@protoc_insertion_point(class_scope:rasnet.service.ExecuteInsertQueryRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 errono_;
  ::google::protobuf::int32 lineno_;
  ::google::protobuf::int32 colno_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteInsertQueryRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetNewOidReq : public ::google::protobuf::Message {
 public:
  GetNewOidReq();
  virtual ~GetNewOidReq();

  GetNewOidReq(const GetNewOidReq& from);

  inline GetNewOidReq& operator=(const GetNewOidReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewOidReq& default_instance();

  void Swap(GetNewOidReq* other);

  // implements Message ----------------------------------------------

  inline GetNewOidReq* New() const { return New(NULL); }

  GetNewOidReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewOidReq& from);
  void MergeFrom(const GetNewOidReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNewOidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional int32 object_type = 2;
  void clear_object_type();
  static const int kObjectTypeFieldNumber = 2;
  ::google::protobuf::int32 object_type() const;
  void set_object_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNewOidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 object_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNewOidReq* default_instance_;
};
// -------------------------------------------------------------------

class GetNewOidRepl : public ::google::protobuf::Message {
 public:
  GetNewOidRepl();
  virtual ~GetNewOidRepl();

  GetNewOidRepl(const GetNewOidRepl& from);

  inline GetNewOidRepl& operator=(const GetNewOidRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNewOidRepl& default_instance();

  void Swap(GetNewOidRepl* other);

  // implements Message ----------------------------------------------

  inline GetNewOidRepl* New() const { return New(NULL); }

  GetNewOidRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNewOidRepl& from);
  void MergeFrom(const GetNewOidRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNewOidRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string oid = 1;
  void clear_oid();
  static const int kOidFieldNumber = 1;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetNewOidRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetNewOidRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetObjectTypeReq : public ::google::protobuf::Message {
 public:
  GetObjectTypeReq();
  virtual ~GetObjectTypeReq();

  GetObjectTypeReq(const GetObjectTypeReq& from);

  inline GetObjectTypeReq& operator=(const GetObjectTypeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetObjectTypeReq& default_instance();

  void Swap(GetObjectTypeReq* other);

  // implements Message ----------------------------------------------

  inline GetObjectTypeReq* New() const { return New(NULL); }

  GetObjectTypeReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetObjectTypeReq& from);
  void MergeFrom(const GetObjectTypeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetObjectTypeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string oid = 2;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  const ::std::string& oid() const;
  void set_oid(const ::std::string& value);
  void set_oid(const char* value);
  void set_oid(const char* value, size_t size);
  ::std::string* mutable_oid();
  ::std::string* release_oid();
  void set_allocated_oid(::std::string* oid);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetObjectTypeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr oid_;
  ::google::protobuf::int32 client_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetObjectTypeReq* default_instance_;
};
// -------------------------------------------------------------------

class GetObjectTypeRepl : public ::google::protobuf::Message {
 public:
  GetObjectTypeRepl();
  virtual ~GetObjectTypeRepl();

  GetObjectTypeRepl(const GetObjectTypeRepl& from);

  inline GetObjectTypeRepl& operator=(const GetObjectTypeRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetObjectTypeRepl& default_instance();

  void Swap(GetObjectTypeRepl* other);

  // implements Message ----------------------------------------------

  inline GetObjectTypeRepl* New() const { return New(NULL); }

  GetObjectTypeRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetObjectTypeRepl& from);
  void MergeFrom(const GetObjectTypeRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetObjectTypeRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 object_type = 2;
  void clear_object_type();
  static const int kObjectTypeFieldNumber = 2;
  ::google::protobuf::int32 object_type() const;
  void set_object_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetObjectTypeRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 object_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetObjectTypeRepl* default_instance_;
};
// -------------------------------------------------------------------

class GetTypeStructureReq : public ::google::protobuf::Message {
 public:
  GetTypeStructureReq();
  virtual ~GetTypeStructureReq();

  GetTypeStructureReq(const GetTypeStructureReq& from);

  inline GetTypeStructureReq& operator=(const GetTypeStructureReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTypeStructureReq& default_instance();

  void Swap(GetTypeStructureReq* other);

  // implements Message ----------------------------------------------

  inline GetTypeStructureReq* New() const { return New(NULL); }

  GetTypeStructureReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTypeStructureReq& from);
  void MergeFrom(const GetTypeStructureReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTypeStructureReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional string type_name = 2;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 2;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // optional int32 type_type = 3;
  void clear_type_type();
  static const int kTypeTypeFieldNumber = 3;
  ::google::protobuf::int32 type_type() const;
  void set_type_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetTypeStructureReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 type_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetTypeStructureReq* default_instance_;
};
// -------------------------------------------------------------------

class GetTypeStructureRepl : public ::google::protobuf::Message {
 public:
  GetTypeStructureRepl();
  virtual ~GetTypeStructureRepl();

  GetTypeStructureRepl(const GetTypeStructureRepl& from);

  inline GetTypeStructureRepl& operator=(const GetTypeStructureRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTypeStructureRepl& default_instance();

  void Swap(GetTypeStructureRepl* other);

  // implements Message ----------------------------------------------

  inline GetTypeStructureRepl* New() const { return New(NULL); }

  GetTypeStructureRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTypeStructureRepl& from);
  void MergeFrom(const GetTypeStructureRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTypeStructureRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string type_structure = 2;
  void clear_type_structure();
  static const int kTypeStructureFieldNumber = 2;
  const ::std::string& type_structure() const;
  void set_type_structure(const ::std::string& value);
  void set_type_structure(const char* value);
  void set_type_structure(const char* value, size_t size);
  ::std::string* mutable_type_structure();
  ::std::string* release_type_structure();
  void set_allocated_type_structure(::std::string* type_structure);

  // @@protoc_insertion_point(class_scope:rasnet.service.GetTypeStructureRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_structure_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetTypeStructureRepl* default_instance_;
};
// -------------------------------------------------------------------

class SetFormatReq : public ::google::protobuf::Message {
 public:
  SetFormatReq();
  virtual ~SetFormatReq();

  SetFormatReq(const SetFormatReq& from);

  inline SetFormatReq& operator=(const SetFormatReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormatReq& default_instance();

  void Swap(SetFormatReq* other);

  // implements Message ----------------------------------------------

  inline SetFormatReq* New() const { return New(NULL); }

  SetFormatReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormatReq& from);
  void MergeFrom(const SetFormatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetFormatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_id = 1;
  void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // optional int32 transfer_format = 2;
  void clear_transfer_format();
  static const int kTransferFormatFieldNumber = 2;
  ::google::protobuf::int32 transfer_format() const;
  void set_transfer_format(::google::protobuf::int32 value);

  // optional int32 format = 3;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  ::google::protobuf::int32 format() const;
  void set_format(::google::protobuf::int32 value);

  // optional string format_params = 4;
  void clear_format_params();
  static const int kFormatParamsFieldNumber = 4;
  const ::std::string& format_params() const;
  void set_format_params(const ::std::string& value);
  void set_format_params(const char* value);
  void set_format_params(const char* value, size_t size);
  ::std::string* mutable_format_params();
  ::std::string* release_format_params();
  void set_allocated_format_params(::std::string* format_params);

  // @@protoc_insertion_point(class_scope:rasnet.service.SetFormatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_id_;
  ::google::protobuf::int32 transfer_format_;
  ::google::protobuf::internal::ArenaStringPtr format_params_;
  ::google::protobuf::int32 format_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetFormatReq* default_instance_;
};
// -------------------------------------------------------------------

class SetFormatRepl : public ::google::protobuf::Message {
 public:
  SetFormatRepl();
  virtual ~SetFormatRepl();

  SetFormatRepl(const SetFormatRepl& from);

  inline SetFormatRepl& operator=(const SetFormatRepl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFormatRepl& default_instance();

  void Swap(SetFormatRepl* other);

  // implements Message ----------------------------------------------

  inline SetFormatRepl* New() const { return New(NULL); }

  SetFormatRepl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFormatRepl& from);
  void MergeFrom(const SetFormatRepl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetFormatRepl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rasnet.service.SetFormatRepl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetFormatRepl* default_instance_;
};
// -------------------------------------------------------------------

class KeepAliveRequest : public ::google::protobuf::Message {
 public:
  KeepAliveRequest();
  virtual ~KeepAliveRequest();

  KeepAliveRequest(const KeepAliveRequest& from);

  inline KeepAliveRequest& operator=(const KeepAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeepAliveRequest& default_instance();

  void Swap(KeepAliveRequest* other);

  // implements Message ----------------------------------------------

  inline KeepAliveRequest* New() const { return New(NULL); }

  KeepAliveRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeepAliveRequest& from);
  void MergeFrom(const KeepAliveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeepAliveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string client_uuid = 1;
  void clear_client_uuid();
  static const int kClientUuidFieldNumber = 1;
  const ::std::string& client_uuid() const;
  void set_client_uuid(const ::std::string& value);
  void set_client_uuid(const char* value);
  void set_client_uuid(const char* value, size_t size);
  ::std::string* mutable_client_uuid();
  ::std::string* release_client_uuid();
  void set_allocated_client_uuid(::std::string* client_uuid);

  // optional string session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // @@protoc_insertion_point(class_scope:rasnet.service.KeepAliveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr client_uuid_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_AssignDesc_client_5frassrvr_5fservice_2eproto();
  friend void protobuf_ShutdownFile_client_5frassrvr_5fservice_2eproto();

  void InitAsDefaultInstance();
  static KeepAliveRequest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenServerDatabaseReq

// optional int32 client_id = 1;
inline void OpenServerDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 OpenServerDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.OpenServerDatabaseReq.client_id)
  return client_id_;
}
inline void OpenServerDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.OpenServerDatabaseReq.client_id)
}

// optional string database_name = 2;
inline void OpenServerDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenServerDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.OpenServerDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenServerDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.OpenServerDatabaseReq.database_name)
}
inline void OpenServerDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.OpenServerDatabaseReq.database_name)
}
inline void OpenServerDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.OpenServerDatabaseReq.database_name)
}
inline ::std::string* OpenServerDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.OpenServerDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenServerDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenServerDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.OpenServerDatabaseReq.database_name)
}

// -------------------------------------------------------------------

// OpenServerDatabaseRepl

// -------------------------------------------------------------------

// CloseServerDatabaseReq

// optional int32 client_id = 1;
inline void CloseServerDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 CloseServerDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CloseServerDatabaseReq.client_id)
  return client_id_;
}
inline void CloseServerDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CloseServerDatabaseReq.client_id)
}

// -------------------------------------------------------------------

// CreateDatabaseReq

// optional int32 client_id = 1;
inline void CreateDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 CreateDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CreateDatabaseReq.client_id)
  return client_id_;
}
inline void CreateDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CreateDatabaseReq.client_id)
}

// optional string database_name = 2;
inline void CreateDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CreateDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.CreateDatabaseReq.database_name)
}
inline void CreateDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.CreateDatabaseReq.database_name)
}
inline void CreateDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.CreateDatabaseReq.database_name)
}
inline ::std::string* CreateDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.CreateDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.CreateDatabaseReq.database_name)
}

// -------------------------------------------------------------------

// CreateDatabaseRepl

// -------------------------------------------------------------------

// DestroyDatabaseReq

// optional int32 client_id = 1;
inline void DestroyDatabaseReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 DestroyDatabaseReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DestroyDatabaseReq.client_id)
  return client_id_;
}
inline void DestroyDatabaseReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DestroyDatabaseReq.client_id)
}

// optional string database_name = 2;
inline void DestroyDatabaseReq::clear_database_name() {
  database_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyDatabaseReq::database_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DestroyDatabaseReq.database_name)
  return database_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyDatabaseReq::set_database_name(const ::std::string& value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DestroyDatabaseReq.database_name)
}
inline void DestroyDatabaseReq::set_database_name(const char* value) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DestroyDatabaseReq.database_name)
}
inline void DestroyDatabaseReq::set_database_name(const char* value, size_t size) {
  
  database_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DestroyDatabaseReq.database_name)
}
inline ::std::string* DestroyDatabaseReq::mutable_database_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DestroyDatabaseReq.database_name)
  return database_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyDatabaseReq::release_database_name() {
  
  return database_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyDatabaseReq::set_allocated_database_name(::std::string* database_name) {
  if (database_name != NULL) {
    
  } else {
    
  }
  database_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DestroyDatabaseReq.database_name)
}

// -------------------------------------------------------------------

// DestroyDatabaseRepl

// -------------------------------------------------------------------

// BeginTransactionReq

// optional int32 client_id = 1;
inline void BeginTransactionReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 BeginTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.BeginTransactionReq.client_id)
  return client_id_;
}
inline void BeginTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.BeginTransactionReq.client_id)
}

// optional bool rw = 2;
inline void BeginTransactionReq::clear_rw() {
  rw_ = false;
}
inline bool BeginTransactionReq::rw() const {
  // @@protoc_insertion_point(field_get:rasnet.service.BeginTransactionReq.rw)
  return rw_;
}
inline void BeginTransactionReq::set_rw(bool value) {
  
  rw_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.BeginTransactionReq.rw)
}

// -------------------------------------------------------------------

// BeginTransactionRepl

// -------------------------------------------------------------------

// CommitTransactionReq

// optional int32 client_id = 1;
inline void CommitTransactionReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 CommitTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.CommitTransactionReq.client_id)
  return client_id_;
}
inline void CommitTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.CommitTransactionReq.client_id)
}

// -------------------------------------------------------------------

// CommitTransactionRepl

// -------------------------------------------------------------------

// AbortTransactionReq

// optional int32 client_id = 1;
inline void AbortTransactionReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 AbortTransactionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.AbortTransactionReq.client_id)
  return client_id_;
}
inline void AbortTransactionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.AbortTransactionReq.client_id)
}

// -------------------------------------------------------------------

// AbortTransactionRepl

// -------------------------------------------------------------------

// IsTransactionOpenReq

// optional int32 client_id = 1;
inline void IsTransactionOpenReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 IsTransactionOpenReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.IsTransactionOpenReq.client_id)
  return client_id_;
}
inline void IsTransactionOpenReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.IsTransactionOpenReq.client_id)
}

// -------------------------------------------------------------------

// IsTransactionOpenRepl

// optional bool isOpen = 1;
inline void IsTransactionOpenRepl::clear_isopen() {
  isopen_ = false;
}
inline bool IsTransactionOpenRepl::isopen() const {
  // @@protoc_insertion_point(field_get:rasnet.service.IsTransactionOpenRepl.isOpen)
  return isopen_;
}
inline void IsTransactionOpenRepl::set_isopen(bool value) {
  
  isopen_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.IsTransactionOpenRepl.isOpen)
}

// -------------------------------------------------------------------

// StartInsertMDDReq

// optional int32 client_id = 1;
inline void StartInsertMDDReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 StartInsertMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.client_id)
  return client_id_;
}
inline void StartInsertMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.client_id)
}

// optional string collName = 2;
inline void StartInsertMDDReq::clear_collname() {
  collname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertMDDReq::collname() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.collName)
  return collname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_collname(const ::std::string& value) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.collName)
}
inline void StartInsertMDDReq::set_collname(const char* value) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.collName)
}
inline void StartInsertMDDReq::set_collname(const char* value, size_t size) {
  
  collname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.collName)
}
inline ::std::string* StartInsertMDDReq::mutable_collname() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.collName)
  return collname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertMDDReq::release_collname() {
  
  return collname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_allocated_collname(::std::string* collname) {
  if (collname != NULL) {
    
  } else {
    
  }
  collname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collname);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.collName)
}

// optional bytes domain = 3;
inline void StartInsertMDDReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertMDDReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.domain)
}
inline void StartInsertMDDReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.domain)
}
inline void StartInsertMDDReq::set_domain(const void* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.domain)
}
inline ::std::string* StartInsertMDDReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertMDDReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.domain)
}

// optional int32 type_length = 4;
inline void StartInsertMDDReq::clear_type_length() {
  type_length_ = 0;
}
inline ::google::protobuf::int32 StartInsertMDDReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.type_length)
  return type_length_;
}
inline void StartInsertMDDReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.type_length)
}

// optional string type_name = 5;
inline void StartInsertMDDReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertMDDReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.type_name)
}
inline void StartInsertMDDReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.type_name)
}
inline void StartInsertMDDReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.type_name)
}
inline ::std::string* StartInsertMDDReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertMDDReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.type_name)
}

// optional string oid = 6;
inline void StartInsertMDDReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertMDDReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDReq.oid)
}
inline void StartInsertMDDReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertMDDReq.oid)
}
inline void StartInsertMDDReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertMDDReq.oid)
}
inline ::std::string* StartInsertMDDReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertMDDReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertMDDReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertMDDReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertMDDReq.oid)
}

// -------------------------------------------------------------------

// StartInsertMDDRepl

// optional int32 status = 1;
inline void StartInsertMDDRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 StartInsertMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertMDDRepl.status)
  return status_;
}
inline void StartInsertMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertMDDRepl.status)
}

// -------------------------------------------------------------------

// InsertTileReq

// optional int32 client_id = 1;
inline void InsertTileReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 InsertTileReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.client_id)
  return client_id_;
}
inline void InsertTileReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.client_id)
}

// optional bool persistent = 2;
inline void InsertTileReq::clear_persistent() {
  persistent_ = false;
}
inline bool InsertTileReq::persistent() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.persistent)
  return persistent_;
}
inline void InsertTileReq::set_persistent(bool value) {
  
  persistent_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.persistent)
}

// optional string domain = 3;
inline void InsertTileReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertTileReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertTileReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.domain)
}
inline void InsertTileReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertTileReq.domain)
}
inline void InsertTileReq::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertTileReq.domain)
}
inline ::std::string* InsertTileReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertTileReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertTileReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertTileReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertTileReq.domain)
}

// optional int32 type_length = 4;
inline void InsertTileReq::clear_type_length() {
  type_length_ = 0;
}
inline ::google::protobuf::int32 InsertTileReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.type_length)
  return type_length_;
}
inline void InsertTileReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.type_length)
}

// optional int32 current_format = 5;
inline void InsertTileReq::clear_current_format() {
  current_format_ = 0;
}
inline ::google::protobuf::int32 InsertTileReq::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.current_format)
  return current_format_;
}
inline void InsertTileReq::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.current_format)
}

// optional int32 storage_format = 6;
inline void InsertTileReq::clear_storage_format() {
  storage_format_ = 0;
}
inline ::google::protobuf::int32 InsertTileReq::storage_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.storage_format)
  return storage_format_;
}
inline void InsertTileReq::set_storage_format(::google::protobuf::int32 value) {
  
  storage_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.storage_format)
}

// optional bytes data = 7;
inline void InsertTileReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertTileReq::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertTileReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.data)
}
inline void InsertTileReq::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertTileReq.data)
}
inline void InsertTileReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertTileReq.data)
}
inline ::std::string* InsertTileReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertTileReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertTileReq::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertTileReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertTileReq.data)
}

// optional int32 data_length = 8;
inline void InsertTileReq::clear_data_length() {
  data_length_ = 0;
}
inline ::google::protobuf::int32 InsertTileReq::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileReq.data_length)
  return data_length_;
}
inline void InsertTileReq::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileReq.data_length)
}

// -------------------------------------------------------------------

// InsertTileRepl

// optional int32 status = 1;
inline void InsertTileRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 InsertTileRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertTileRepl.status)
  return status_;
}
inline void InsertTileRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertTileRepl.status)
}

// -------------------------------------------------------------------

// EndInsertMDDReq

// optional int32 client_id = 1;
inline void EndInsertMDDReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 EndInsertMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDReq.client_id)
  return client_id_;
}
inline void EndInsertMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDReq.client_id)
}

// optional bool persistent = 2;
inline void EndInsertMDDReq::clear_persistent() {
  persistent_ = false;
}
inline bool EndInsertMDDReq::persistent() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDReq.persistent)
  return persistent_;
}
inline void EndInsertMDDReq::set_persistent(bool value) {
  
  persistent_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDReq.persistent)
}

// -------------------------------------------------------------------

// EndInsertMDDRepl

// optional int32 status = 1;
inline void EndInsertMDDRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 EndInsertMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndInsertMDDRepl.status)
  return status_;
}
inline void EndInsertMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndInsertMDDRepl.status)
}

// -------------------------------------------------------------------

// StartInsertTransMDDReq

// optional int32 client_id = 1;
inline void StartInsertTransMDDReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 StartInsertTransMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.client_id)
  return client_id_;
}
inline void StartInsertTransMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.client_id)
}

// optional string domain = 2;
inline void StartInsertTransMDDReq::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertTransMDDReq::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertTransMDDReq::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.domain)
}
inline void StartInsertTransMDDReq::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertTransMDDReq.domain)
}
inline void StartInsertTransMDDReq::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertTransMDDReq.domain)
}
inline ::std::string* StartInsertTransMDDReq::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertTransMDDReq.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertTransMDDReq::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertTransMDDReq::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertTransMDDReq.domain)
}

// optional int32 type_length = 3;
inline void StartInsertTransMDDReq::clear_type_length() {
  type_length_ = 0;
}
inline ::google::protobuf::int32 StartInsertTransMDDReq::type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.type_length)
  return type_length_;
}
inline void StartInsertTransMDDReq::set_type_length(::google::protobuf::int32 value) {
  
  type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.type_length)
}

// optional string type_name = 4;
inline void StartInsertTransMDDReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartInsertTransMDDReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertTransMDDReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDReq.type_name)
}
inline void StartInsertTransMDDReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.StartInsertTransMDDReq.type_name)
}
inline void StartInsertTransMDDReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.StartInsertTransMDDReq.type_name)
}
inline ::std::string* StartInsertTransMDDReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.StartInsertTransMDDReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartInsertTransMDDReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartInsertTransMDDReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.StartInsertTransMDDReq.type_name)
}

// -------------------------------------------------------------------

// StartInsertTransMDDRepl

// optional int32 status = 1;
inline void StartInsertTransMDDRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 StartInsertTransMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.StartInsertTransMDDRepl.status)
  return status_;
}
inline void StartInsertTransMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.StartInsertTransMDDRepl.status)
}

// -------------------------------------------------------------------

// InsertCollectionReq

// optional int32 client_id = 1;
inline void InsertCollectionReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 InsertCollectionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.client_id)
  return client_id_;
}
inline void InsertCollectionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.client_id)
}

// optional string collection_name = 2;
inline void InsertCollectionReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertCollectionReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.collection_name)
}
inline void InsertCollectionReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.collection_name)
}
inline void InsertCollectionReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.collection_name)
}
inline ::std::string* InsertCollectionReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertCollectionReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.collection_name)
}

// optional string type_name = 3;
inline void InsertCollectionReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertCollectionReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.type_name)
}
inline void InsertCollectionReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.type_name)
}
inline void InsertCollectionReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.type_name)
}
inline ::std::string* InsertCollectionReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertCollectionReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.type_name)
}

// optional string oid = 4;
inline void InsertCollectionReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertCollectionReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionReq.oid)
}
inline void InsertCollectionReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.InsertCollectionReq.oid)
}
inline void InsertCollectionReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.InsertCollectionReq.oid)
}
inline ::std::string* InsertCollectionReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.InsertCollectionReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertCollectionReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertCollectionReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.InsertCollectionReq.oid)
}

// -------------------------------------------------------------------

// InsertCollectionRepl

// optional int32 status = 1;
inline void InsertCollectionRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 InsertCollectionRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InsertCollectionRepl.status)
  return status_;
}
inline void InsertCollectionRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InsertCollectionRepl.status)
}

// -------------------------------------------------------------------

// DeleteCollectionByNameReq

// optional int32 client_id = 1;
inline void DeleteCollectionByNameReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 DeleteCollectionByNameReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameReq.client_id)
  return client_id_;
}
inline void DeleteCollectionByNameReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameReq.client_id)
}

// optional string collection_name = 2;
inline void DeleteCollectionByNameReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteCollectionByNameReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteCollectionByNameReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
inline void DeleteCollectionByNameReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
inline void DeleteCollectionByNameReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DeleteCollectionByNameReq.collection_name)
}
inline ::std::string* DeleteCollectionByNameReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DeleteCollectionByNameReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteCollectionByNameReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteCollectionByNameReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DeleteCollectionByNameReq.collection_name)
}

// -------------------------------------------------------------------

// DeleteCollectionByNameRepl

// optional int32 status = 1;
inline void DeleteCollectionByNameRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 DeleteCollectionByNameRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByNameRepl.status)
  return status_;
}
inline void DeleteCollectionByNameRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByNameRepl.status)
}

// -------------------------------------------------------------------

// DeleteCollectionByOidReq

// optional int32 client_id = 1;
inline void DeleteCollectionByOidReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 DeleteCollectionByOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidReq.client_id)
  return client_id_;
}
inline void DeleteCollectionByOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidReq.client_id)
}

// optional string oid = 2;
inline void DeleteCollectionByOidReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteCollectionByOidReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteCollectionByOidReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidReq.oid)
}
inline void DeleteCollectionByOidReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.DeleteCollectionByOidReq.oid)
}
inline void DeleteCollectionByOidReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.DeleteCollectionByOidReq.oid)
}
inline ::std::string* DeleteCollectionByOidReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.DeleteCollectionByOidReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteCollectionByOidReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteCollectionByOidReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.DeleteCollectionByOidReq.oid)
}

// -------------------------------------------------------------------

// DeleteCollectionByOidRepl

// optional int32 status = 1;
inline void DeleteCollectionByOidRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 DeleteCollectionByOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.DeleteCollectionByOidRepl.status)
  return status_;
}
inline void DeleteCollectionByOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.DeleteCollectionByOidRepl.status)
}

// -------------------------------------------------------------------

// GetCollectionByNameOrOidReq

// optional int32 client_id = 1;
inline void GetCollectionByNameOrOidReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetCollectionByNameOrOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.client_id)
  return client_id_;
}
inline void GetCollectionByNameOrOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.client_id)
}

// optional string collection_identifier = 2;
inline void GetCollectionByNameOrOidReq::clear_collection_identifier() {
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollectionByNameOrOidReq::collection_identifier() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
  return collection_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidReq::set_collection_identifier(const ::std::string& value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
inline void GetCollectionByNameOrOidReq::set_collection_identifier(const char* value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
inline void GetCollectionByNameOrOidReq::set_collection_identifier(const char* value, size_t size) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}
inline ::std::string* GetCollectionByNameOrOidReq::mutable_collection_identifier() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
  return collection_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollectionByNameOrOidReq::release_collection_identifier() {
  
  return collection_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidReq::set_allocated_collection_identifier(::std::string* collection_identifier) {
  if (collection_identifier != NULL) {
    
  } else {
    
  }
  collection_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_identifier);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidReq.collection_identifier)
}

// optional bool is_name = 3;
inline void GetCollectionByNameOrOidReq::clear_is_name() {
  is_name_ = false;
}
inline bool GetCollectionByNameOrOidReq::is_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidReq.is_name)
  return is_name_;
}
inline void GetCollectionByNameOrOidReq::set_is_name(bool value) {
  
  is_name_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidReq.is_name)
}

// -------------------------------------------------------------------

// GetCollectionByNameOrOidRepl

// optional string type_name = 1;
inline void GetCollectionByNameOrOidRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollectionByNameOrOidRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
inline void GetCollectionByNameOrOidRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
inline void GetCollectionByNameOrOidRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}
inline ::std::string* GetCollectionByNameOrOidRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollectionByNameOrOidRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.type_name)
}

// optional string type_structure = 2;
inline void GetCollectionByNameOrOidRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollectionByNameOrOidRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
inline void GetCollectionByNameOrOidRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
inline void GetCollectionByNameOrOidRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}
inline ::std::string* GetCollectionByNameOrOidRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollectionByNameOrOidRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.type_structure)
}

// optional string oid = 3;
inline void GetCollectionByNameOrOidRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollectionByNameOrOidRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
inline void GetCollectionByNameOrOidRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
inline void GetCollectionByNameOrOidRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}
inline ::std::string* GetCollectionByNameOrOidRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollectionByNameOrOidRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.oid)
}

// optional string collection_name = 4;
inline void GetCollectionByNameOrOidRepl::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollectionByNameOrOidRepl::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
inline void GetCollectionByNameOrOidRepl::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
inline void GetCollectionByNameOrOidRepl::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}
inline ::std::string* GetCollectionByNameOrOidRepl::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollectionByNameOrOidRepl::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollectionByNameOrOidRepl::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollectionByNameOrOidRepl.collection_name)
}

// optional int32 status = 5;
inline void GetCollectionByNameOrOidRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetCollectionByNameOrOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollectionByNameOrOidRepl.status)
  return status_;
}
inline void GetCollectionByNameOrOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollectionByNameOrOidRepl.status)
}

// -------------------------------------------------------------------

// GetCollOidsByNameOrOidReq

// optional int32 client_id = 1;
inline void GetCollOidsByNameOrOidReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetCollOidsByNameOrOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.client_id)
  return client_id_;
}
inline void GetCollOidsByNameOrOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.client_id)
}

// optional string collection_identifier = 2;
inline void GetCollOidsByNameOrOidReq::clear_collection_identifier() {
  collection_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollOidsByNameOrOidReq::collection_identifier() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
  return collection_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidReq::set_collection_identifier(const ::std::string& value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
inline void GetCollOidsByNameOrOidReq::set_collection_identifier(const char* value) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
inline void GetCollOidsByNameOrOidReq::set_collection_identifier(const char* value, size_t size) {
  
  collection_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}
inline ::std::string* GetCollOidsByNameOrOidReq::mutable_collection_identifier() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
  return collection_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollOidsByNameOrOidReq::release_collection_identifier() {
  
  return collection_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidReq::set_allocated_collection_identifier(::std::string* collection_identifier) {
  if (collection_identifier != NULL) {
    
  } else {
    
  }
  collection_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_identifier);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidReq.collection_identifier)
}

// optional bool is_name = 3;
inline void GetCollOidsByNameOrOidReq::clear_is_name() {
  is_name_ = false;
}
inline bool GetCollOidsByNameOrOidReq::is_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidReq.is_name)
  return is_name_;
}
inline void GetCollOidsByNameOrOidReq::set_is_name(bool value) {
  
  is_name_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidReq.is_name)
}

// -------------------------------------------------------------------

// GetCollOidsByNameOrOidRepl

// optional int32 status = 1;
inline void GetCollOidsByNameOrOidRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetCollOidsByNameOrOidRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.status)
  return status_;
}
inline void GetCollOidsByNameOrOidRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.status)
}

// optional string type_name = 2;
inline void GetCollOidsByNameOrOidRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollOidsByNameOrOidRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
inline void GetCollOidsByNameOrOidRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
inline void GetCollOidsByNameOrOidRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}
inline ::std::string* GetCollOidsByNameOrOidRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollOidsByNameOrOidRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.type_name)
}

// optional string type_structure = 3;
inline void GetCollOidsByNameOrOidRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollOidsByNameOrOidRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
inline void GetCollOidsByNameOrOidRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
inline void GetCollOidsByNameOrOidRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}
inline ::std::string* GetCollOidsByNameOrOidRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollOidsByNameOrOidRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.type_structure)
}

// optional string oids_string = 4;
inline void GetCollOidsByNameOrOidRepl::clear_oids_string() {
  oids_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollOidsByNameOrOidRepl::oids_string() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
  return oids_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_oids_string(const ::std::string& value) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
inline void GetCollOidsByNameOrOidRepl::set_oids_string(const char* value) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
inline void GetCollOidsByNameOrOidRepl::set_oids_string(const char* value, size_t size) {
  
  oids_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}
inline ::std::string* GetCollOidsByNameOrOidRepl::mutable_oids_string() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
  return oids_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollOidsByNameOrOidRepl::release_oids_string() {
  
  return oids_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_allocated_oids_string(::std::string* oids_string) {
  if (oids_string != NULL) {
    
  } else {
    
  }
  oids_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oids_string);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.oids_string)
}

// optional string collection_name = 5;
inline void GetCollOidsByNameOrOidRepl::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCollOidsByNameOrOidRepl::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
inline void GetCollOidsByNameOrOidRepl::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
inline void GetCollOidsByNameOrOidRepl::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}
inline ::std::string* GetCollOidsByNameOrOidRepl::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCollOidsByNameOrOidRepl::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCollOidsByNameOrOidRepl::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetCollOidsByNameOrOidRepl.collection_name)
}

// repeated string oid_set = 6;
inline int GetCollOidsByNameOrOidRepl::oid_set_size() const {
  return oid_set_.size();
}
inline void GetCollOidsByNameOrOidRepl::clear_oid_set() {
  oid_set_.Clear();
}
inline const ::std::string& GetCollOidsByNameOrOidRepl::oid_set(int index) const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_.Get(index);
}
inline ::std::string* GetCollOidsByNameOrOidRepl::mutable_oid_set(int index) {
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_.Mutable(index);
}
inline void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  oid_set_.Mutable(index)->assign(value);
}
inline void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const char* value) {
  oid_set_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
inline void GetCollOidsByNameOrOidRepl::set_oid_set(int index, const char* value, size_t size) {
  oid_set_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
inline ::std::string* GetCollOidsByNameOrOidRepl::add_oid_set() {
  return oid_set_.Add();
}
inline void GetCollOidsByNameOrOidRepl::add_oid_set(const ::std::string& value) {
  oid_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
inline void GetCollOidsByNameOrOidRepl::add_oid_set(const char* value) {
  oid_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
inline void GetCollOidsByNameOrOidRepl::add_oid_set(const char* value, size_t size) {
  oid_set_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetCollOidsByNameOrOidRepl::oid_set() const {
  // @@protoc_insertion_point(field_list:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return oid_set_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetCollOidsByNameOrOidRepl::mutable_oid_set() {
  // @@protoc_insertion_point(field_mutable_list:rasnet.service.GetCollOidsByNameOrOidRepl.oid_set)
  return &oid_set_;
}

// -------------------------------------------------------------------

// RemoveObjectFromCollectionReq

// optional int32 client_id = 1;
inline void RemoveObjectFromCollectionReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 RemoveObjectFromCollectionReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.client_id)
  return client_id_;
}
inline void RemoveObjectFromCollectionReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.client_id)
}

// optional string collection_name = 2;
inline void RemoveObjectFromCollectionReq::clear_collection_name() {
  collection_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveObjectFromCollectionReq::collection_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
  return collection_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveObjectFromCollectionReq::set_collection_name(const ::std::string& value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
inline void RemoveObjectFromCollectionReq::set_collection_name(const char* value) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
inline void RemoveObjectFromCollectionReq::set_collection_name(const char* value, size_t size) {
  
  collection_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}
inline ::std::string* RemoveObjectFromCollectionReq::mutable_collection_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
  return collection_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveObjectFromCollectionReq::release_collection_name() {
  
  return collection_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveObjectFromCollectionReq::set_allocated_collection_name(::std::string* collection_name) {
  if (collection_name != NULL) {
    
  } else {
    
  }
  collection_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collection_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.RemoveObjectFromCollectionReq.collection_name)
}

// optional string oid = 3;
inline void RemoveObjectFromCollectionReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveObjectFromCollectionReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveObjectFromCollectionReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
inline void RemoveObjectFromCollectionReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
inline void RemoveObjectFromCollectionReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.RemoveObjectFromCollectionReq.oid)
}
inline ::std::string* RemoveObjectFromCollectionReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.RemoveObjectFromCollectionReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveObjectFromCollectionReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveObjectFromCollectionReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.RemoveObjectFromCollectionReq.oid)
}

// -------------------------------------------------------------------

// RemoveObjectFromCollectionRepl

// optional int32 status = 1;
inline void RemoveObjectFromCollectionRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 RemoveObjectFromCollectionRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.RemoveObjectFromCollectionRepl.status)
  return status_;
}
inline void RemoveObjectFromCollectionRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.RemoveObjectFromCollectionRepl.status)
}

// -------------------------------------------------------------------

// GetNextMDDReq

// optional int32 client_id = 1;
inline void GetNextMDDReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetNextMDDReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDReq.client_id)
  return client_id_;
}
inline void GetNextMDDReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDReq.client_id)
}

// -------------------------------------------------------------------

// GetNextMDDRepl

// optional int32 status = 1;
inline void GetNextMDDRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetNextMDDRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.status)
  return status_;
}
inline void GetNextMDDRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.status)
}

// optional string domain = 2;
inline void GetNextMDDRepl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextMDDRepl::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.domain)
}
inline void GetNextMDDRepl::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.domain)
}
inline void GetNextMDDRepl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.domain)
}
inline ::std::string* GetNextMDDRepl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextMDDRepl::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.domain)
}

// optional string type_name = 3;
inline void GetNextMDDRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextMDDRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.type_name)
}
inline void GetNextMDDRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.type_name)
}
inline void GetNextMDDRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.type_name)
}
inline ::std::string* GetNextMDDRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextMDDRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.type_name)
}

// optional string type_structure = 4;
inline void GetNextMDDRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextMDDRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.type_structure)
}
inline void GetNextMDDRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.type_structure)
}
inline void GetNextMDDRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.type_structure)
}
inline ::std::string* GetNextMDDRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextMDDRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.type_structure)
}

// optional string oid = 5;
inline void GetNextMDDRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextMDDRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.oid)
}
inline void GetNextMDDRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextMDDRepl.oid)
}
inline void GetNextMDDRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextMDDRepl.oid)
}
inline ::std::string* GetNextMDDRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextMDDRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextMDDRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextMDDRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextMDDRepl.oid)
}

// optional int32 current_format = 6;
inline void GetNextMDDRepl::clear_current_format() {
  current_format_ = 0;
}
inline ::google::protobuf::int32 GetNextMDDRepl::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextMDDRepl.current_format)
  return current_format_;
}
inline void GetNextMDDRepl::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextMDDRepl.current_format)
}

// -------------------------------------------------------------------

// GetNextTileReq

// optional int32 client_id = 1;
inline void GetNextTileReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetNextTileReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileReq.client_id)
  return client_id_;
}
inline void GetNextTileReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileReq.client_id)
}

// -------------------------------------------------------------------

// GetNextTileRepl

// optional int32 status = 1;
inline void GetNextTileRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetNextTileRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.status)
  return status_;
}
inline void GetNextTileRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.status)
}

// optional string domain = 2;
inline void GetNextTileRepl::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextTileRepl::domain() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextTileRepl::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.domain)
}
inline void GetNextTileRepl::set_domain(const char* value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextTileRepl.domain)
}
inline void GetNextTileRepl::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextTileRepl.domain)
}
inline ::std::string* GetNextTileRepl::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextTileRepl.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextTileRepl::release_domain() {
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextTileRepl::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextTileRepl.domain)
}

// optional int32 cell_type_length = 3;
inline void GetNextTileRepl::clear_cell_type_length() {
  cell_type_length_ = 0;
}
inline ::google::protobuf::int32 GetNextTileRepl::cell_type_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.cell_type_length)
  return cell_type_length_;
}
inline void GetNextTileRepl::set_cell_type_length(::google::protobuf::int32 value) {
  
  cell_type_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.cell_type_length)
}

// optional int32 current_format = 4;
inline void GetNextTileRepl::clear_current_format() {
  current_format_ = 0;
}
inline ::google::protobuf::int32 GetNextTileRepl::current_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.current_format)
  return current_format_;
}
inline void GetNextTileRepl::set_current_format(::google::protobuf::int32 value) {
  
  current_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.current_format)
}

// optional int32 storage_format = 5;
inline void GetNextTileRepl::clear_storage_format() {
  storage_format_ = 0;
}
inline ::google::protobuf::int32 GetNextTileRepl::storage_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.storage_format)
  return storage_format_;
}
inline void GetNextTileRepl::set_storage_format(::google::protobuf::int32 value) {
  
  storage_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.storage_format)
}

// optional int32 data_length = 6;
inline void GetNextTileRepl::clear_data_length() {
  data_length_ = 0;
}
inline ::google::protobuf::int32 GetNextTileRepl::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.data_length)
  return data_length_;
}
inline void GetNextTileRepl::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.data_length)
}

// optional bytes data = 7;
inline void GetNextTileRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextTileRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextTileRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextTileRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextTileRepl.data)
}
inline void GetNextTileRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextTileRepl.data)
}
inline void GetNextTileRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextTileRepl.data)
}
inline ::std::string* GetNextTileRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextTileRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextTileRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextTileRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextTileRepl.data)
}

// -------------------------------------------------------------------

// EndTransferReq

// optional int32 client_id = 1;
inline void EndTransferReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 EndTransferReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndTransferReq.client_id)
  return client_id_;
}
inline void EndTransferReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndTransferReq.client_id)
}

// -------------------------------------------------------------------

// EndTransferRepl

// optional int32 status = 1;
inline void EndTransferRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 EndTransferRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.EndTransferRepl.status)
  return status_;
}
inline void EndTransferRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.EndTransferRepl.status)
}

// -------------------------------------------------------------------

// InitUpdateReq

// optional int32 client_id = 1;
inline void InitUpdateReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 InitUpdateReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InitUpdateReq.client_id)
  return client_id_;
}
inline void InitUpdateReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InitUpdateReq.client_id)
}

// -------------------------------------------------------------------

// InitUpdateRepl

// optional int32 status = 1;
inline void InitUpdateRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 InitUpdateRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.InitUpdateRepl.status)
  return status_;
}
inline void InitUpdateRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.InitUpdateRepl.status)
}

// -------------------------------------------------------------------

// ExecuteQueryReq

// optional int32 client_id = 1;
inline void ExecuteQueryReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 ExecuteQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryReq.client_id)
  return client_id_;
}
inline void ExecuteQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryReq.client_id)
}

// optional string query = 2;
inline void ExecuteQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryReq.query)
}
inline void ExecuteQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryReq.query)
}
inline void ExecuteQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryReq.query)
}
inline ::std::string* ExecuteQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryReq.query)
}

// -------------------------------------------------------------------

// ExecuteQueryRepl

// optional int32 status = 1;
inline void ExecuteQueryRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ExecuteQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.status)
  return status_;
}
inline void ExecuteQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.status)
}

// optional int32 err_no = 2;
inline void ExecuteQueryRepl::clear_err_no() {
  err_no_ = 0;
}
inline ::google::protobuf::int32 ExecuteQueryRepl::err_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.err_no)
  return err_no_;
}
inline void ExecuteQueryRepl::set_err_no(::google::protobuf::int32 value) {
  
  err_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.err_no)
}

// optional int32 line_no = 3;
inline void ExecuteQueryRepl::clear_line_no() {
  line_no_ = 0;
}
inline ::google::protobuf::int32 ExecuteQueryRepl::line_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.line_no)
  return line_no_;
}
inline void ExecuteQueryRepl::set_line_no(::google::protobuf::int32 value) {
  
  line_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.line_no)
}

// optional int32 col_no = 4;
inline void ExecuteQueryRepl::clear_col_no() {
  col_no_ = 0;
}
inline ::google::protobuf::int32 ExecuteQueryRepl::col_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.col_no)
  return col_no_;
}
inline void ExecuteQueryRepl::set_col_no(::google::protobuf::int32 value) {
  
  col_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.col_no)
}

// optional string token = 5;
inline void ExecuteQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.token)
}
inline void ExecuteQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.token)
}
inline void ExecuteQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.token)
}
inline ::std::string* ExecuteQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.token)
}

// optional string type_name = 6;
inline void ExecuteQueryRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteQueryRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.type_name)
}
inline void ExecuteQueryRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.type_name)
}
inline void ExecuteQueryRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.type_name)
}
inline ::std::string* ExecuteQueryRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteQueryRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.type_name)
}

// optional string type_structure = 7;
inline void ExecuteQueryRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteQueryRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteQueryRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteQueryRepl.type_structure)
}
inline void ExecuteQueryRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteQueryRepl.type_structure)
}
inline void ExecuteQueryRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteQueryRepl.type_structure)
}
inline ::std::string* ExecuteQueryRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteQueryRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteQueryRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteQueryRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteQueryRepl.type_structure)
}

// -------------------------------------------------------------------

// ExecuteHttpQueryReq

// optional int32 client_id = 1;
inline void ExecuteHttpQueryReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 ExecuteHttpQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.client_id)
  return client_id_;
}
inline void ExecuteHttpQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.client_id)
}

// optional bytes data = 2;
inline void ExecuteHttpQueryReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteHttpQueryReq::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteHttpQueryReq::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.data)
}
inline void ExecuteHttpQueryReq::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteHttpQueryReq.data)
}
inline void ExecuteHttpQueryReq::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteHttpQueryReq.data)
}
inline ::std::string* ExecuteHttpQueryReq::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteHttpQueryReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteHttpQueryReq::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteHttpQueryReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteHttpQueryReq.data)
}

// optional int32 data_length = 3;
inline void ExecuteHttpQueryReq::clear_data_length() {
  data_length_ = 0;
}
inline ::google::protobuf::int32 ExecuteHttpQueryReq::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryReq.data_length)
  return data_length_;
}
inline void ExecuteHttpQueryReq::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryReq.data_length)
}

// -------------------------------------------------------------------

// ExecuteHttpQueryRepl

// optional bytes data = 1;
inline void ExecuteHttpQueryRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteHttpQueryRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteHttpQueryRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteHttpQueryRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteHttpQueryRepl.data)
}
inline void ExecuteHttpQueryRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteHttpQueryRepl.data)
}
inline void ExecuteHttpQueryRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteHttpQueryRepl.data)
}
inline ::std::string* ExecuteHttpQueryRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteHttpQueryRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteHttpQueryRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteHttpQueryRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteHttpQueryRepl.data)
}

// -------------------------------------------------------------------

// GetNextElementReq

// optional int32 client_id = 1;
inline void GetNextElementReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetNextElementReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementReq.client_id)
  return client_id_;
}
inline void GetNextElementReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementReq.client_id)
}

// -------------------------------------------------------------------

// GetNextElementRepl

// optional int32 status = 2;
inline void GetNextElementRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetNextElementRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.status)
  return status_;
}
inline void GetNextElementRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.status)
}

// optional int32 data_length = 3;
inline void GetNextElementRepl::clear_data_length() {
  data_length_ = 0;
}
inline ::google::protobuf::int32 GetNextElementRepl::data_length() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.data_length)
  return data_length_;
}
inline void GetNextElementRepl::set_data_length(::google::protobuf::int32 value) {
  
  data_length_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.data_length)
}

// optional bytes data = 4;
inline void GetNextElementRepl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNextElementRepl::data() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNextElementRepl.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextElementRepl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNextElementRepl.data)
}
inline void GetNextElementRepl::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNextElementRepl.data)
}
inline void GetNextElementRepl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNextElementRepl.data)
}
inline ::std::string* GetNextElementRepl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNextElementRepl.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNextElementRepl::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNextElementRepl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNextElementRepl.data)
}

// -------------------------------------------------------------------

// ExecuteUpdateQueryReq

// optional int32 client_id = 1;
inline void ExecuteUpdateQueryReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 ExecuteUpdateQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryReq.client_id)
  return client_id_;
}
inline void ExecuteUpdateQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryReq.client_id)
}

// optional string query = 2;
inline void ExecuteUpdateQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteUpdateQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteUpdateQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryReq.query)
}
inline void ExecuteUpdateQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteUpdateQueryReq.query)
}
inline void ExecuteUpdateQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteUpdateQueryReq.query)
}
inline ::std::string* ExecuteUpdateQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteUpdateQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteUpdateQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteUpdateQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteUpdateQueryReq.query)
}

// -------------------------------------------------------------------

// ExecuteUpdateQueryRepl

// optional int32 status = 1;
inline void ExecuteUpdateQueryRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ExecuteUpdateQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.status)
  return status_;
}
inline void ExecuteUpdateQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.status)
}

// optional int32 erroNo = 2;
inline void ExecuteUpdateQueryRepl::clear_errono() {
  errono_ = 0;
}
inline ::google::protobuf::int32 ExecuteUpdateQueryRepl::errono() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.erroNo)
  return errono_;
}
inline void ExecuteUpdateQueryRepl::set_errono(::google::protobuf::int32 value) {
  
  errono_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.erroNo)
}

// optional int32 lineNo = 3;
inline void ExecuteUpdateQueryRepl::clear_lineno() {
  lineno_ = 0;
}
inline ::google::protobuf::int32 ExecuteUpdateQueryRepl::lineno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.lineNo)
  return lineno_;
}
inline void ExecuteUpdateQueryRepl::set_lineno(::google::protobuf::int32 value) {
  
  lineno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.lineNo)
}

// optional int32 colNo = 4;
inline void ExecuteUpdateQueryRepl::clear_colno() {
  colno_ = 0;
}
inline ::google::protobuf::int32 ExecuteUpdateQueryRepl::colno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.colNo)
  return colno_;
}
inline void ExecuteUpdateQueryRepl::set_colno(::google::protobuf::int32 value) {
  
  colno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.colNo)
}

// optional string token = 5;
inline void ExecuteUpdateQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteUpdateQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteUpdateQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteUpdateQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteUpdateQueryRepl.token)
}
inline void ExecuteUpdateQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteUpdateQueryRepl.token)
}
inline void ExecuteUpdateQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteUpdateQueryRepl.token)
}
inline ::std::string* ExecuteUpdateQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteUpdateQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteUpdateQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteUpdateQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteUpdateQueryRepl.token)
}

// -------------------------------------------------------------------

// ExecuteInsertQueryReq

// optional int32 client_id = 1;
inline void ExecuteInsertQueryReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 ExecuteInsertQueryReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryReq.client_id)
  return client_id_;
}
inline void ExecuteInsertQueryReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryReq.client_id)
}

// optional string query = 2;
inline void ExecuteInsertQueryReq::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteInsertQueryReq::query() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryReq.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryReq::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryReq.query)
}
inline void ExecuteInsertQueryReq::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryReq.query)
}
inline void ExecuteInsertQueryReq::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryReq.query)
}
inline ::std::string* ExecuteInsertQueryReq::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryReq.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteInsertQueryReq::release_query() {
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryReq::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryReq.query)
}

// -------------------------------------------------------------------

// ExecuteInsertQueryRepl

// optional int32 status = 1;
inline void ExecuteInsertQueryRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ExecuteInsertQueryRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.status)
  return status_;
}
inline void ExecuteInsertQueryRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.status)
}

// optional int32 erroNo = 2;
inline void ExecuteInsertQueryRepl::clear_errono() {
  errono_ = 0;
}
inline ::google::protobuf::int32 ExecuteInsertQueryRepl::errono() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.erroNo)
  return errono_;
}
inline void ExecuteInsertQueryRepl::set_errono(::google::protobuf::int32 value) {
  
  errono_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.erroNo)
}

// optional int32 lineNo = 3;
inline void ExecuteInsertQueryRepl::clear_lineno() {
  lineno_ = 0;
}
inline ::google::protobuf::int32 ExecuteInsertQueryRepl::lineno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.lineNo)
  return lineno_;
}
inline void ExecuteInsertQueryRepl::set_lineno(::google::protobuf::int32 value) {
  
  lineno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.lineNo)
}

// optional int32 colNo = 4;
inline void ExecuteInsertQueryRepl::clear_colno() {
  colno_ = 0;
}
inline ::google::protobuf::int32 ExecuteInsertQueryRepl::colno() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.colNo)
  return colno_;
}
inline void ExecuteInsertQueryRepl::set_colno(::google::protobuf::int32 value) {
  
  colno_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.colNo)
}

// optional string token = 5;
inline void ExecuteInsertQueryRepl::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteInsertQueryRepl::token() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.token)
}
inline void ExecuteInsertQueryRepl::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.token)
}
inline void ExecuteInsertQueryRepl::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.token)
}
inline ::std::string* ExecuteInsertQueryRepl::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteInsertQueryRepl::release_token() {
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.token)
}

// optional string type_name = 6;
inline void ExecuteInsertQueryRepl::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteInsertQueryRepl::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
inline void ExecuteInsertQueryRepl::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
inline void ExecuteInsertQueryRepl::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.type_name)
}
inline ::std::string* ExecuteInsertQueryRepl::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteInsertQueryRepl::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.type_name)
}

// optional string type_structure = 7;
inline void ExecuteInsertQueryRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteInsertQueryRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ExecuteInsertQueryRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
inline void ExecuteInsertQueryRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
inline void ExecuteInsertQueryRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}
inline ::std::string* ExecuteInsertQueryRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ExecuteInsertQueryRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteInsertQueryRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteInsertQueryRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ExecuteInsertQueryRepl.type_structure)
}

// -------------------------------------------------------------------

// GetNewOidReq

// optional int32 client_id = 1;
inline void GetNewOidReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetNewOidReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidReq.client_id)
  return client_id_;
}
inline void GetNewOidReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidReq.client_id)
}

// optional int32 object_type = 2;
inline void GetNewOidReq::clear_object_type() {
  object_type_ = 0;
}
inline ::google::protobuf::int32 GetNewOidReq::object_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidReq.object_type)
  return object_type_;
}
inline void GetNewOidReq::set_object_type(::google::protobuf::int32 value) {
  
  object_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidReq.object_type)
}

// -------------------------------------------------------------------

// GetNewOidRepl

// optional string oid = 1;
inline void GetNewOidRepl::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNewOidRepl::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetNewOidRepl.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNewOidRepl::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetNewOidRepl.oid)
}
inline void GetNewOidRepl::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetNewOidRepl.oid)
}
inline void GetNewOidRepl::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetNewOidRepl.oid)
}
inline ::std::string* GetNewOidRepl::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetNewOidRepl.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNewOidRepl::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNewOidRepl::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetNewOidRepl.oid)
}

// -------------------------------------------------------------------

// GetObjectTypeReq

// optional int32 client_id = 1;
inline void GetObjectTypeReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetObjectTypeReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeReq.client_id)
  return client_id_;
}
inline void GetObjectTypeReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeReq.client_id)
}

// optional string oid = 2;
inline void GetObjectTypeReq::clear_oid() {
  oid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetObjectTypeReq::oid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeReq.oid)
  return oid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectTypeReq::set_oid(const ::std::string& value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeReq.oid)
}
inline void GetObjectTypeReq::set_oid(const char* value) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetObjectTypeReq.oid)
}
inline void GetObjectTypeReq::set_oid(const char* value, size_t size) {
  
  oid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetObjectTypeReq.oid)
}
inline ::std::string* GetObjectTypeReq::mutable_oid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetObjectTypeReq.oid)
  return oid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetObjectTypeReq::release_oid() {
  
  return oid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectTypeReq::set_allocated_oid(::std::string* oid) {
  if (oid != NULL) {
    
  } else {
    
  }
  oid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetObjectTypeReq.oid)
}

// -------------------------------------------------------------------

// GetObjectTypeRepl

// optional int32 status = 1;
inline void GetObjectTypeRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetObjectTypeRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeRepl.status)
  return status_;
}
inline void GetObjectTypeRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeRepl.status)
}

// optional int32 object_type = 2;
inline void GetObjectTypeRepl::clear_object_type() {
  object_type_ = 0;
}
inline ::google::protobuf::int32 GetObjectTypeRepl::object_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetObjectTypeRepl.object_type)
  return object_type_;
}
inline void GetObjectTypeRepl::set_object_type(::google::protobuf::int32 value) {
  
  object_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetObjectTypeRepl.object_type)
}

// -------------------------------------------------------------------

// GetTypeStructureReq

// optional int32 client_id = 1;
inline void GetTypeStructureReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 GetTypeStructureReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.client_id)
  return client_id_;
}
inline void GetTypeStructureReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.client_id)
}

// optional string type_name = 2;
inline void GetTypeStructureReq::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTypeStructureReq::type_name() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.type_name)
  return type_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTypeStructureReq::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.type_name)
}
inline void GetTypeStructureReq::set_type_name(const char* value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetTypeStructureReq.type_name)
}
inline void GetTypeStructureReq::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetTypeStructureReq.type_name)
}
inline ::std::string* GetTypeStructureReq::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetTypeStructureReq.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTypeStructureReq::release_type_name() {
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTypeStructureReq::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetTypeStructureReq.type_name)
}

// optional int32 type_type = 3;
inline void GetTypeStructureReq::clear_type_type() {
  type_type_ = 0;
}
inline ::google::protobuf::int32 GetTypeStructureReq::type_type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureReq.type_type)
  return type_type_;
}
inline void GetTypeStructureReq::set_type_type(::google::protobuf::int32 value) {
  
  type_type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureReq.type_type)
}

// -------------------------------------------------------------------

// GetTypeStructureRepl

// optional int32 status = 1;
inline void GetTypeStructureRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetTypeStructureRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureRepl.status)
  return status_;
}
inline void GetTypeStructureRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureRepl.status)
}

// optional string type_structure = 2;
inline void GetTypeStructureRepl::clear_type_structure() {
  type_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetTypeStructureRepl::type_structure() const {
  // @@protoc_insertion_point(field_get:rasnet.service.GetTypeStructureRepl.type_structure)
  return type_structure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTypeStructureRepl::set_type_structure(const ::std::string& value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.GetTypeStructureRepl.type_structure)
}
inline void GetTypeStructureRepl::set_type_structure(const char* value) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.GetTypeStructureRepl.type_structure)
}
inline void GetTypeStructureRepl::set_type_structure(const char* value, size_t size) {
  
  type_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.GetTypeStructureRepl.type_structure)
}
inline ::std::string* GetTypeStructureRepl::mutable_type_structure() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.GetTypeStructureRepl.type_structure)
  return type_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetTypeStructureRepl::release_type_structure() {
  
  return type_structure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetTypeStructureRepl::set_allocated_type_structure(::std::string* type_structure) {
  if (type_structure != NULL) {
    
  } else {
    
  }
  type_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_structure);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.GetTypeStructureRepl.type_structure)
}

// -------------------------------------------------------------------

// SetFormatReq

// optional int32 client_id = 1;
inline void SetFormatReq::clear_client_id() {
  client_id_ = 0;
}
inline ::google::protobuf::int32 SetFormatReq::client_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.client_id)
  return client_id_;
}
inline void SetFormatReq::set_client_id(::google::protobuf::int32 value) {
  
  client_id_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.client_id)
}

// optional int32 transfer_format = 2;
inline void SetFormatReq::clear_transfer_format() {
  transfer_format_ = 0;
}
inline ::google::protobuf::int32 SetFormatReq::transfer_format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.transfer_format)
  return transfer_format_;
}
inline void SetFormatReq::set_transfer_format(::google::protobuf::int32 value) {
  
  transfer_format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.transfer_format)
}

// optional int32 format = 3;
inline void SetFormatReq::clear_format() {
  format_ = 0;
}
inline ::google::protobuf::int32 SetFormatReq::format() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.format)
  return format_;
}
inline void SetFormatReq::set_format(::google::protobuf::int32 value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.format)
}

// optional string format_params = 4;
inline void SetFormatReq::clear_format_params() {
  format_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetFormatReq::format_params() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatReq.format_params)
  return format_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFormatReq::set_format_params(const ::std::string& value) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatReq.format_params)
}
inline void SetFormatReq::set_format_params(const char* value) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.SetFormatReq.format_params)
}
inline void SetFormatReq::set_format_params(const char* value, size_t size) {
  
  format_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.SetFormatReq.format_params)
}
inline ::std::string* SetFormatReq::mutable_format_params() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.SetFormatReq.format_params)
  return format_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetFormatReq::release_format_params() {
  
  return format_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetFormatReq::set_allocated_format_params(::std::string* format_params) {
  if (format_params != NULL) {
    
  } else {
    
  }
  format_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format_params);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.SetFormatReq.format_params)
}

// -------------------------------------------------------------------

// SetFormatRepl

// optional int32 status = 2;
inline void SetFormatRepl::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 SetFormatRepl::status() const {
  // @@protoc_insertion_point(field_get:rasnet.service.SetFormatRepl.status)
  return status_;
}
inline void SetFormatRepl::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.SetFormatRepl.status)
}

// -------------------------------------------------------------------

// KeepAliveRequest

// optional string client_uuid = 1;
inline void KeepAliveRequest::clear_client_uuid() {
  client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeepAliveRequest::client_uuid() const {
  // @@protoc_insertion_point(field_get:rasnet.service.KeepAliveRequest.client_uuid)
  return client_uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeepAliveRequest::set_client_uuid(const ::std::string& value) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.KeepAliveRequest.client_uuid)
}
inline void KeepAliveRequest::set_client_uuid(const char* value) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.KeepAliveRequest.client_uuid)
}
inline void KeepAliveRequest::set_client_uuid(const char* value, size_t size) {
  
  client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.KeepAliveRequest.client_uuid)
}
inline ::std::string* KeepAliveRequest::mutable_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.KeepAliveRequest.client_uuid)
  return client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeepAliveRequest::release_client_uuid() {
  
  return client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeepAliveRequest::set_allocated_client_uuid(::std::string* client_uuid) {
  if (client_uuid != NULL) {
    
  } else {
    
  }
  client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_uuid);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.KeepAliveRequest.client_uuid)
}

// optional string session_id = 2;
inline void KeepAliveRequest::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeepAliveRequest::session_id() const {
  // @@protoc_insertion_point(field_get:rasnet.service.KeepAliveRequest.session_id)
  return session_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeepAliveRequest::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.KeepAliveRequest.session_id)
}
inline void KeepAliveRequest::set_session_id(const char* value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.KeepAliveRequest.session_id)
}
inline void KeepAliveRequest::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.KeepAliveRequest.session_id)
}
inline ::std::string* KeepAliveRequest::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.KeepAliveRequest.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeepAliveRequest::release_session_id() {
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeepAliveRequest::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.KeepAliveRequest.session_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace rasnet

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5frassrvr_5fservice_2eproto__INCLUDED
