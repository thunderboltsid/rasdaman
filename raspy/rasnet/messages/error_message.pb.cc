// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "error_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rasnet {
namespace service {

namespace {

const ::google::protobuf::Descriptor* ErrorMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorMessage_ErrorMessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_error_5fmessage_2eproto() {
  protobuf_AddDesc_error_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "error_message.proto");
  GOOGLE_CHECK(file != NULL);
  ErrorMessage_descriptor_ = file->message_type(0);
  static const int ErrorMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, error_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, error_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, type_),
  };
  ErrorMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorMessage_descriptor_,
      ErrorMessage::default_instance_,
      ErrorMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, _is_default_instance_));
  ErrorMessage_ErrorMessageType_descriptor_ = ErrorMessage_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_error_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorMessage_descriptor_, &ErrorMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_error_5fmessage_2eproto() {
  delete ErrorMessage::default_instance_;
  delete ErrorMessage_reflection_;
}

void protobuf_AddDesc_error_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023error_message.proto\022\016rasnet.service\"\265\001"
    "\n\014ErrorMessage\022\020\n\010error_no\030\001 \001(\r\022\014\n\004kind"
    "\030\002 \001(\005\022\022\n\nerror_text\030\003 \001(\t\022;\n\004type\030\004 \001(\016"
    "2-.rasnet.service.ErrorMessage.ErrorMess"
    "ageType\"4\n\020ErrorMessageType\022\n\n\006RERROR\020\000\022"
    "\007\n\003STL\020\001\022\013\n\007UNKNOWN\020\002B#\n\033org.rasdaman.ra"
    "snet.service\200\001\000\210\001\000b\006proto3", 266);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "error_message.proto", &protobuf_RegisterTypes);
  ErrorMessage::default_instance_ = new ErrorMessage();
  ErrorMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_error_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_error_5fmessage_2eproto {
  StaticDescriptorInitializer_error_5fmessage_2eproto() {
    protobuf_AddDesc_error_5fmessage_2eproto();
  }
} static_descriptor_initializer_error_5fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ErrorMessage_ErrorMessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMessage_ErrorMessageType_descriptor_;
}
bool ErrorMessage_ErrorMessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ErrorMessage_ErrorMessageType ErrorMessage::RERROR;
const ErrorMessage_ErrorMessageType ErrorMessage::STL;
const ErrorMessage_ErrorMessageType ErrorMessage::UNKNOWN;
const ErrorMessage_ErrorMessageType ErrorMessage::ErrorMessageType_MIN;
const ErrorMessage_ErrorMessageType ErrorMessage::ErrorMessageType_MAX;
const int ErrorMessage::ErrorMessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMessage::kErrorNoFieldNumber;
const int ErrorMessage::kKindFieldNumber;
const int ErrorMessage::kErrorTextFieldNumber;
const int ErrorMessage::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMessage::ErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rasnet.service.ErrorMessage)
}

void ErrorMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rasnet.service.ErrorMessage)
}

void ErrorMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_no_ = 0u;
  kind_ = 0;
  error_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:rasnet.service.ErrorMessage)
  SharedDtor();
}

void ErrorMessage::SharedDtor() {
  error_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ErrorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMessage_descriptor_;
}

const ErrorMessage& ErrorMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_error_5fmessage_2eproto();
  return *default_instance_;
}

ErrorMessage* ErrorMessage::default_instance_ = NULL;

ErrorMessage* ErrorMessage::New(::google::protobuf::Arena* arena) const {
  ErrorMessage* n = new ErrorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ErrorMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(error_no_, kind_);
  error_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool ErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rasnet.service.ErrorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 error_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_kind;
        break;
      }

      // optional int32 kind = 2;
      case 2: {
        if (tag == 16) {
         parse_kind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_text;
        break;
      }

      // optional string error_text = 3;
      case 3: {
        if (tag == 26) {
         parse_error_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_text().data(), this->error_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rasnet.service.ErrorMessage.error_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rasnet::service::ErrorMessage_ErrorMessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rasnet.service.ErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rasnet.service.ErrorMessage)
  return false;
#undef DO_
}

void ErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rasnet.service.ErrorMessage)
  // optional uint32 error_no = 1;
  if (this->error_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_no(), output);
  }

  // optional int32 kind = 2;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kind(), output);
  }

  // optional string error_text = 3;
  if (this->error_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_text().data(), this->error_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ErrorMessage.error_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_text(), output);
  }

  // optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:rasnet.service.ErrorMessage)
}

::google::protobuf::uint8* ErrorMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rasnet.service.ErrorMessage)
  // optional uint32 error_no = 1;
  if (this->error_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_no(), target);
  }

  // optional int32 kind = 2;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->kind(), target);
  }

  // optional string error_text = 3;
  if (this->error_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_text().data(), this->error_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rasnet.service.ErrorMessage.error_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_text(), target);
  }

  // optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rasnet.service.ErrorMessage)
  return target;
}

int ErrorMessage::ByteSize() const {
  int total_size = 0;

  // optional uint32 error_no = 1;
  if (this->error_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_no());
  }

  // optional int32 kind = 2;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  // optional string error_text = 3;
  if (this->error_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_text());
  }

  // optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.error_no() != 0) {
    set_error_no(from.error_no());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.error_text().size() > 0) {

    error_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_text_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {

  return true;
}

void ErrorMessage::Swap(ErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMessage::InternalSwap(ErrorMessage* other) {
  std::swap(error_no_, other->error_no_);
  std::swap(kind_, other->kind_);
  error_text_.Swap(&other->error_text_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorMessage_descriptor_;
  metadata.reflection = ErrorMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMessage

// optional uint32 error_no = 1;
void ErrorMessage::clear_error_no() {
  error_no_ = 0u;
}
 ::google::protobuf::uint32 ErrorMessage::error_no() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.error_no)
  return error_no_;
}
 void ErrorMessage::set_error_no(::google::protobuf::uint32 value) {
  
  error_no_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.error_no)
}

// optional int32 kind = 2;
void ErrorMessage::clear_kind() {
  kind_ = 0;
}
 ::google::protobuf::int32 ErrorMessage::kind() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.kind)
  return kind_;
}
 void ErrorMessage::set_kind(::google::protobuf::int32 value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.kind)
}

// optional string error_text = 3;
void ErrorMessage::clear_error_text() {
  error_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ErrorMessage::error_text() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.error_text)
  return error_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ErrorMessage::set_error_text(const ::std::string& value) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.error_text)
}
 void ErrorMessage::set_error_text(const char* value) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rasnet.service.ErrorMessage.error_text)
}
 void ErrorMessage::set_error_text(const char* value, size_t size) {
  
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rasnet.service.ErrorMessage.error_text)
}
 ::std::string* ErrorMessage::mutable_error_text() {
  
  // @@protoc_insertion_point(field_mutable:rasnet.service.ErrorMessage.error_text)
  return error_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ErrorMessage::release_error_text() {
  
  return error_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ErrorMessage::set_allocated_error_text(::std::string* error_text) {
  if (error_text != NULL) {
    
  } else {
    
  }
  error_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_text);
  // @@protoc_insertion_point(field_set_allocated:rasnet.service.ErrorMessage.error_text)
}

// optional .rasnet.service.ErrorMessage.ErrorMessageType type = 4;
void ErrorMessage::clear_type() {
  type_ = 0;
}
 ::rasnet::service::ErrorMessage_ErrorMessageType ErrorMessage::type() const {
  // @@protoc_insertion_point(field_get:rasnet.service.ErrorMessage.type)
  return static_cast< ::rasnet::service::ErrorMessage_ErrorMessageType >(type_);
}
 void ErrorMessage::set_type(::rasnet::service::ErrorMessage_ErrorMessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rasnet.service.ErrorMessage.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace rasnet

// @@protoc_insertion_point(global_scope)
